// Generated by Detonate Productions Declaration Generation, do not edit manually!
@file:Suppress(
  "INTERFACE_WITH_SUPERCLASS",
  "OVERRIDING_FINAL_MEMBER",
  "RETURN_TYPE_MISMATCH_ON_OVERRIDE",
  "CONFLICTING_OVERLOADS",
)

package ue


import org.w3c.dom.events.Event


@JsName("MaterialExpressionGIReplace")
public open external class MaterialExpressionGiReplace(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("StaticIndirect")
  public open var staticIndirect: ExpressionInput

  @JsName("DynamicIndirect")
  public open var dynamicIndirect: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionGiReplace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionGiReplace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionGiReplace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionGiReplace

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionGiReplace

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionGiReplace
  }
}

public open external class MaterialExpressionHairAttributes(
  outer: UObject,
) : MaterialExpression {
  @JsName("bUseTangentSpace")
  public open var useTangentSpace: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionHairAttributes

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionHairAttributes

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionHairAttributes

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionHairAttributes

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionHairAttributes

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionHairAttributes
  }
}

public open external class MaterialExpressionHairColor(
  outer: UObject,
) : MaterialExpression {
  @JsName("Melanin")
  public open var melanin: ExpressionInput

  @JsName("Redness")
  public open var redness: ExpressionInput

  @JsName("DyeColor")
  public open var dyeColor: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionHairColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionHairColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionHairColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionHairColor

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionHairColor

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionHairColor
  }
}

public open external class MaterialExpressionIf(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("AGreaterThanB")
  public open var aGreaterThanB: ExpressionInput

  @JsName("AEqualsB")
  public open var aEqualsB: ExpressionInput

  @JsName("ALessThanB")
  public open var aLessThanB: ExpressionInput

  @JsName("EqualsThreshold")
  public open var equalsThreshold: Number

  @JsName("ConstB")
  public open var constB: Number

  @JsName("ConstAEqualsB")
  public open var constAEqualsB: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionIf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionIf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionIf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionIf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionIf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionIf
  }
}

public open external class MaterialExpressionIfThenElse(
  outer: UObject,
) : MaterialExpression {
  public open var then: ExpressionExecOutput

  public open var `else`: ExpressionExecOutput

  @JsName("Condition")
  public open var condition: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionIfThenElse

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionIfThenElse

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionIfThenElse

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionIfThenElse

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionIfThenElse

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionIfThenElse
  }
}

public open external class MaterialExpressionInverseLinearInterpolate(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("Value")
  public open var value: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  @JsName("ConstValue")
  public open var constValue: Number

  @JsName("bClampResult")
  public open var clampResult: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionInverseLinearInterpolate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionInverseLinearInterpolate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionInverseLinearInterpolate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionInverseLinearInterpolate

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionInverseLinearInterpolate

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionInverseLinearInterpolate
  }
}

public open external class MaterialExpressionLightmapUVs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLightmapUVs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLightmapUVs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLightmapUVs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLightmapUVs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLightmapUVs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLightmapUVs
  }
}

public open external class MaterialExpressionLightmassReplace(
  outer: UObject,
) : MaterialExpression {
  @JsName("Realtime")
  public open var realtime: ExpressionInput

  @JsName("Lightmass")
  public open var lightmass: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLightmassReplace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLightmassReplace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLightmassReplace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLightmassReplace

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLightmassReplace

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLightmassReplace
  }
}

public open external class MaterialExpressionLightVector(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLightVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLightVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLightVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLightVector

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLightVector

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLightVector
  }
}

public open external class MaterialExpressionLinearInterpolate(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("Alpha")
  public open var alpha: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  @JsName("ConstAlpha")
  public open var constAlpha: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLinearInterpolate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLinearInterpolate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLinearInterpolate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLinearInterpolate

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLinearInterpolate

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLinearInterpolate
  }
}

public open external class MaterialExpressionLogarithm10(
  outer: UObject,
) : MaterialExpression {
  @JsName("X")
  public open var x: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLogarithm10

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLogarithm10

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLogarithm10

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLogarithm10

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLogarithm10

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLogarithm10
  }
}

public open external class MaterialExpressionLogarithm2(
  outer: UObject,
) : MaterialExpression {
  @JsName("X")
  public open var x: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionLogarithm2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionLogarithm2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionLogarithm2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionLogarithm2

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionLogarithm2

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionLogarithm2
  }
}

public open external class MaterialExpressionMakeMaterialAttributes(
  outer: UObject,
) : MaterialExpression {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("Metallic")
  public open var metallic: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Anisotropy")
  public open var anisotropy: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("Opacity")
  public open var opacity: ExpressionInput

  @JsName("OpacityMask")
  public open var opacityMask: ExpressionInput

  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("Tangent")
  public open var tangent: ExpressionInput

  @JsName("WorldPositionOffset")
  public open var worldPositionOffset: ExpressionInput

  @JsName("SubsurfaceColor")
  public open var subsurfaceColor: ExpressionInput

  @JsName("ClearCoat")
  public open var clearCoat: ExpressionInput

  @JsName("ClearCoatRoughness")
  public open var clearCoatRoughness: ExpressionInput

  @JsName("AmbientOcclusion")
  public open var ambientOcclusion: ExpressionInput

  @JsName("Refraction")
  public open var refraction: ExpressionInput

  @JsName("CustomizedUVs")
  public open var customizedUVs: ExpressionInput

  @JsName("PixelDepthOffset")
  public open var pixelDepthOffset: ExpressionInput

  @JsName("ShadingModel")
  public open var shadingModel: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMakeMaterialAttributes

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMakeMaterialAttributes

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMakeMaterialAttributes

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMakeMaterialAttributes

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMakeMaterialAttributes

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMakeMaterialAttributes
  }
}

@JsName("MaterialExpressionMapARPassthroughCameraUV")
public open external class MaterialExpressionMapArPassthroughCameraUv(
  outer: UObject,
) : MaterialExpression {
  @JsName("Coordinates")
  public open var coordinates: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMapArPassthroughCameraUv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionMapArPassthroughCameraUv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMapArPassthroughCameraUv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMapArPassthroughCameraUv

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMapArPassthroughCameraUv

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMapArPassthroughCameraUv
  }
}

public open external class MaterialExpressionMaterialAttributeLayers(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: MaterialAttributesInput

  @JsName("DefaultLayers")
  public open var defaultLayers: MaterialLayersFunctions

  @JsName("LayerCallers")
  public open var layerCallers: Array<MaterialExpressionMaterialFunctionCall>

  @JsName("NumActiveLayerCallers")
  public open var numActiveLayerCallers: Number

  @JsName("BlendCallers")
  public open var blendCallers: Array<MaterialExpressionMaterialFunctionCall>

  @JsName("NumActiveBlendCallers")
  public open var numActiveBlendCallers: Number

  @JsName("bIsLayerGraphBuilt")
  public open var isLayerGraphBuilt: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMaterialAttributeLayers

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMaterialAttributeLayers

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMaterialAttributeLayers

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMaterialAttributeLayers

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMaterialAttributeLayers

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMaterialAttributeLayers
  }
}

public open external class MaterialExpressionMaterialLayerOutput(
  outer: UObject,
) : MaterialExpressionFunctionOutput {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMaterialLayerOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMaterialLayerOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMaterialLayerOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMaterialLayerOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMaterialLayerOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMaterialLayerOutput
  }
}

public open external class MaterialExpressionMaterialProxyReplace(
  outer: UObject,
) : MaterialExpression {
  @JsName("Realtime")
  public open var realtime: ExpressionInput

  @JsName("MaterialProxy")
  public open var materialProxy: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMaterialProxyReplace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMaterialProxyReplace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMaterialProxyReplace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMaterialProxyReplace

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMaterialProxyReplace

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMaterialProxyReplace
  }
}

public open external class MaterialExpressionMax(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMax

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMax

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMax

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMax

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMax

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMax
  }
}

public open external class MaterialExpressionMin(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMin

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMin

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMin

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMin

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMin

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMin
  }
}

public open external class MaterialExpressionMultiply(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionMultiply

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionMultiply

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionMultiply

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionMultiply

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionMultiply

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionMultiply
  }
}

public open external class MaterialExpressionNamedRerouteBase(
  outer: UObject,
) : MaterialExpressionRerouteBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionNamedRerouteBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionNamedRerouteBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionNamedRerouteBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionNamedRerouteBase

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionNamedRerouteBase

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionNamedRerouteBase
  }
}

public open external class MaterialExpressionNamedRerouteDeclaration(
  outer: UObject,
) : MaterialExpressionNamedRerouteBase {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("Name")
  public open var name: String

  @JsName("NodeColor")
  public open var nodeColor: LinearColor

  @JsName("VariableGuid")
  public open var variableGuid: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionNamedRerouteDeclaration

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionNamedRerouteDeclaration

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionNamedRerouteDeclaration

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionNamedRerouteDeclaration

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionNamedRerouteDeclaration

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionNamedRerouteDeclaration
  }
}

public open external class MaterialExpressionNamedRerouteUsage(
  outer: UObject,
) : MaterialExpressionNamedRerouteBase {
  @JsName("Declaration")
  public open var declaration: MaterialExpressionNamedRerouteDeclaration

  @JsName("DeclarationGuid")
  public open var declarationGuid: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionNamedRerouteUsage

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionNamedRerouteUsage

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionNamedRerouteUsage

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionNamedRerouteUsage

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionNamedRerouteUsage

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionNamedRerouteUsage
  }
}

@JsName("ENoiseFunction")
public external object NoiseFunction {
  @JsName("NOISEFUNCTION_SimplexTex")
  public var SimplexTex: String

  @JsName("NOISEFUNCTION_GradientTex")
  public var GradientTex: String

  @JsName("NOISEFUNCTION_GradientTex3D")
  public var GradientTex3d: String

  @JsName("NOISEFUNCTION_GradientALU")
  public var GradientAlu: String

  @JsName("NOISEFUNCTION_ValueALU")
  public var ValueAlu: String

  @JsName("NOISEFUNCTION_VoronoiALU")
  public var VoronoiAlu: String

  @JsName("NOISEFUNCTION_MAX")
  public var Max: String
}

public open external class MaterialExpressionNoise(
  outer: UObject,
) : MaterialExpression {
  public open var position: ExpressionInput

  @JsName("FilterWidth")
  public open var filterWidth: ExpressionInput

  @JsName("Scale")
  public open var scale: Number

  @JsName("Quality")
  public open var quality: Number

  @JsName("NoiseFunction")
  public open var noiseFunction: String

  @JsName("bTurbulence")
  public open var turbulence: Boolean

  @JsName("Levels")
  public open var levels: Number

  @JsName("OutputMin")
  public open var outputMin: Number

  @JsName("OutputMax")
  public open var outputMax: Number

  @JsName("LevelScale")
  public open var levelScale: Number

  @JsName("bTiling")
  public open var tiling: Boolean

  @JsName("RepeatSize")
  public open var repeatSize: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionNoise

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionNoise

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionNoise

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionNoise

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionNoise

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionNoise
  }
}

public open external class MaterialExpressionNormalize(
  outer: UObject,
) : MaterialExpression {
  @JsName("VectorInput")
  public open var vectorInput: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionNormalize

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionNormalize

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionNormalize

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionNormalize

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionNormalize

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionNormalize
  }
}

public open external class MaterialExpressionObjectBounds(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionObjectBounds

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionObjectBounds

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionObjectBounds

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionObjectBounds

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionObjectBounds

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionObjectBounds
  }
}

public open external class MaterialExpressionObjectOrientation(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionObjectOrientation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionObjectOrientation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionObjectOrientation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionObjectOrientation

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionObjectOrientation

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionObjectOrientation
  }
}

@JsName("MaterialExpressionObjectPositionWS")
public open external class MaterialExpressionObjectPositionWs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionObjectPositionWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionObjectPositionWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionObjectPositionWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionObjectPositionWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionObjectPositionWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionObjectPositionWs
  }
}

public open external class MaterialExpressionObjectRadius(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionObjectRadius

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionObjectRadius

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionObjectRadius

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionObjectRadius

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionObjectRadius

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionObjectRadius
  }
}

public open external class MaterialExpressionOneMinus(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionOneMinus

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionOneMinus

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionOneMinus

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionOneMinus

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionOneMinus

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionOneMinus
  }
}

public open external class MaterialExpressionPanner(
  outer: UObject,
) : MaterialExpression {
  @JsName("Coordinate")
  public open var coordinate: ExpressionInput

  @JsName("Time")
  public open var time: ExpressionInput

  @JsName("Speed")
  public open var speed: ExpressionInput

  @JsName("SpeedX")
  public open var speedX: Number

  @JsName("SpeedY")
  public open var speedY: Number

  @JsName("ConstCoordinate")
  public open var constCoordinate: Any

  @JsName("bFractionalPart")
  public open var fractionalPart: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPanner

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPanner

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPanner

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPanner

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPanner

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPanner
  }
}

public open external class MaterialExpressionParticleColor(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleColor

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleColor

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleColor
  }
}

public open external class MaterialExpressionParticleDirection(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleDirection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleDirection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleDirection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleDirection

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleDirection

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleDirection
  }
}

@JsName("MaterialExpressionParticleMacroUV")
public open external class MaterialExpressionParticleMacroUv(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleMacroUv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleMacroUv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleMacroUv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleMacroUv

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleMacroUv

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleMacroUv
  }
}

public open external class MaterialExpressionParticleMotionBlurFade(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleMotionBlurFade

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleMotionBlurFade

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleMotionBlurFade

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleMotionBlurFade

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleMotionBlurFade

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleMotionBlurFade
  }
}

@JsName("MaterialExpressionParticlePositionWS")
public open external class MaterialExpressionParticlePositionWs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticlePositionWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticlePositionWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticlePositionWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticlePositionWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticlePositionWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticlePositionWs
  }
}

public open external class MaterialExpressionParticleRadius(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleRadius

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleRadius

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleRadius

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleRadius

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleRadius

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleRadius
  }
}

public open external class MaterialExpressionParticleRandom(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleRandom

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleRandom

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleRandom

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleRandom

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleRandom

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleRandom
  }
}

public open external class MaterialExpressionParticleRelativeTime(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleRelativeTime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleRelativeTime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleRelativeTime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleRelativeTime

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleRelativeTime

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleRelativeTime
  }
}

public open external class MaterialExpressionParticleSize(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleSize

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleSize

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleSize

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleSize

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleSize

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleSize
  }
}

public open external class MaterialExpressionParticleSpeed(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleSpeed

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleSpeed

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleSpeed

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleSpeed

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleSpeed

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleSpeed
  }
}

@JsName("MaterialExpressionParticleSubUV")
public open external class MaterialExpressionParticleSubUv(
  outer: UObject,
) : MaterialExpressionTextureSample {
  @JsName("bBlend")
  public open var blend: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleSubUv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleSubUv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleSubUv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleSubUv

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleSubUv

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleSubUv
  }
}

@JsName("MaterialExpressionParticleSubUVProperties")
public open external class MaterialExpressionParticleSubUvProperties(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionParticleSubUvProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionParticleSubUvProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionParticleSubUvProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionParticleSubUvProperties

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionParticleSubUvProperties

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionParticleSubUvProperties
  }
}

public open external class MaterialExpressionPathTracingQualitySwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("PathTraced")
  public open var pathTraced: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPathTracingQualitySwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionPathTracingQualitySwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPathTracingQualitySwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPathTracingQualitySwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPathTracingQualitySwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPathTracingQualitySwitch
  }
}

public open external class MaterialExpressionPerInstanceCustomData(
  outer: UObject,
) : MaterialExpression {
  @JsName("DefaultValue")
  public open var defaultValue: ExpressionInput

  @JsName("ConstDefaultValue")
  public open var constDefaultValue: Number

  @JsName("DataIndex")
  public open var dataIndex: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPerInstanceCustomData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPerInstanceCustomData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPerInstanceCustomData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPerInstanceCustomData

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPerInstanceCustomData

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPerInstanceCustomData
  }
}

public open external class MaterialExpressionPerInstanceCustomData3Vector(
  outer: UObject,
) : MaterialExpression {
  @JsName("DefaultValue")
  public open var defaultValue: ExpressionInput

  @JsName("ConstDefaultValue")
  public open var constDefaultValue: LinearColor

  @JsName("DataIndex")
  public open var dataIndex: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPerInstanceCustomData3Vector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionPerInstanceCustomData3Vector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPerInstanceCustomData3Vector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPerInstanceCustomData3Vector

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPerInstanceCustomData3Vector

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPerInstanceCustomData3Vector
  }
}

public open external class MaterialExpressionPerInstanceFadeAmount(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPerInstanceFadeAmount

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPerInstanceFadeAmount

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPerInstanceFadeAmount

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPerInstanceFadeAmount

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPerInstanceFadeAmount

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPerInstanceFadeAmount
  }
}

public open external class MaterialExpressionPerInstanceRandom(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPerInstanceRandom

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPerInstanceRandom

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPerInstanceRandom

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPerInstanceRandom

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPerInstanceRandom

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPerInstanceRandom
  }
}

public open external class MaterialExpressionPixelDepth(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPixelDepth

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPixelDepth

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPixelDepth

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPixelDepth

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPixelDepth

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPixelDepth
  }
}

@JsName("MaterialExpressionPixelNormalWS")
public open external class MaterialExpressionPixelNormalWs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPixelNormalWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPixelNormalWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPixelNormalWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPixelNormalWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPixelNormalWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPixelNormalWs
  }
}

public open external class MaterialExpressionPower(
  outer: UObject,
) : MaterialExpression {
  @JsName("Base")
  public open var base: ExpressionInput

  @JsName("Exponent")
  public open var exponent: ExpressionInput

  @JsName("ConstExponent")
  public open var constExponent: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPower

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPower

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPower

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPower

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPower

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPower
  }
}

@JsName("MaterialExpressionPrecomputedAOMask")
public open external class MaterialExpressionPrecomputedAoMask(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPrecomputedAoMask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPrecomputedAoMask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPrecomputedAoMask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPrecomputedAoMask

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPrecomputedAoMask

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPrecomputedAoMask
  }
}

public open external class MaterialExpressionPreSkinnedLocalBounds(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPreSkinnedLocalBounds

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPreSkinnedLocalBounds

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPreSkinnedLocalBounds

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPreSkinnedLocalBounds

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPreSkinnedLocalBounds

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPreSkinnedLocalBounds
  }
}

public open external class MaterialExpressionPreSkinnedNormal(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPreSkinnedNormal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPreSkinnedNormal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPreSkinnedNormal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPreSkinnedNormal

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPreSkinnedNormal

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPreSkinnedNormal
  }
}

public open external class MaterialExpressionPreSkinnedPosition(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPreSkinnedPosition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPreSkinnedPosition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPreSkinnedPosition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPreSkinnedPosition

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPreSkinnedPosition

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPreSkinnedPosition
  }
}

public open external class MaterialExpressionPreviousFrameSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("CurrentFrame")
  public open var currentFrame: ExpressionInput

  @JsName("PreviousFrame")
  public open var previousFrame: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionPreviousFrameSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionPreviousFrameSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionPreviousFrameSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionPreviousFrameSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionPreviousFrameSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionPreviousFrameSwitch
  }
}

public open external class MaterialExpressionQualitySwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("Inputs")
  public open var inputs: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionQualitySwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionQualitySwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionQualitySwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionQualitySwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionQualitySwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionQualitySwitch
  }
}

public open external class MaterialExpressionRayTracingQualitySwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("RayTraced")
  public open var rayTraced: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRayTracingQualitySwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionRayTracingQualitySwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRayTracingQualitySwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRayTracingQualitySwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRayTracingQualitySwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRayTracingQualitySwitch
  }
}

public open external class MaterialExpressionReflectionCapturePassSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("Reflection")
  public open var reflection: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionReflectionCapturePassSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionReflectionCapturePassSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionReflectionCapturePassSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionReflectionCapturePassSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionReflectionCapturePassSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionReflectionCapturePassSwitch
  }
}

@JsName("MaterialExpressionReflectionVectorWS")
public open external class MaterialExpressionReflectionVectorWs(
  outer: UObject,
) : MaterialExpression {
  @JsName("CustomWorldNormal")
  public open var customWorldNormal: ExpressionInput

  @JsName("bNormalizeCustomWorldNormal")
  public open var normalizeCustomWorldNormal: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionReflectionVectorWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionReflectionVectorWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionReflectionVectorWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionReflectionVectorWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionReflectionVectorWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionReflectionVectorWs
  }
}

public open external class MaterialExpressionRotateAboutAxis(
  outer: UObject,
) : MaterialExpression {
  @JsName("NormalizedRotationAxis")
  public open var normalizedRotationAxis: ExpressionInput

  @JsName("RotationAngle")
  public open var rotationAngle: ExpressionInput

  @JsName("PivotPoint")
  public open var pivotPoint: ExpressionInput

  public open var position: ExpressionInput

  @JsName("Period")
  public open var period: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRotateAboutAxis

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionRotateAboutAxis

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRotateAboutAxis

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRotateAboutAxis

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRotateAboutAxis

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRotateAboutAxis
  }
}

public open external class MaterialExpressionRotator(
  outer: UObject,
) : MaterialExpression {
  @JsName("Coordinate")
  public open var coordinate: ExpressionInput

  @JsName("Time")
  public open var time: ExpressionInput

  @JsName("CenterX")
  public open var centerX: Number

  @JsName("CenterY")
  public open var centerY: Number

  @JsName("Speed")
  public open var speed: Number

  @JsName("ConstCoordinate")
  public open var constCoordinate: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRotator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionRotator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRotator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRotator

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRotator

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRotator
  }
}

public open external class MaterialExpressionRound(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRound

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionRound

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRound

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRound

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRound

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRound
  }
}

public open external class MaterialExpressionRuntimeVirtualTextureOutput(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("WorldHeight")
  public open var worldHeight: ExpressionInput

  @JsName("Opacity")
  public open var opacity: ExpressionInput

  public open var mask: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRuntimeVirtualTextureOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionRuntimeVirtualTextureOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRuntimeVirtualTextureOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRuntimeVirtualTextureOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRuntimeVirtualTextureOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRuntimeVirtualTextureOutput
  }
}

public open external class MaterialExpressionRuntimeVirtualTextureReplace(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("VirtualTextureOutput")
  public open var virtualTextureOutput: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRuntimeVirtualTextureReplace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionRuntimeVirtualTextureReplace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRuntimeVirtualTextureReplace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRuntimeVirtualTextureReplace

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRuntimeVirtualTextureReplace

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRuntimeVirtualTextureReplace
  }
}

@JsName("ERuntimeVirtualTextureMipValueMode")
public external object RuntimeVirtualTextureMipValueMode {
  @JsName("RVTMVM_None")
  public var None: String

  @JsName("RVTMVM_MipLevel")
  public var MipLevel: String

  @JsName("RVTMVM_MipBias")
  public var MipBias: String

  @JsName("RVTMVM_RecalculateDerivatives")
  public var RecalculateDerivatives: String

  @JsName("RVTMVM_MAX")
  public var Max: String
}

@JsName("ERuntimeVirtualTextureTextureAddressMode")
public external object RuntimeVirtualTextureTextureAddressMode {
  @JsName("RVTTA_Clamp")
  public var Clamp: String

  @JsName("RVTTA_Wrap")
  public var Wrap: String

  @JsName("RVTTA_MAX")
  public var Max: String
}

public open external class MaterialExpressionRuntimeVirtualTextureSample(
  outer: UObject,
) : MaterialExpression {
  @JsName("Coordinates")
  public open var coordinates: ExpressionInput

  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  @JsName("MipValue")
  public open var mipValue: ExpressionInput

  @JsName("VirtualTexture")
  public open var virtualTexture: RuntimeVirtualTexture

  @JsName("MaterialType")
  public open var materialType: String

  @JsName("bSinglePhysicalSpace")
  public open var singlePhysicalSpace: Boolean

  @JsName("bAdaptive")
  public open var adaptive: Boolean

  @JsName("MipValueMode")
  public open var mipValueMode: String

  @JsName("TextureAddressMode")
  public open var textureAddressMode: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRuntimeVirtualTextureSample

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionRuntimeVirtualTextureSample

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRuntimeVirtualTextureSample

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRuntimeVirtualTextureSample

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRuntimeVirtualTextureSample

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRuntimeVirtualTextureSample
  }
}

public open external class MaterialExpressionRuntimeVirtualTextureSampleParameter(
  outer: UObject,
) : MaterialExpressionRuntimeVirtualTextureSample {
  @JsName("ParameterName")
  public open var parameterName: String

  @JsName("ExpressionGuid")
  public open var expressionGuid: Guid

  @JsName("Group")
  public open var group: String

  @JsName("SortPriority")
  public open var sortPriority: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionRuntimeVirtualTextureSampleParameter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionRuntimeVirtualTextureSampleParameter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionRuntimeVirtualTextureSampleParameter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionRuntimeVirtualTextureSampleParameter

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionRuntimeVirtualTextureSampleParameter

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionRuntimeVirtualTextureSampleParameter
  }
}

@JsName("EFieldVectorType")
public external object FieldVectorType {
  @JsName("Vector_LinearForce")
  public var LinearForce: String

  @JsName("Vector_LinearVelocity")
  public var LinearVelocity: String

  @JsName("Vector_AngularVelocity")
  public var AngularVelocity: String

  @JsName("Vector_AngularTorque")
  public var AngularTorque: String

  @JsName("Vector_PositionTarget")
  public var PositionTarget: String

  @JsName("Vector_InitialLinearVelocity")
  public var InitialLinearVelocity: String

  @JsName("Vector_InitialAngularVelocity")
  public var InitialAngularVelocity: String

  @JsName("Vector_TargetMax")
  public var TargetMax: String

  @JsName("Vector_MAX")
  public var Max: String
}

public open external class MaterialExpressionSamplePhysicsVectorField(
  outer: UObject,
) : MaterialExpression {
  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  @JsName("FieldTarget")
  public open var fieldTarget: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSamplePhysicsVectorField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSamplePhysicsVectorField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSamplePhysicsVectorField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSamplePhysicsVectorField

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSamplePhysicsVectorField

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSamplePhysicsVectorField
  }
}

@JsName("EFieldScalarType")
public external object FieldScalarType {
  @JsName("Scalar_ExternalClusterStrain")
  public var ExternalClusterStrain: String

  @JsName("Scalar_Kill")
  public var Kill: String

  @JsName("Scalar_DisableThreshold")
  public var DisableThreshold: String

  @JsName("Scalar_SleepingThreshold")
  public var SleepingThreshold: String

  @JsName("Scalar_InternalClusterStrain")
  public var InternalClusterStrain: String

  @JsName("Scalar_DynamicConstraint")
  public var DynamicConstraint: String

  @JsName("Scalar_TargetMax")
  public var TargetMax: String

  @JsName("Scalar_MAX")
  public var Max: String
}

public open external class MaterialExpressionSamplePhysicsScalarField(
  outer: UObject,
) : MaterialExpression {
  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  @JsName("FieldTarget")
  public open var fieldTarget: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSamplePhysicsScalarField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSamplePhysicsScalarField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSamplePhysicsScalarField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSamplePhysicsScalarField

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSamplePhysicsScalarField

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSamplePhysicsScalarField
  }
}

@JsName("EFieldIntegerType")
public external object FieldIntegerType {
  @JsName("Integer_DynamicState")
  public var DynamicState: String

  @JsName("Integer_ActivateDisabled")
  public var ActivateDisabled: String

  @JsName("Integer_CollisionGroup")
  public var CollisionGroup: String

  @JsName("Integer_PositionAnimated")
  public var PositionAnimated: String

  @JsName("Integer_PositionStatic")
  public var PositionStatic: String

  @JsName("Integer_TargetMax")
  public var TargetMax: String

  @JsName("Integer_MAX")
  public var Max: String
}

public open external class MaterialExpressionSamplePhysicsIntegerField(
  outer: UObject,
) : MaterialExpression {
  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  @JsName("FieldTarget")
  public open var fieldTarget: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSamplePhysicsIntegerField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSamplePhysicsIntegerField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSamplePhysicsIntegerField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSamplePhysicsIntegerField

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSamplePhysicsIntegerField

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSamplePhysicsIntegerField
  }
}

public open external class MaterialExpressionSaturate(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSaturate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSaturate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSaturate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSaturate

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSaturate

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSaturate
  }
}

@JsName("EMaterialSceneAttributeInputMode")
public external object MaterialSceneAttributeInputMode {
  public var Coordinates: String

  public var OffsetFraction: String

  @JsName("EMaterialSceneAttributeInputMode_MAX")
  public var Max: String
}

public open external class MaterialExpressionSceneColor(
  outer: UObject,
) : MaterialExpression {
  @JsName("InputMode")
  public open var inputMode: String

  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("OffsetFraction")
  public open var offsetFraction: ExpressionInput

  @JsName("ConstInput")
  public open var constInput: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSceneColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSceneColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSceneColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSceneColor

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSceneColor

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSceneColor
  }
}

public open external class MaterialExpressionSceneDepth(
  outer: UObject,
) : MaterialExpression {
  @JsName("InputMode")
  public open var inputMode: String

  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("Coordinates")
  public open var coordinates: ExpressionInput

  @JsName("ConstInput")
  public open var constInput: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSceneDepth

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSceneDepth

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSceneDepth

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSceneDepth

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSceneDepth

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSceneDepth
  }
}

public open external class MaterialExpressionSceneDepthWithoutWater(
  outer: UObject,
) : MaterialExpression {
  @JsName("InputMode")
  public open var inputMode: String

  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("ConstInput")
  public open var constInput: Vector2d

  @JsName("FallbackDepth")
  public open var fallbackDepth: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSceneDepthWithoutWater

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSceneDepthWithoutWater

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSceneDepthWithoutWater

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSceneDepthWithoutWater

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSceneDepthWithoutWater

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSceneDepthWithoutWater
  }
}

public open external class MaterialExpressionSceneTexelSize(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSceneTexelSize

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSceneTexelSize

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSceneTexelSize

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSceneTexelSize

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSceneTexelSize

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSceneTexelSize
  }
}

@JsName("ESceneTextureId")
public external object SceneTextureId {
  @JsName("PPI_SceneColor")
  public var SceneColor: String

  @JsName("PPI_SceneDepth")
  public var SceneDepth: String

  @JsName("PPI_DiffuseColor")
  public var DiffuseColor: String

  @JsName("PPI_SpecularColor")
  public var SpecularColor: String

  @JsName("PPI_SubsurfaceColor")
  public var SubsurfaceColor: String

  @JsName("PPI_BaseColor")
  public var BaseColor: String

  @JsName("PPI_Specular")
  public var Specular: String

  @JsName("PPI_Metallic")
  public var Metallic: String

  @JsName("PPI_WorldNormal")
  public var WorldNormal: String

  @JsName("PPI_SeparateTranslucency")
  public var SeparateTranslucency: String

  @JsName("PPI_Opacity")
  public var Opacity: String

  @JsName("PPI_Roughness")
  public var Roughness: String

  @JsName("PPI_MaterialAO")
  public var MaterialAo: String

  @JsName("PPI_CustomDepth")
  public var CustomDepth: String

  @JsName("PPI_PostProcessInput0")
  public var PostProcessInput0: String

  @JsName("PPI_PostProcessInput1")
  public var PostProcessInput1: String

  @JsName("PPI_PostProcessInput2")
  public var PostProcessInput2: String

  @JsName("PPI_PostProcessInput3")
  public var PostProcessInput3: String

  @JsName("PPI_PostProcessInput4")
  public var PostProcessInput4: String

  @JsName("PPI_PostProcessInput5")
  public var PostProcessInput5: String

  @JsName("PPI_PostProcessInput6")
  public var PostProcessInput6: String

  @JsName("PPI_DecalMask")
  public var DecalMask: String

  @JsName("PPI_ShadingModelColor")
  public var ShadingModelColor: String

  @JsName("PPI_ShadingModelID")
  public var ShadingModelId: String

  @JsName("PPI_AmbientOcclusion")
  public var AmbientOcclusion: String

  @JsName("PPI_CustomStencil")
  public var CustomStencil: String

  @JsName("PPI_StoredBaseColor")
  public var StoredBaseColor: String

  @JsName("PPI_StoredSpecular")
  public var StoredSpecular: String

  @JsName("PPI_Velocity")
  public var Velocity: String

  @JsName("PPI_WorldTangent")
  public var WorldTangent: String

  @JsName("PPI_Anisotropy")
  public var Anisotropy: String

  @JsName("PPI_MAX")
  public var Max: String
}

public open external class MaterialExpressionSceneTexture(
  outer: UObject,
) : MaterialExpression {
  @JsName("Coordinates")
  public open var coordinates: ExpressionInput

  @JsName("SceneTextureId")
  public open var sceneTextureId: String

  @JsName("bFiltered")
  public open var filtered: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSceneTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSceneTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSceneTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSceneTexture

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSceneTexture

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSceneTexture
  }
}

public open external class MaterialExpressionScreenPosition(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionScreenPosition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionScreenPosition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionScreenPosition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionScreenPosition

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionScreenPosition

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionScreenPosition
  }
}

public open external class MaterialExpressionSetLocal(
  outer: UObject,
) : MaterialExpression {
  public open var exec: ExpressionExecOutput

  @JsName("Value")
  public open var value: ExpressionInput

  @JsName("LocalName")
  public open var localName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSetLocal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSetLocal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSetLocal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSetLocal

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSetLocal

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSetLocal
  }
}

public open external class MaterialExpressionSetMaterialAttributes(
  outer: UObject,
) : MaterialExpression {
  @JsName("Inputs")
  public open var inputs: Array<ExpressionInput>

  @JsName("AttributeSetTypes")
  public open var attributeSetTypes: Array<Guid>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSetMaterialAttributes

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSetMaterialAttributes

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSetMaterialAttributes

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSetMaterialAttributes

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSetMaterialAttributes

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSetMaterialAttributes
  }
}

public open external class MaterialExpressionShaderStageSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("PixelShader")
  public open var pixelShader: ExpressionInput

  @JsName("VertexShader")
  public open var vertexShader: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionShaderStageSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionShaderStageSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionShaderStageSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionShaderStageSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionShaderStageSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionShaderStageSwitch
  }
}

public open external class MaterialExpressionShadingModel(
  outer: UObject,
) : MaterialExpression {
  @JsName("ShadingModel")
  public open var shadingModel: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionShadingModel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionShadingModel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionShadingModel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionShadingModel

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionShadingModel

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionShadingModel
  }
}

public open external class MaterialExpressionShadingPathSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("Inputs")
  public open var inputs: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionShadingPathSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionShadingPathSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionShadingPathSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionShadingPathSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionShadingPathSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionShadingPathSwitch
  }
}

public open external class MaterialExpressionShadowReplace(
  outer: UObject,
) : MaterialExpression {
  @JsName("Default")
  public open var default: ExpressionInput

  @JsName("Shadow")
  public open var shadow: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionShadowReplace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionShadowReplace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionShadowReplace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionShadowReplace

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionShadowReplace

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionShadowReplace
  }
}

public open external class MaterialExpressionSign(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSign

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSign

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSign

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSign

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSign

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSign
  }
}

public open external class MaterialExpressionSine(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("Period")
  public open var period: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSine

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSine

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSine

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSine

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSine

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSine
  }
}

public open external class MaterialExpressionSingleLayerWaterMaterialOutput(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("ScatteringCoefficients")
  public open var scatteringCoefficients: ExpressionInput

  @JsName("AbsorptionCoefficients")
  public open var absorptionCoefficients: ExpressionInput

  @JsName("PhaseG")
  public open var phaseG: ExpressionInput

  @JsName("ColorScaleBehindWater")
  public open var colorScaleBehindWater: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSingleLayerWaterMaterialOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSingleLayerWaterMaterialOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSingleLayerWaterMaterialOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSingleLayerWaterMaterialOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSingleLayerWaterMaterialOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSingleLayerWaterMaterialOutput
  }
}

public open external class MaterialExpressionSkyAtmosphereLightDirection(
  outer: UObject,
) : MaterialExpression {
  @JsName("LightIndex")
  public open var lightIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyAtmosphereLightDirection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereLightDirection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereLightDirection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereLightDirection

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereLightDirection

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereLightDirection
  }
}

public open external class MaterialExpressionSkyAtmosphereLightIlluminance(
  outer: UObject,
) : MaterialExpression {
  @JsName("LightIndex")
  public open var lightIndex: Number

  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyAtmosphereLightIlluminance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereLightIlluminance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereLightIlluminance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereLightIlluminance

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereLightIlluminance

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereLightIlluminance
  }
}

public open external class MaterialExpressionSkyAtmosphereLightDiskLuminance(
  outer: UObject,
) : MaterialExpression {
  @JsName("LightIndex")
  public open var lightIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyAtmosphereLightDiskLuminance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereLightDiskLuminance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereLightDiskLuminance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereLightDiskLuminance

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereLightDiskLuminance

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereLightDiskLuminance
  }
}

public open external class MaterialExpressionSkyAtmosphereAerialPerspective(
  outer: UObject,
) : MaterialExpression {
  @JsName("WorldPosition")
  public open var worldPosition: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyAtmosphereAerialPerspective

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereAerialPerspective

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereAerialPerspective

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereAerialPerspective

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereAerialPerspective

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereAerialPerspective
  }
}

public open external class MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
  }
}

public open external class MaterialExpressionSkyAtmosphereViewLuminance(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyAtmosphereViewLuminance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSkyAtmosphereViewLuminance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyAtmosphereViewLuminance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyAtmosphereViewLuminance

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyAtmosphereViewLuminance

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyAtmosphereViewLuminance
  }
}

public open external class MaterialExpressionSkyLightEnvMapSample(
  outer: UObject,
) : MaterialExpression {
  @JsName("Direction")
  public open var direction: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSkyLightEnvMapSample

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSkyLightEnvMapSample

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSkyLightEnvMapSample

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSkyLightEnvMapSample

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSkyLightEnvMapSample

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSkyLightEnvMapSample
  }
}

public open external class MaterialExpressionSmoothStep(
  outer: UObject,
) : MaterialExpression {
  @JsName("Min")
  public open var min: ExpressionInput

  @JsName("Max")
  public open var max: ExpressionInput

  @JsName("Value")
  public open var value: ExpressionInput

  @JsName("ConstMin")
  public open var constMin: Number

  @JsName("ConstMax")
  public open var constMax: Number

  @JsName("ConstValue")
  public open var constValue: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSmoothStep

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSmoothStep

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSmoothStep

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSmoothStep

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSmoothStep

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSmoothStep
  }
}

public open external class MaterialExpressionSobol(
  outer: UObject,
) : MaterialExpression {
  @JsName("Cell")
  public open var cell: ExpressionInput

  public open var index: ExpressionInput

  @JsName("Seed")
  public open var seed: ExpressionInput

  @JsName("ConstIndex")
  public open var constIndex: Any

  @JsName("ConstSeed")
  public open var constSeed: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSobol

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSobol

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSobol

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSobol

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSobol

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSobol
  }
}

@JsName("ESpeedTreeGeometryType")
public external object SpeedTreeGeometryType {
  @JsName("STG_Branch")
  public var Branch: String

  @JsName("STG_Frond")
  public var Frond: String

  @JsName("STG_Leaf")
  public var Leaf: String

  @JsName("STG_FacingLeaf")
  public var FacingLeaf: String

  @JsName("STG_Billboard")
  public var Billboard: String

  @JsName("STG_MAX")
  public var Max: String
}

@JsName("ESpeedTreeWindType")
public external object SpeedTreeWindType {
  @JsName("STW_None")
  public var None: String

  @JsName("STW_Fastest")
  public var Fastest: String

  @JsName("STW_Fast")
  public var Fast: String

  @JsName("STW_Better")
  public var Better: String

  @JsName("STW_Best")
  public var Best: String

  @JsName("STW_Palm")
  public var Palm: String

  @JsName("STW_BestPlus")
  public var BestPlus: String

  @JsName("STW_MAX")
  public var Max: String
}

@JsName("ESpeedTreeLODType")
public external object SpeedTreeLODType {
  @JsName("STLOD_Pop")
  public var Pop: String

  @JsName("STLOD_Smooth")
  public var Smooth: String

  @JsName("STLOD_MAX")
  public var Max: String
}

public open external class MaterialExpressionSpeedTree(
  outer: UObject,
) : MaterialExpression {
  @JsName("GeometryInput")
  public open var geometryInput: ExpressionInput

  @JsName("WindInput")
  public open var windInput: ExpressionInput

  @JsName("LODInput")
  public open var lodInput: ExpressionInput

  @JsName("ExtraBendWS")
  public open var extraBendWs: ExpressionInput

  @JsName("GeometryType")
  public open var geometryType: String

  @JsName("WindType")
  public open var windType: String

  @JsName("LODType")
  public open var lodType: String

  @JsName("BillboardThreshold")
  public open var billboardThreshold: Number

  @JsName("bAccurateWindVelocities")
  public open var accurateWindVelocities: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSpeedTree

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSpeedTree

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSpeedTree

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSpeedTree

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSpeedTree

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSpeedTree
  }
}

public open external class MaterialExpressionSphereMask(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("Radius")
  public open var radius: ExpressionInput

  @JsName("Hardness")
  public open var hardness: ExpressionInput

  @JsName("AttenuationRadius")
  public open var attenuationRadius: Number

  @JsName("HardnessPercent")
  public open var hardnessPercent: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSphereMask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSphereMask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSphereMask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSphereMask

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSphereMask

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSphereMask
  }
}

public open external class MaterialExpressionSphericalParticleOpacity(
  outer: UObject,
) : MaterialExpression {
  @JsName("Density")
  public open var density: ExpressionInput

  @JsName("ConstantDensity")
  public open var constantDensity: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSphericalParticleOpacity

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionSphericalParticleOpacity

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSphericalParticleOpacity

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSphericalParticleOpacity

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSphericalParticleOpacity

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSphericalParticleOpacity
  }
}

public open external class MaterialExpressionSquareRoot(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSquareRoot

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSquareRoot

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSquareRoot

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSquareRoot

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSquareRoot

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSquareRoot
  }
}

public open external class MaterialExpressionStaticBool(
  outer: UObject,
) : MaterialExpression {
  @JsName("Value")
  public open var value: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStaticBool

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStaticBool

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStaticBool

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStaticBool

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStaticBool

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStaticBool
  }
}

public open external class MaterialExpressionStaticBoolParameter(
  outer: UObject,
) : MaterialExpressionParameter {
  @JsName("DefaultValue")
  public open var defaultValue: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStaticBoolParameter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStaticBoolParameter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStaticBoolParameter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStaticBoolParameter

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStaticBoolParameter

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStaticBoolParameter
  }
}

public open external class MaterialExpressionStaticComponentMaskParameter(
  outer: UObject,
) : MaterialExpressionParameter {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("DefaultR")
  public open var defaultR: Boolean

  @JsName("DefaultG")
  public open var defaultG: Boolean

  @JsName("DefaultB")
  public open var defaultB: Boolean

  @JsName("DefaultA")
  public open var defaultA: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStaticComponentMaskParameter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionStaticComponentMaskParameter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStaticComponentMaskParameter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStaticComponentMaskParameter

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStaticComponentMaskParameter

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStaticComponentMaskParameter
  }
}

public open external class MaterialExpressionStaticSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("DefaultValue")
  public open var defaultValue: Boolean

  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("Value")
  public open var value: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStaticSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStaticSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStaticSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStaticSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStaticSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStaticSwitch
  }
}

public open external class MaterialExpressionStaticSwitchParameter(
  outer: UObject,
) : MaterialExpressionStaticBoolParameter {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStaticSwitchParameter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStaticSwitchParameter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStaticSwitchParameter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStaticSwitchParameter

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStaticSwitchParameter

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStaticSwitchParameter
  }
}

public open external class MaterialExpressionStep(
  outer: UObject,
) : MaterialExpression {
  @JsName("Y")
  public open var y: ExpressionInput

  @JsName("X")
  public open var x: ExpressionInput

  @JsName("ConstY")
  public open var constY: Number

  @JsName("ConstX")
  public open var constX: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStep

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStep

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStep

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStep

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStep

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStep
  }
}

@JsName("MaterialExpressionStrataBSDF")
public open external class MaterialExpressionStrataBsdf(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataBsdf
  }
}

public open external class StrataMaterialInfo {
  @JsName("ShadingModelField")
  public open var shadingModelField: Number

  @JsName("bHasShadingModelFromExpression")
  public open var hasShadingModelFromExpression: Number

  @JsName("SubsurfaceProfiles")
  public open var subsurfaceProfiles: Array<SubsurfaceProfile>

  public open fun clone(): StrataMaterialInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): StrataMaterialInfo

    @JsName("C")
    public fun copy(other: Any): StrataMaterialInfo
  }
}

public open external class MaterialExpressionStrataLegacyConversion(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("Metallic")
  public open var metallic: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Anisotropy")
  public open var anisotropy: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("Tangent")
  public open var tangent: ExpressionInput

  @JsName("SubsurfaceColor")
  public open var subsurfaceColor: ExpressionInput

  @JsName("ClearCoat")
  public open var clearCoat: ExpressionInput

  @JsName("ClearCoatRoughness")
  public open var clearCoatRoughness: ExpressionInput

  @JsName("Opacity")
  public open var opacity: ExpressionInput

  @JsName("TransmittanceColor")
  public open var transmittanceColor: ExpressionInput

  @JsName("WaterScatteringCoefficients")
  public open var waterScatteringCoefficients: ExpressionInput

  @JsName("WaterAbsorptionCoefficients")
  public open var waterAbsorptionCoefficients: ExpressionInput

  @JsName("WaterPhaseG")
  public open var waterPhaseG: ExpressionInput

  @JsName("ColorScaleBehindWater")
  public open var colorScaleBehindWater: ExpressionInput

  @JsName("ClearCoatNormal")
  public open var clearCoatNormal: ExpressionInput

  @JsName("ShadingModel")
  public open var shadingModel: ExpressionInput

  @JsName("SubsurfaceProfile")
  public open var subsurfaceProfile: SubsurfaceProfile

  @JsName("ConvertedStrataMaterialInfo")
  public open var convertedStrataMaterialInfo: StrataMaterialInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataLegacyConversion

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataLegacyConversion

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataLegacyConversion

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataLegacyConversion

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataLegacyConversion

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataLegacyConversion
  }
}

@JsName("MaterialExpressionStrataSlabBSDF")
public open external class MaterialExpressionStrataSlabBsdf(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("EdgeColor")
  public open var edgeColor: ExpressionInput

  @JsName("Metallic")
  public open var metallic: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("DiffuseAlbedo")
  public open var diffuseAlbedo: ExpressionInput

  @JsName("F0")
  public open var f0: ExpressionInput

  @JsName("F90")
  public open var f90: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Anisotropy")
  public open var anisotropy: ExpressionInput

  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("Tangent")
  public open var tangent: ExpressionInput

  public open var SSSDMFP: ExpressionInput

  @JsName("SSSDMFPScale")
  public open var sssdmfpScale: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("Haziness")
  public open var haziness: ExpressionInput

  @JsName("ThinFilmThickness")
  public open var thinFilmThickness: ExpressionInput

  @JsName("Thickness")
  public open var thickness: ExpressionInput

  @JsName("FuzzAmount")
  public open var fuzzAmount: ExpressionInput

  @JsName("FuzzColor")
  public open var fuzzColor: ExpressionInput

  @JsName("SubsurfaceProfile")
  public open var subsurfaceProfile: SubsurfaceProfile

  @JsName("bUseMetalness")
  public open var useMetalness: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataSlabBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataSlabBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataSlabBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataSlabBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataSlabBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataSlabBsdf
  }
}

@JsName("MaterialExpressionStrataVolumetricFogCloudBSDF")
public open external class MaterialExpressionStrataVolumetricFogCloudBsdf(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("Albedo")
  public open var albedo: ExpressionInput

  @JsName("Extinction")
  public open var extinction: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("AmbientOcclusion")
  public open var ambientOcclusion: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataVolumetricFogCloudBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionStrataVolumetricFogCloudBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataVolumetricFogCloudBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataVolumetricFogCloudBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataVolumetricFogCloudBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataVolumetricFogCloudBsdf
  }
}

@JsName("MaterialExpressionStrataUnlitBSDF")
public open external class MaterialExpressionStrataUnlitBsdf(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("TransmittanceColor")
  public open var transmittanceColor: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataUnlitBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataUnlitBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataUnlitBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataUnlitBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataUnlitBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataUnlitBsdf
  }
}

@JsName("MaterialExpressionStrataHairBSDF")
public open external class MaterialExpressionStrataHairBsdf(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("Scatter")
  public open var scatter: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Backlit")
  public open var backlit: ExpressionInput

  @JsName("Tangent")
  public open var tangent: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataHairBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataHairBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataHairBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataHairBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataHairBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataHairBsdf
  }
}

@JsName("MaterialExpressionStrataSingleLayerWaterBSDF")
public open external class MaterialExpressionStrataSingleLayerWaterBsdf(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("BaseColor")
  public open var baseColor: ExpressionInput

  @JsName("Metallic")
  public open var metallic: ExpressionInput

  @JsName("Specular")
  public open var specular: ExpressionInput

  @JsName("Roughness")
  public open var roughness: ExpressionInput

  @JsName("Normal")
  public open var normal: ExpressionInput

  @JsName("EmissiveColor")
  public open var emissiveColor: ExpressionInput

  @JsName("TopMaterialOpacity")
  public open var topMaterialOpacity: ExpressionInput

  @JsName("WaterAlbedo")
  public open var waterAlbedo: ExpressionInput

  @JsName("WaterExtinction")
  public open var waterExtinction: ExpressionInput

  @JsName("WaterPhaseG")
  public open var waterPhaseG: ExpressionInput

  @JsName("ColorScaleBehindWater")
  public open var colorScaleBehindWater: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataSingleLayerWaterBsdf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionStrataSingleLayerWaterBsdf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataSingleLayerWaterBsdf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataSingleLayerWaterBsdf

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataSingleLayerWaterBsdf

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataSingleLayerWaterBsdf
  }
}

public open external class MaterialExpressionStrataHorizontalMixing(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("Background")
  public open var background: ExpressionInput

  @JsName("Foreground")
  public open var foreground: ExpressionInput

  @JsName("Mix")
  public open var mix: ExpressionInput

  @JsName("bUseParameterBlending")
  public open var useParameterBlending: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataHorizontalMixing

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataHorizontalMixing

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataHorizontalMixing

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataHorizontalMixing

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataHorizontalMixing

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataHorizontalMixing
  }
}

public open external class MaterialExpressionStrataVerticalLayering(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("Top")
  public open var top: ExpressionInput

  @JsName("Base")
  public open var base: ExpressionInput

  @JsName("bUseParameterBlending")
  public open var useParameterBlending: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataVerticalLayering

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataVerticalLayering

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataVerticalLayering

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataVerticalLayering

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataVerticalLayering

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataVerticalLayering
  }
}

public open external class MaterialExpressionStrataAdd(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("bUseParameterBlending")
  public open var useParameterBlending: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataAdd

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataAdd

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataAdd

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataAdd

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataAdd

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataAdd
  }
}

public open external class MaterialExpressionStrataWeight(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("Weight")
  public open var weight: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataWeight

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionStrataWeight

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataWeight

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataWeight

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataWeight

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataWeight
  }
}

@JsName("MaterialExpressionStrataTransmittanceToMFP")
public open external class MaterialExpressionStrataTransmittanceToMfp(
  outer: UObject,
) : MaterialExpressionStrataBsdf {
  @JsName("TransmittanceColor")
  public open var transmittanceColor: ExpressionInput

  @JsName("Thickness")
  public open var thickness: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionStrataTransmittanceToMfp

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionStrataTransmittanceToMfp

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionStrataTransmittanceToMfp

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionStrataTransmittanceToMfp

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionStrataTransmittanceToMfp

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionStrataTransmittanceToMfp
  }
}

public open external class MaterialExpressionSubtract(
  outer: UObject,
) : MaterialExpression {
  @JsName("A")
  public open var a: ExpressionInput

  @JsName("B")
  public open var b: ExpressionInput

  @JsName("ConstA")
  public open var constA: Number

  @JsName("ConstB")
  public open var constB: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSubtract

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSubtract

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSubtract

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSubtract

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSubtract

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSubtract
  }
}

public open external class MaterialExpressionTangent(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("Period")
  public open var period: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTangent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTangent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTangent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTangent

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTangent

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTangent
  }
}

public open external class MaterialExpressionTangentOutput(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTangentOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTangentOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTangentOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTangentOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTangentOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTangentOutput
  }
}

public open external class MaterialExpressionTemporalSobol(
  outer: UObject,
) : MaterialExpression {
  public open var index: ExpressionInput

  @JsName("Seed")
  public open var seed: ExpressionInput

  @JsName("ConstIndex")
  public open var constIndex: Any

  @JsName("ConstSeed")
  public open var constSeed: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTemporalSobol

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTemporalSobol

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTemporalSobol

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTemporalSobol

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTemporalSobol

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTemporalSobol
  }
}

public open external class MaterialExpressionTextureCoordinate(
  outer: UObject,
) : MaterialExpression {
  @JsName("CoordinateIndex")
  public open var coordinateIndex: Number

  @JsName("UTiling")
  public open var uTiling: Number

  @JsName("VTiling")
  public open var vTiling: Number

  @JsName("UnMirrorU")
  public open var unMirrorU: Boolean

  @JsName("UnMirrorV")
  public open var unMirrorV: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureCoordinate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTextureCoordinate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureCoordinate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureCoordinate

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureCoordinate

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureCoordinate
  }
}

public open external class MaterialExpressionTextureObject(
  outer: UObject,
) : MaterialExpressionTextureBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTextureObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureObject

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureObject

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureObject
  }
}

public open external class MaterialExpressionTextureObjectParameter(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureObjectParameter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTextureObjectParameter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureObjectParameter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureObjectParameter

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureObjectParameter

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureObjectParameter
  }
}

@JsName("EMaterialExposedTextureProperty")
public external object MaterialExposedTextureProperty {
  @JsName("TMTM_TextureSize")
  public var TextureSize: String

  @JsName("TMTM_TexelSize")
  public var TexelSize: String

  @JsName("TMTM_MAX")
  public var Max: String
}

public open external class MaterialExpressionTextureProperty(
  outer: UObject,
) : MaterialExpression {
  @JsName("TextureObject")
  public open var textureObject: ExpressionInput

  @JsName("Property")
  public open var property: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureProperty

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTextureProperty

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureProperty

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureProperty

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureProperty

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureProperty
  }
}

@JsName("MaterialExpressionTextureSampleParameter2DArray")
public open external class MaterialExpressionTextureSampleParameter2dArray(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureSampleParameter2dArray

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionTextureSampleParameter2dArray

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureSampleParameter2dArray

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureSampleParameter2dArray

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureSampleParameter2dArray

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureSampleParameter2dArray
  }
}

public open external class MaterialExpressionTextureSampleParameterCube(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureSampleParameterCube

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionTextureSampleParameterCube

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureSampleParameterCube

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureSampleParameterCube

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureSampleParameterCube

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureSampleParameterCube
  }
}

public open external class MaterialExpressionTextureSampleParameterCubeArray(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureSampleParameterCubeArray

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionTextureSampleParameterCubeArray

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureSampleParameterCubeArray

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureSampleParameterCubeArray

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureSampleParameterCubeArray

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureSampleParameterCubeArray
  }
}

@JsName("MaterialExpressionTextureSampleParameterSubUV")
public open external class MaterialExpressionTextureSampleParameterSubUv(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter2d {
  @JsName("bBlend")
  public open var blend: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureSampleParameterSubUv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionTextureSampleParameterSubUv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureSampleParameterSubUv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureSampleParameterSubUv

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureSampleParameterSubUv

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureSampleParameterSubUv
  }
}

public open external class MaterialExpressionTextureSampleParameterVolume(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTextureSampleParameterVolume

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionTextureSampleParameterVolume

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTextureSampleParameterVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTextureSampleParameterVolume

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTextureSampleParameterVolume

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTextureSampleParameterVolume
  }
}

public open external class MaterialExpressionThinTranslucentMaterialOutput(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("TransmittanceColor")
  public open var transmittanceColor: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionThinTranslucentMaterialOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionThinTranslucentMaterialOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionThinTranslucentMaterialOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionThinTranslucentMaterialOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionThinTranslucentMaterialOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionThinTranslucentMaterialOutput
  }
}

public open external class MaterialExpressionTime(
  outer: UObject,
) : MaterialExpression {
  @JsName("bIgnorePause")
  public open var ignorePause: Boolean

  @JsName("bOverride_Period")
  public open var overridePeriod: Boolean

  @JsName("Period")
  public open var period: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTime

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTime

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTime
  }
}

@JsName("EMaterialVectorCoordTransformSource")
public external object MaterialVectorCoordTransformSource {
  @JsName("TRANSFORMSOURCE_Tangent")
  public var Tangent: String

  @JsName("TRANSFORMSOURCE_Local")
  public var Local: String

  @JsName("TRANSFORMSOURCE_World")
  public var World: String

  @JsName("TRANSFORMSOURCE_View")
  public var View: String

  @JsName("TRANSFORMSOURCE_Camera")
  public var Camera: String

  @JsName("TRANSFORMSOURCE_ParticleWorld")
  public var ParticleWorld: String

  @JsName("TRANSFORMSOURCE_Instance")
  public var Instance: String

  @JsName("TRANSFORMSOURCE_MAX")
  public var Max: String
}

@JsName("EMaterialVectorCoordTransform")
public external object MaterialVectorCoordTransform {
  @JsName("TRANSFORM_Tangent")
  public var Tangent: String

  @JsName("TRANSFORM_Local")
  public var Local: String

  @JsName("TRANSFORM_World")
  public var World: String

  @JsName("TRANSFORM_View")
  public var View: String

  @JsName("TRANSFORM_Camera")
  public var Camera: String

  @JsName("TRANSFORM_ParticleWorld")
  public var ParticleWorld: String

  @JsName("TRANSFORM_Instance")
  public var Instance: String

  @JsName("TRANSFORM_MAX")
  public var Max: String
}

public open external class MaterialExpressionTransform(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("TransformSourceType")
  public open var transformSourceType: String

  @JsName("TransformType")
  public open var transformType: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTransform

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTransform

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTransform

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTransform

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTransform

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTransform
  }
}

@JsName("EMaterialPositionTransformSource")
public external object MaterialPositionTransformSource {
  @JsName("TRANSFORMPOSSOURCE_Local")
  public var Local: String

  @JsName("TRANSFORMPOSSOURCE_World")
  public var World: String

  @JsName("TRANSFORMPOSSOURCE_TranslatedWorld")
  public var TranslatedWorld: String

  @JsName("TRANSFORMPOSSOURCE_View")
  public var View: String

  @JsName("TRANSFORMPOSSOURCE_Camera")
  public var Camera: String

  @JsName("TRANSFORMPOSSOURCE_Particle")
  public var Particle: String

  @JsName("TRANSFORMPOSSOURCE_Instance")
  public var Instance: String

  @JsName("TRANSFORMPOSSOURCE_MAX")
  public var Max: String
}

public open external class MaterialExpressionTransformPosition(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  @JsName("TransformSourceType")
  public open var transformSourceType: String

  @JsName("TransformType")
  public open var transformType: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTransformPosition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTransformPosition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTransformPosition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTransformPosition

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTransformPosition

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTransformPosition
  }
}

public open external class MaterialExpressionTruncate(
  outer: UObject,
) : MaterialExpression {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTruncate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTruncate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTruncate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTruncate

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTruncate

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTruncate
  }
}

public open external class MaterialExpressionTwoSidedSign(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionTwoSidedSign

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionTwoSidedSign

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionTwoSidedSign

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionTwoSidedSign

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionTwoSidedSign

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionTwoSidedSign
  }
}

@JsName("EVectorNoiseFunction")
public external object VectorNoiseFunction {
  @JsName("VNF_CellnoiseALU")
  public var CellnoiseAlu: String

  @JsName("VNF_VectorALU")
  public var VectorAlu: String

  @JsName("VNF_GradientALU")
  public var GradientAlu: String

  @JsName("VNF_CurlALU")
  public var CurlAlu: String

  @JsName("VNF_VoronoiALU")
  public var VoronoiAlu: String

  @JsName("VNF_MAX")
  public var Max: String
}

public open external class MaterialExpressionVectorNoise(
  outer: UObject,
) : MaterialExpression {
  public open var position: ExpressionInput

  @JsName("NoiseFunction")
  public open var noiseFunction: String

  @JsName("Quality")
  public open var quality: Number

  @JsName("bTiling")
  public open var tiling: Boolean

  @JsName("TileSize")
  public open var tileSize: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVectorNoise

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionVectorNoise

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVectorNoise

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVectorNoise

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVectorNoise

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVectorNoise
  }
}

public open external class MaterialExpressionVertexColor(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVertexColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionVertexColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVertexColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVertexColor

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVertexColor

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVertexColor
  }
}

public open external class MaterialExpressionVertexInterpolator(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("Input")
  public open var input: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVertexInterpolator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionVertexInterpolator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVertexInterpolator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVertexInterpolator

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVertexInterpolator

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVertexInterpolator
  }
}

@JsName("MaterialExpressionVertexNormalWS")
public open external class MaterialExpressionVertexNormalWs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVertexNormalWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionVertexNormalWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVertexNormalWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVertexNormalWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVertexNormalWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVertexNormalWs
  }
}

@JsName("MaterialExpressionVertexTangentWS")
public open external class MaterialExpressionVertexTangentWs(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVertexTangentWs

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionVertexTangentWs

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVertexTangentWs

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVertexTangentWs

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVertexTangentWs

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVertexTangentWs
  }
}

@JsName("EMaterialExposedViewProperty")
public external object MaterialExposedViewProperty {
  @JsName("MEVP_BufferSize")
  public var BufferSize: String

  @JsName("MEVP_FieldOfView")
  public var FieldOfView: String

  @JsName("MEVP_TanHalfFieldOfView")
  public var TanHalfFieldOfView: String

  @JsName("MEVP_ViewSize")
  public var ViewSize: String

  @JsName("MEVP_WorldSpaceViewPosition")
  public var WorldSpaceViewPosition: String

  @JsName("MEVP_WorldSpaceCameraPosition")
  public var WorldSpaceCameraPosition: String

  @JsName("MEVP_ViewportOffset")
  public var ViewportOffset: String

  @JsName("MEVP_TemporalSampleCount")
  public var TemporalSampleCount: String

  @JsName("MEVP_TemporalSampleIndex")
  public var TemporalSampleIndex: String

  @JsName("MEVP_TemporalSampleOffset")
  public var TemporalSampleOffset: String

  @JsName("MEVP_RuntimeVirtualTextureOutputLevel")
  public var RuntimeVirtualTextureOutputLevel: String

  @JsName("MEVP_RuntimeVirtualTextureOutputDerivative")
  public var RuntimeVirtualTextureOutputDerivative: String

  @JsName("MEVP_PreExposure")
  public var PreExposure: String

  @JsName("MEVP_RuntimeVirtualTextureMaxLevel")
  public var RuntimeVirtualTextureMaxLevel: String

  @JsName("MEVP_MAX")
  public var Max: String
}

public open external class MaterialExpressionViewProperty(
  outer: UObject,
) : MaterialExpression {
  @JsName("Property")
  public open var property: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionViewProperty

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionViewProperty

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionViewProperty

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionViewProperty

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionViewProperty

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionViewProperty
  }
}

public open external class MaterialExpressionViewSize(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionViewSize

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionViewSize

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionViewSize

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionViewSize

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionViewSize

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionViewSize
  }
}

public open external class MaterialExpressionVirtualTextureFeatureSwitch(
  outer: UObject,
) : MaterialExpression {
  @JsName("No")
  public open var no: ExpressionInput

  @JsName("Yes")
  public open var yes: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVirtualTextureFeatureSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionVirtualTextureFeatureSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVirtualTextureFeatureSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVirtualTextureFeatureSwitch

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVirtualTextureFeatureSwitch

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVirtualTextureFeatureSwitch
  }
}

public open external class MaterialExpressionVolumetricAdvancedMaterialInput(
  outer: UObject,
) : MaterialExpression {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVolumetricAdvancedMaterialInput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionVolumetricAdvancedMaterialInput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVolumetricAdvancedMaterialInput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVolumetricAdvancedMaterialInput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVolumetricAdvancedMaterialInput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVolumetricAdvancedMaterialInput
  }
}

public open external class MaterialExpressionVolumetricAdvancedMaterialOutput(
  outer: UObject,
) : MaterialExpressionCustomOutput {
  @JsName("PhaseG")
  public open var phaseG: ExpressionInput

  @JsName("PhaseG2")
  public open var phaseG2: ExpressionInput

  @JsName("PhaseBlend")
  public open var phaseBlend: ExpressionInput

  @JsName("MultiScatteringContribution")
  public open var multiScatteringContribution: ExpressionInput

  @JsName("MultiScatteringOcclusion")
  public open var multiScatteringOcclusion: ExpressionInput

  @JsName("MultiScatteringEccentricity")
  public open var multiScatteringEccentricity: ExpressionInput

  @JsName("ConservativeDensity")
  public open var conservativeDensity: ExpressionInput

  @JsName("ConstPhaseG")
  public open var constPhaseG: Number

  @JsName("ConstPhaseG2")
  public open var constPhaseG2: Number

  @JsName("ConstPhaseBlend")
  public open var constPhaseBlend: Number

  @JsName("PerSamplePhaseEvaluation")
  public open var perSamplePhaseEvaluation: Boolean

  @JsName("MultiScatteringApproximationOctaveCount")
  public open var multiScatteringApproximationOctaveCount: Any

  @JsName("ConstMultiScatteringContribution")
  public open var constMultiScatteringContribution: Number

  @JsName("ConstMultiScatteringOcclusion")
  public open var constMultiScatteringOcclusion: Number

  @JsName("ConstMultiScatteringEccentricity")
  public open var constMultiScatteringEccentricity: Number

  @JsName("bGroundContribution")
  public open var groundContribution: Boolean

  @JsName("bGrayScaleMaterial")
  public open var grayScaleMaterial: Boolean

  @JsName("bRayMarchVolumeShadow")
  public open var rayMarchVolumeShadow: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionVolumetricAdvancedMaterialOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialExpressionVolumetricAdvancedMaterialOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionVolumetricAdvancedMaterialOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionVolumetricAdvancedMaterialOutput

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionVolumetricAdvancedMaterialOutput

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionVolumetricAdvancedMaterialOutput
  }
}

public open external class MaterialExpressionWhileLoop(
  outer: UObject,
) : MaterialExpression {
  @JsName("LoopBody")
  public open var loopBody: ExpressionExecOutput

  @JsName("Completed")
  public open var completed: ExpressionExecOutput

  @JsName("Condition")
  public open var condition: ExpressionInput

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionWhileLoop

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionWhileLoop

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionWhileLoop

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionWhileLoop

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionWhileLoop

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionWhileLoop
  }
}

@JsName("EWorldPositionIncludedOffsets")
public external object WorldPositionIncludedOffsets {
  @JsName("WPT_Default")
  public var Default: String

  @JsName("WPT_ExcludeAllShaderOffsets")
  public var ExcludeAllShaderOffsets: String

  @JsName("WPT_CameraRelative")
  public var CameraRelative: String

  @JsName("WPT_CameraRelativeNoOffsets")
  public var CameraRelativeNoOffsets: String

  @JsName("WPT_MAX")
  public var Max: String
}

public open external class MaterialExpressionWorldPosition(
  outer: UObject,
) : MaterialExpression {
  @JsName("WorldPositionShaderOffset")
  public open var worldPositionShaderOffset: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionWorldPosition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionWorldPosition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionWorldPosition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionWorldPosition

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionWorldPosition

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionWorldPosition
  }
}

public open external class MaterialFunctionMaterialLayer(
  outer: UObject,
) : MaterialFunction {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialFunctionMaterialLayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialFunctionMaterialLayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialFunctionMaterialLayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialFunctionMaterialLayer

    @JsName("C")
    public fun copy(other: UObject): MaterialFunctionMaterialLayer

    @JsName("C")
    public fun copy(other: Any): MaterialFunctionMaterialLayer
  }
}

public open external class MaterialFunctionMaterialLayerInstance(
  outer: UObject,
) : MaterialFunctionInstance {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialFunctionMaterialLayerInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialFunctionMaterialLayerInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialFunctionMaterialLayerInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialFunctionMaterialLayerInstance

    @JsName("C")
    public fun copy(other: UObject): MaterialFunctionMaterialLayerInstance

    @JsName("C")
    public fun copy(other: Any): MaterialFunctionMaterialLayerInstance
  }
}

public open external class MaterialFunctionMaterialLayerBlend(
  outer: UObject,
) : MaterialFunction {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialFunctionMaterialLayerBlend

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialFunctionMaterialLayerBlend

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialFunctionMaterialLayerBlend

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialFunctionMaterialLayerBlend

    @JsName("C")
    public fun copy(other: UObject): MaterialFunctionMaterialLayerBlend

    @JsName("C")
    public fun copy(other: Any): MaterialFunctionMaterialLayerBlend
  }
}

public open external class MaterialFunctionMaterialLayerBlendInstance(
  outer: UObject,
) : MaterialFunctionInstance {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialFunctionMaterialLayerBlendInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MaterialFunctionMaterialLayerBlendInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialFunctionMaterialLayerBlendInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialFunctionMaterialLayerBlendInstance

    @JsName("C")
    public fun copy(other: UObject): MaterialFunctionMaterialLayerBlendInstance

    @JsName("C")
    public fun copy(other: Any): MaterialFunctionMaterialLayerBlendInstance
  }
}

public open external class MaterialInstanceActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("TargetActors")
  public open var targetActors: Array<Actor>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialInstanceActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialInstanceActor

    @JsName("C")
    public fun copy(other: UObject): MaterialInstanceActor

    @JsName("C")
    public fun copy(other: Any): MaterialInstanceActor
  }
}

public open external class MatineeActorCameraAnim(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : MatineeActor {
  @JsName("CameraAnim")
  public open var cameraAnim: CameraAnim

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MatineeActorCameraAnim

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MatineeActorCameraAnim

    @JsName("C")
    public fun copy(other: UObject): MatineeActorCameraAnim

    @JsName("C")
    public fun copy(other: Any): MatineeActorCameraAnim
  }
}

public open external class MatineeAnimInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MatineeAnimInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MatineeAnimInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MatineeAnimInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MatineeAnimInterface

    @JsName("C")
    public fun copy(other: UObject): MatineeAnimInterface

    @JsName("C")
    public fun copy(other: Any): MatineeAnimInterface
  }
}

public open external class MatineeInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MatineeInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MatineeInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MatineeInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MatineeInterface

    @JsName("C")
    public fun copy(other: UObject): MatineeInterface

    @JsName("C")
    public fun copy(other: Any): MatineeInterface
  }
}

public open external class MeshMergeCullingVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshMergeCullingVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshMergeCullingVolume

    @JsName("C")
    public fun copy(other: UObject): MeshMergeCullingVolume

    @JsName("C")
    public fun copy(other: Any): MeshMergeCullingVolume
  }
}

public open external class MeshSimplificationSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("MeshReductionModuleName")
  public open var meshReductionModuleName: String

  @JsName("bMeshReductionBackwardCompatible")
  public open var meshReductionBackwardCompatible: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshSimplificationSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshSimplificationSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshSimplificationSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshSimplificationSettings

    @JsName("C")
    public fun copy(other: UObject): MeshSimplificationSettings

    @JsName("C")
    public fun copy(other: Any): MeshSimplificationSettings
  }
}

public open external class MeshVertexPainterKismetLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshVertexPainterKismetLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshVertexPainterKismetLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshVertexPainterKismetLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshVertexPainterKismetLibrary

    @JsName("RemovePaintedVertices")
    public fun removePaintedVertices(staticMeshComponent: StaticMeshComponent): Unit

    @JsName("PaintVerticesSingleColor")
    public fun paintVerticesSingleColor(
      staticMeshComponent: StaticMeshComponent,
      fillColor: LinearColor,
      convertToSrgb: Boolean,
    ): Unit

    @JsName("PaintVerticesLerpAlongAxis")
    public fun paintVerticesLerpAlongAxis(
      staticMeshComponent: StaticMeshComponent,
      startColor: LinearColor,
      endColor: LinearColor,
      axis: String,
      convertToSrgb: Boolean,
    ): Unit

    @JsName("C")
    public fun copy(other: UObject): MeshVertexPainterKismetLibrary

    @JsName("C")
    public fun copy(other: Any): MeshVertexPainterKismetLibrary
  }
}

public open external class PurchaseInfo {
  @JsName("Identifier")
  public open var identifier: String

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("DisplayDescription")
  public open var displayDescription: String

  @JsName("DisplayPrice")
  public open var displayPrice: String

  public open fun clone(): PurchaseInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PurchaseInfo

    @JsName("C")
    public fun copy(other: Any): PurchaseInfo
  }
}

public open external class MicroTransactionBase(
  outer: UObject,
) : PlatformInterfaceBase {
  @JsName("AvailableProducts")
  public open var availableProducts: Array<PurchaseInfo>

  @JsName("LastError")
  public open var lastError: String

  @JsName("LastErrorSolution")
  public open var lastErrorSolution: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MicroTransactionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MicroTransactionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MicroTransactionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MicroTransactionBase

    @JsName("C")
    public fun copy(other: UObject): MicroTransactionBase

    @JsName("C")
    public fun copy(other: Any): MicroTransactionBase
  }
}

public open external class NavAgentInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NavAgentInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NavAgentInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavAgentInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavAgentInterface

    @JsName("C")
    public fun copy(other: UObject): NavAgentInterface

    @JsName("C")
    public fun copy(other: Any): NavAgentInterface
  }
}

public open external class NavEdgeProviderInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NavEdgeProviderInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NavEdgeProviderInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavEdgeProviderInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavEdgeProviderInterface

    @JsName("C")
    public fun copy(other: UObject): NavEdgeProviderInterface

    @JsName("C")
    public fun copy(other: Any): NavEdgeProviderInterface
  }
}

public open external class NavigationDataChunkActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : PartitionActor {
  @JsName("NavDataChunks")
  public open var navDataChunks: Array<NavigationDataChunk>

  @JsName("DataChunkActorBounds")
  public open var dataChunkActorBounds: Box

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavigationDataChunkActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavigationDataChunkActor

    @JsName("C")
    public fun copy(other: UObject): NavigationDataChunkActor

    @JsName("C")
    public fun copy(other: Any): NavigationDataChunkActor
  }
}

public open external class NavigationDataInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NavigationDataInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NavigationDataInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavigationDataInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavigationDataInterface

    @JsName("C")
    public fun copy(other: UObject): NavigationDataInterface

    @JsName("C")
    public fun copy(other: Any): NavigationDataInterface
  }
}

public open external class NullNavSysConfig(
  outer: UObject,
) : NavigationSystemConfig {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NullNavSysConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NullNavSysConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NullNavSysConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NullNavSysConfig

    @JsName("C")
    public fun copy(other: UObject): NullNavSysConfig

    @JsName("C")
    public fun copy(other: Any): NullNavSysConfig
  }
}

public open external class NavPathObserverInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NavPathObserverInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NavPathObserverInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavPathObserverInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavPathObserverInterface

    @JsName("C")
    public fun copy(other: UObject): NavPathObserverInterface

    @JsName("C")
    public fun copy(other: Any): NavPathObserverInterface
  }
}

public open external class NavRelevantInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NavRelevantInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NavRelevantInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NavRelevantInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NavRelevantInterface

    @JsName("C")
    public fun copy(other: UObject): NavRelevantInterface

    @JsName("C")
    public fun copy(other: Any): NavRelevantInterface
  }
}

public open external class SimulatedClientNetConnection(
  outer: UObject,
) : NetConnection {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SimulatedClientNetConnection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SimulatedClientNetConnection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SimulatedClientNetConnection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SimulatedClientNetConnection

    @JsName("C")
    public fun copy(other: UObject): SimulatedClientNetConnection

    @JsName("C")
    public fun copy(other: Any): SimulatedClientNetConnection
  }
}

public open external class NetFaultConfig(
  outer: UObject,
) : EscalationManagerConfig {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NetFaultConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NetFaultConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NetFaultConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NetFaultConfig

    @JsName("C")
    public fun copy(other: UObject): NetFaultConfig

    @JsName("C")
    public fun copy(other: Any): NetFaultConfig
  }
}

public open external class NetPushModelHelpers(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NetPushModelHelpers

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NetPushModelHelpers

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NetPushModelHelpers

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NetPushModelHelpers

    @JsName("MarkPropertyDirtyFromRepIndex")
    public fun markPropertyDirtyFromRepIndex(
      uObject: UObject,
      repIndex: Number,
      propertyName: String,
    ): Unit

    @JsName("MarkPropertyDirty")
    public fun markPropertyDirty(uObject: UObject, propertyName: String): Unit

    @JsName("C")
    public fun copy(other: UObject): NetPushModelHelpers

    @JsName("C")
    public fun copy(other: Any): NetPushModelHelpers
  }
}

public open external class NetworkPredictionInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NetworkPredictionInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NetworkPredictionInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NetworkPredictionInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NetworkPredictionInterface

    @JsName("C")
    public fun copy(other: UObject): NetworkPredictionInterface

    @JsName("C")
    public fun copy(other: Any): NetworkPredictionInterface
  }
}

public open external class NetworkEmulationProfileDescription {
  @JsName("ProfileName")
  public open var profileName: String

  @JsName("Tooltip")
  public open var tooltip: String

  public open fun clone(): NetworkEmulationProfileDescription

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NetworkEmulationProfileDescription

    @JsName("C")
    public fun copy(other: Any): NetworkEmulationProfileDescription
  }
}

public open external class NetworkSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bVerifyPeer")
  public open var verifyPeer: Boolean

  @JsName("bEnableMultiplayerWorldOriginRebasing")
  public open var enableMultiplayerWorldOriginRebasing: Boolean

  @JsName("MaxRepArraySize")
  public open var maxRepArraySize: Number

  @JsName("MaxRepArrayMemory")
  public open var maxRepArrayMemory: Number

  @JsName("NetworkEmulationProfiles")
  public open var networkEmulationProfiles: Array<NetworkEmulationProfileDescription>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NetworkSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NetworkSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NetworkSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NetworkSettings

    @JsName("C")
    public fun copy(other: UObject): NetworkSettings

    @JsName("C")
    public fun copy(other: Any): NetworkSettings
  }
}

public open external class NodeMappingProviderInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NodeMappingProviderInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NodeMappingProviderInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NodeMappingProviderInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NodeMappingProviderInterface

    @JsName("C")
    public fun copy(other: UObject): NodeMappingProviderInterface

    @JsName("C")
    public fun copy(other: Any): NodeMappingProviderInterface
  }
}

public open external class Note(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  public open var text: String

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Note

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Note

    @JsName("C")
    public fun copy(other: UObject): Note

    @JsName("C")
    public fun copy(other: Any): Note
  }
}

public open external class ObjectElementAssetDataInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectElementAssetDataInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectElementAssetDataInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectElementAssetDataInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectElementAssetDataInterface

    @JsName("C")
    public fun copy(other: UObject): ObjectElementAssetDataInterface

    @JsName("C")
    public fun copy(other: Any): ObjectElementAssetDataInterface
  }
}

public open external class ObjectElementCounterInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectElementCounterInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectElementCounterInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectElementCounterInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectElementCounterInterface

    @JsName("C")
    public fun copy(other: UObject): ObjectElementCounterInterface

    @JsName("C")
    public fun copy(other: Any): ObjectElementCounterInterface
  }
}

public open external class ObjectElementObjectInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectElementObjectInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectElementObjectInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectElementObjectInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectElementObjectInterface

    @JsName("C")
    public fun copy(other: UObject): ObjectElementObjectInterface

    @JsName("C")
    public fun copy(other: Any): ObjectElementObjectInterface
  }
}

public open external class ObjectLibrary(
  outer: UObject,
) : UObject {
  @JsName("ObjectBaseClass")
  public open var objectBaseClass: UnrealEngineClass

  @JsName("bHasBlueprintClasses")
  public open var hasBlueprintClasses: Boolean

  @JsName("Objects")
  public open var objects: Array<UObject>

  @JsName("WeakObjects")
  public open var weakObjects: Array<Any>

  @JsName("bUseWeakReferences")
  public open var useWeakReferences: Boolean

  @JsName("bIsFullyLoaded")
  public open var isFullyLoaded: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectLibrary

    @JsName("C")
    public fun copy(other: UObject): ObjectLibrary

    @JsName("C")
    public fun copy(other: Any): ObjectLibrary
  }
}

public open external class ObjectReferencer(
  outer: UObject,
) : UObject {
  @JsName("ReferencedObjects")
  public open var referencedObjects: Array<UObject>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectReferencer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectReferencer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectReferencer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectReferencer

    @JsName("C")
    public fun copy(other: UObject): ObjectReferencer

    @JsName("C")
    public fun copy(other: Any): ObjectReferencer
  }
}

public open external class ObjectTraceWorldSubsystem(
  outer: UObject,
) : WorldSubsystem {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ObjectTraceWorldSubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ObjectTraceWorldSubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ObjectTraceWorldSubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ObjectTraceWorldSubsystem

    @JsName("C")
    public fun copy(other: UObject): ObjectTraceWorldSubsystem

    @JsName("C")
    public fun copy(other: Any): ObjectTraceWorldSubsystem
  }
}

public open external class OnlineBlueprintCallProxyBase(
  outer: UObject,
) : BlueprintAsyncActionBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineBlueprintCallProxyBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineBlueprintCallProxyBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineBlueprintCallProxyBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineBlueprintCallProxyBase

    @JsName("C")
    public fun copy(other: UObject): OnlineBlueprintCallProxyBase

    @JsName("C")
    public fun copy(other: Any): OnlineBlueprintCallProxyBase
  }
}

public open external class OnlineEngineInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineEngineInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineEngineInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineEngineInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineEngineInterface

    @JsName("C")
    public fun copy(other: UObject): OnlineEngineInterface

    @JsName("C")
    public fun copy(other: Any): OnlineEngineInterface
  }
}

public open external class PackageMapClient(
  outer: UObject,
) : PackageMap {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PackageMapClient

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PackageMapClient

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PackageMapClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PackageMapClient

    @JsName("C")
    public fun copy(other: UObject): PackageMapClient

    @JsName("C")
    public fun copy(other: Any): PackageMapClient
  }
}

public open external class PackedLevelActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : LevelInstance {
  @JsName("BlueprintAsset")
  public open var blueprintAsset: Blueprint

  @JsName("PackedBPDependencies")
  public open var packedBpDependencies: Array<Blueprint>

  @JsName("PackedVersion")
  public open var packedVersion: Guid

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PackedLevelActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PackedLevelActor

    @JsName("C")
    public fun copy(other: UObject): PackedLevelActor

    @JsName("C")
    public fun copy(other: Any): PackedLevelActor
  }
}

public open external class PainCausingVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : PhysicsVolume {
  @JsName("bPainCausing")
  public open var painCausing: Boolean

  @JsName("DamagePerSec")
  public open var damagePerSec: Number

  @JsName("DamageType")
  public open var damageType: UnrealEngineClass

  @JsName("PainInterval")
  public open var painInterval: Number

  @JsName("bEntryPain")
  public open var entryPain: Boolean

  @JsName("BACKUP_bPainCausing")
  public open var backuPbPainCausing: Boolean

  @JsName("DamageInstigator")
  public open var damageInstigator: Controller

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PainCausingVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PainCausingVolume

    @JsName("C")
    public fun copy(other: UObject): PainCausingVolume

    @JsName("C")
    public fun copy(other: Any): PainCausingVolume
  }
}

public open external class ParticleModuleAccelerationBase(
  outer: UObject,
) : ParticleModule {
  @JsName("bAlwaysInWorldSpace")
  public open var alwaysInWorldSpace: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAccelerationBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAccelerationBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAccelerationBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAccelerationBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAccelerationBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAccelerationBase
  }
}

public open external class ParticleModuleAcceleration(
  outer: UObject,
) : ParticleModuleAccelerationBase {
  @JsName("Acceleration")
  public open var acceleration: RawDistributionVector

  @JsName("bApplyOwnerScale")
  public open var applyOwnerScale: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAcceleration

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAcceleration

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAcceleration

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAcceleration

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAcceleration

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAcceleration
  }
}

public open external class ParticleModuleAccelerationConstant(
  outer: UObject,
) : ParticleModuleAccelerationBase {
  @JsName("Acceleration")
  public open var acceleration: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAccelerationConstant

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAccelerationConstant

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAccelerationConstant

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAccelerationConstant

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAccelerationConstant

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAccelerationConstant
  }
}

public open external class ParticleModuleAccelerationDrag(
  outer: UObject,
) : ParticleModuleAccelerationBase {
  @JsName("DragCoefficient")
  public open var dragCoefficient: DistributionFloat

  @JsName("DragCoefficientRaw")
  public open var dragCoefficientRaw: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAccelerationDrag

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAccelerationDrag

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAccelerationDrag

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAccelerationDrag

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAccelerationDrag

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAccelerationDrag
  }
}

public open external class ParticleModuleAccelerationDragScaleOverLife(
  outer: UObject,
) : ParticleModuleAccelerationBase {
  @JsName("DragScale")
  public open var dragScale: DistributionFloat

  @JsName("DragScaleRaw")
  public open var dragScaleRaw: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAccelerationDragScaleOverLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ParticleModuleAccelerationDragScaleOverLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAccelerationDragScaleOverLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAccelerationDragScaleOverLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAccelerationDragScaleOverLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAccelerationDragScaleOverLife
  }
}

public open external class ParticleModuleAccelerationOverLifetime(
  outer: UObject,
) : ParticleModuleAccelerationBase {
  @JsName("AccelOverLife")
  public open var accelOverLife: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAccelerationOverLifetime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAccelerationOverLifetime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAccelerationOverLifetime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAccelerationOverLifetime

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAccelerationOverLifetime

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAccelerationOverLifetime
  }
}

public open external class ParticleModuleAttractorBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAttractorBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAttractorBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAttractorBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAttractorBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAttractorBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAttractorBase
  }
}

public open external class ParticleModuleAttractorLine(
  outer: UObject,
) : ParticleModuleAttractorBase {
  @JsName("EndPoint0")
  public open var endPoint0: Vector

  @JsName("EndPoint1")
  public open var endPoint1: Vector

  @JsName("Range")
  public open var range: RawDistributionFloat

  @JsName("Strength")
  public open var strength: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAttractorLine

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAttractorLine

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAttractorLine

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAttractorLine

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAttractorLine

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAttractorLine
  }
}

@JsName("EAttractorParticleSelectionMethod")
public external object AttractorParticleSelectionMethod {
  @JsName("EAPSM_Random")
  public var Random: String

  @JsName("EAPSM_Sequential")
  public var Sequential: String

  @JsName("EAPSM_MAX")
  public var Max: String
}

public open external class ParticleModuleAttractorParticle(
  outer: UObject,
) : ParticleModuleAttractorBase {
  @JsName("EmitterName")
  public open var emitterName: String

  @JsName("Range")
  public open var range: RawDistributionFloat

  @JsName("bStrengthByDistance")
  public open var strengthByDistance: Boolean

  @JsName("Strength")
  public open var strength: RawDistributionFloat

  @JsName("bAffectBaseVelocity")
  public open var affectBaseVelocity: Boolean

  @JsName("SelectionMethod")
  public open var selectionMethod: String

  @JsName("bRenewSource")
  public open var renewSource: Boolean

  @JsName("bInheritSourceVel")
  public open var inheritSourceVel: Boolean

  @JsName("LastSelIndex")
  public open var lastSelIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAttractorParticle

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAttractorParticle

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAttractorParticle

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAttractorParticle

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAttractorParticle

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAttractorParticle
  }
}

public open external class ParticleModuleAttractorPoint(
  outer: UObject,
) : ParticleModuleAttractorBase {
  public open var position: RawDistributionVector

  @JsName("Range")
  public open var range: RawDistributionFloat

  @JsName("Strength")
  public open var strength: RawDistributionFloat

  @JsName("StrengthByDistance")
  public open var strengthByDistance: Boolean

  @JsName("bAffectBaseVelocity")
  public open var affectBaseVelocity: Boolean

  @JsName("bOverrideVelocity")
  public open var overrideVelocity: Boolean

  @JsName("bUseWorldSpacePosition")
  public open var useWorldSpacePosition: Boolean

  @JsName("Positive_X")
  public open var positiveX: Boolean

  @JsName("Positive_Y")
  public open var positiveY: Boolean

  @JsName("Positive_Z")
  public open var positiveZ: Boolean

  @JsName("Negative_X")
  public open var negativeX: Boolean

  @JsName("Negative_Y")
  public open var negativeY: Boolean

  @JsName("Negative_Z")
  public open var negativeZ: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAttractorPoint

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAttractorPoint

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAttractorPoint

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAttractorPoint

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAttractorPoint

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAttractorPoint
  }
}

public open external class ParticleModuleAttractorPointGravity(
  outer: UObject,
) : ParticleModuleAttractorBase {
  public open var position: Vector

  @JsName("Radius")
  public open var radius: Number

  @JsName("Strength")
  public open var strength: DistributionFloat

  @JsName("StrengthRaw")
  public open var strengthRaw: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleAttractorPointGravity

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleAttractorPointGravity

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleAttractorPointGravity

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleAttractorPointGravity

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleAttractorPointGravity

    @JsName("C")
    public fun copy(other: Any): ParticleModuleAttractorPointGravity
  }
}

public open external class ParticleModuleBeamBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleBeamBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleBeamBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleBeamBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleBeamBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleBeamBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleBeamBase
  }
}

public external object BeamModifierType {
  @JsName("PEB2MT_Source")
  public var peb2mtSource: String

  @JsName("PEB2MT_Target")
  public var peb2mtTarget: String

  @JsName("PEB2MT_MAX")
  public var peb2mtmax: String
}

public open external class BeamModifierOptions {
  @JsName("bModify")
  public open var modify: Boolean

  @JsName("bScale")
  public open var scale: Boolean

  @JsName("bLock")
  public open var lock: Boolean

  public open fun clone(): BeamModifierOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): BeamModifierOptions

    @JsName("C")
    public fun copy(other: Any): BeamModifierOptions
  }
}

public open external class ParticleModuleBeamModifier(
  outer: UObject,
) : ParticleModuleBeamBase {
  @JsName("ModifierType")
  public open var modifierType: String

  @JsName("PositionOptions")
  public open var positionOptions: BeamModifierOptions

  public open var position: RawDistributionVector

  @JsName("TangentOptions")
  public open var tangentOptions: BeamModifierOptions

  @JsName("Tangent")
  public open var tangent: RawDistributionVector

  @JsName("bAbsoluteTangent")
  public open var absoluteTangent: Boolean

  @JsName("StrengthOptions")
  public open var strengthOptions: BeamModifierOptions

  @JsName("Strength")
  public open var strength: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleBeamModifier

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleBeamModifier

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleBeamModifier

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleBeamModifier

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleBeamModifier

    @JsName("C")
    public fun copy(other: Any): ParticleModuleBeamModifier
  }
}

public open external class ParticleModuleBeamNoise(
  outer: UObject,
) : ParticleModuleBeamBase {
  @JsName("bLowFreq_Enabled")
  public open var lowFreqEnabled: Boolean

  @JsName("Frequency")
  public open var frequency: Number

  @JsName("Frequency_LowRange")
  public open var frequencyLowRange: Number

  @JsName("NoiseRange")
  public open var noiseRange: RawDistributionVector

  @JsName("NoiseRangeScale")
  public open var noiseRangeScale: RawDistributionFloat

  @JsName("bNRScaleEmitterTime")
  public open var nrScaleEmitterTime: Boolean

  @JsName("NoiseSpeed")
  public open var noiseSpeed: RawDistributionVector

  @JsName("bSmooth")
  public open var smooth: Boolean

  @JsName("NoiseLockRadius")
  public open var noiseLockRadius: Number

  @JsName("bNoiseLock")
  public open var noiseLock: Boolean

  @JsName("bOscillate")
  public open var oscillate: Boolean

  @JsName("NoiseLockTime")
  public open var noiseLockTime: Number

  @JsName("NoiseTension")
  public open var noiseTension: Number

  @JsName("bUseNoiseTangents")
  public open var useNoiseTangents: Boolean

  @JsName("NoiseTangentStrength")
  public open var noiseTangentStrength: RawDistributionFloat

  @JsName("NoiseTessellation")
  public open var noiseTessellation: Number

  @JsName("bTargetNoise")
  public open var targetNoise: Boolean

  @JsName("FrequencyDistance")
  public open var frequencyDistance: Number

  @JsName("bApplyNoiseScale")
  public open var applyNoiseScale: Boolean

  @JsName("NoiseScale")
  public open var noiseScale: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleBeamNoise

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleBeamNoise

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleBeamNoise

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleBeamNoise

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleBeamNoise

    @JsName("C")
    public fun copy(other: Any): ParticleModuleBeamNoise
  }
}

public external object Beam2SourceTargetMethod {
  @JsName("PEB2STM_Default")
  public var peb2stmDefault: String

  @JsName("PEB2STM_UserSet")
  public var peb2stmUserSet: String

  @JsName("PEB2STM_Emitter")
  public var peb2stmEmitter: String

  @JsName("PEB2STM_Particle")
  public var peb2stmParticle: String

  @JsName("PEB2STM_Actor")
  public var peb2stmActor: String

  @JsName("PEB2STM_MAX")
  public var peb2stmmax: String
}

public external object Beam2SourceTargetTangentMethod {
  @JsName("PEB2STTM_Direct")
  public var peb2sttmDirect: String

  @JsName("PEB2STTM_UserSet")
  public var peb2sttmUserSet: String

  @JsName("PEB2STTM_Distribution")
  public var peb2sttmDistribution: String

  @JsName("PEB2STTM_Emitter")
  public var peb2sttmEmitter: String

  @JsName("PEB2STTM_MAX")
  public var peb2sttmmax: String
}

public open external class ParticleModuleBeamSource(
  outer: UObject,
) : ParticleModuleBeamBase {
  @JsName("SourceMethod")
  public open var sourceMethod: String

  @JsName("SourceName")
  public open var sourceName: String

  @JsName("bSourceAbsolute")
  public open var sourceAbsolute: Boolean

  @JsName("Source")
  public open var source: RawDistributionVector

  @JsName("bLockSource")
  public open var lockSource: Boolean

  @JsName("SourceTangentMethod")
  public open var sourceTangentMethod: String

  @JsName("SourceTangent")
  public open var sourceTangent: RawDistributionVector

  @JsName("bLockSourceTangent")
  public open var lockSourceTangent: Boolean

  @JsName("SourceStrength")
  public open var sourceStrength: RawDistributionFloat

  @JsName("bLockSourceStength")
  public open var lockSourceStength: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleBeamSource

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleBeamSource

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleBeamSource

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleBeamSource

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleBeamSource

    @JsName("C")
    public fun copy(other: Any): ParticleModuleBeamSource
  }
}

public open external class ParticleModuleBeamTarget(
  outer: UObject,
) : ParticleModuleBeamBase {
  @JsName("TargetMethod")
  public open var targetMethod: String

  @JsName("TargetName")
  public open var targetName: String

  @JsName("Target")
  public open var target: RawDistributionVector

  @JsName("bTargetAbsolute")
  public open var targetAbsolute: Boolean

  @JsName("bLockTarget")
  public open var lockTarget: Boolean

  @JsName("TargetTangentMethod")
  public open var targetTangentMethod: String

  @JsName("TargetTangent")
  public open var targetTangent: RawDistributionVector

  @JsName("bLockTargetTangent")
  public open var lockTargetTangent: Boolean

  @JsName("TargetStrength")
  public open var targetStrength: RawDistributionFloat

  @JsName("bLockTargetStength")
  public open var lockTargetStength: Boolean

  @JsName("LockRadius")
  public open var lockRadius: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleBeamTarget

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleBeamTarget

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleBeamTarget

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleBeamTarget

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleBeamTarget

    @JsName("C")
    public fun copy(other: Any): ParticleModuleBeamTarget
  }
}

public open external class ParticleModuleCameraBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleCameraBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleCameraBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleCameraBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleCameraBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleCameraBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleCameraBase
  }
}

@JsName("EParticleCameraOffsetUpdateMethod")
public external object ParticleCameraOffsetUpdateMethod {
  @JsName("EPCOUM_DirectSet")
  public var DirectSet: String

  @JsName("EPCOUM_Additive")
  public var Additive: String

  @JsName("EPCOUM_Scalar")
  public var Scalar: String

  @JsName("EPCOUM_MAX")
  public var Max: String
}

public open external class ParticleModuleCameraOffset(
  outer: UObject,
) : ParticleModuleCameraBase {
  @JsName("CameraOffset")
  public open var cameraOffset: RawDistributionFloat

  @JsName("bSpawnTimeOnly")
  public open var spawnTimeOnly: Boolean

  @JsName("UpdateMethod")
  public open var updateMethod: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleCameraOffset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleCameraOffset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleCameraOffset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleCameraOffset

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleCameraOffset

    @JsName("C")
    public fun copy(other: Any): ParticleModuleCameraOffset
  }
}

public open external class ParticleModuleCollisionBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleCollisionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleCollisionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleCollisionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleCollisionBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleCollisionBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleCollisionBase
  }
}

@JsName("EParticleCollisionComplete")
public external object ParticleCollisionComplete {
  @JsName("EPCC_Kill")
  public var Kill: String

  @JsName("EPCC_Freeze")
  public var Freeze: String

  @JsName("EPCC_HaltCollisions")
  public var HaltCollisions: String

  @JsName("EPCC_FreezeTranslation")
  public var FreezeTranslation: String

  @JsName("EPCC_FreezeRotation")
  public var FreezeRotation: String

  @JsName("EPCC_FreezeMovement")
  public var FreezeMovement: String

  @JsName("EPCC_MAX")
  public var Max: String
}

public open external class ParticleModuleCollision(
  outer: UObject,
) : ParticleModuleCollisionBase {
  @JsName("DampingFactor")
  public open var dampingFactor: RawDistributionVector

  @JsName("DampingFactorRotation")
  public open var dampingFactorRotation: RawDistributionVector

  @JsName("MaxCollisions")
  public open var maxCollisions: RawDistributionFloat

  @JsName("CollisionCompletionOption")
  public open var collisionCompletionOption: String

  @JsName("CollisionTypes")
  public open var collisionTypes: Array<String>

  @JsName("bApplyPhysics")
  public open var applyPhysics: Boolean

  @JsName("bIgnoreTriggerVolumes")
  public open var ignoreTriggerVolumes: Boolean

  @JsName("ParticleMass")
  public open var particleMass: RawDistributionFloat

  @JsName("DirScalar")
  public open var dirScalar: Number

  @JsName("bPawnsDoNotDecrementCount")
  public open var pawnsDoNotDecrementCount: Boolean

  @JsName("bOnlyVerticalNormalsDecrementCount")
  public open var onlyVerticalNormalsDecrementCount: Boolean

  @JsName("VerticalFudgeFactor")
  public open var verticalFudgeFactor: Number

  @JsName("DelayAmount")
  public open var delayAmount: RawDistributionFloat

  @JsName("bDropDetail")
  public open var dropDetail: Boolean

  @JsName("bCollideOnlyIfVisible")
  public open var collideOnlyIfVisible: Boolean

  @JsName("bIgnoreSourceActor")
  public open var ignoreSourceActor: Boolean

  @JsName("MaxCollisionDistance")
  public open var maxCollisionDistance: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleCollision

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleCollision

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleCollision

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleCollision

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleCollision

    @JsName("C")
    public fun copy(other: Any): ParticleModuleCollision
  }
}

@JsName("EParticleCollisionResponse")
public external object ParticleCollisionResponse {
  public var Bounce: String

  public var Stop: String

  public var Kill: String

  @JsName("EParticleCollisionResponse_MAX")
  public var Max: String
}

@JsName("EParticleCollisionMode")
public external object ParticleCollisionMode {
  public var SceneDepth: String

  public var DistanceField: String

  @JsName("EParticleCollisionMode_MAX")
  public var Max: String
}

@JsName("ParticleModuleCollisionGPU")
public open external class ParticleModuleCollisionGpu(
  outer: UObject,
) : ParticleModuleCollisionBase {
  @JsName("Resilience")
  public open var resilience: RawDistributionFloat

  @JsName("ResilienceScaleOverLife")
  public open var resilienceScaleOverLife: RawDistributionFloat

  @JsName("Friction")
  public open var friction: Number

  @JsName("RandomSpread")
  public open var randomSpread: Number

  @JsName("RandomDistribution")
  public open var randomDistribution: Number

  @JsName("RadiusScale")
  public open var radiusScale: Number

  @JsName("RadiusBias")
  public open var radiusBias: Number

  @JsName("Response")
  public open var response: String

  @JsName("CollisionMode")
  public open var collisionMode: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleCollisionGpu

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleCollisionGpu

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleCollisionGpu

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleCollisionGpu

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleCollisionGpu

    @JsName("C")
    public fun copy(other: Any): ParticleModuleCollisionGpu
  }
}

public open external class ParticleModuleColorBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleColorBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleColorBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleColorBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleColorBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleColorBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleColorBase
  }
}

public open external class ParticleModuleColor(
  outer: UObject,
) : ParticleModuleColorBase {
  @JsName("StartColor")
  public open var startColor: RawDistributionVector

  @JsName("StartAlpha")
  public open var startAlpha: RawDistributionFloat

  @JsName("bClampAlpha")
  public open var clampAlpha: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleColor

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleColor

    @JsName("C")
    public fun copy(other: Any): ParticleModuleColor
  }
}

public open external class ParticleModuleColorOverLife(
  outer: UObject,
) : ParticleModuleColorBase {
  @JsName("ColorOverLife")
  public open var colorOverLife: RawDistributionVector

  @JsName("AlphaOverLife")
  public open var alphaOverLife: RawDistributionFloat

  @JsName("bClampAlpha")
  public open var clampAlpha: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleColorOverLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleColorOverLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleColorOverLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleColorOverLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleColorOverLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleColorOverLife
  }
}

public open external class ParticleModuleColorScaleOverLife(
  outer: UObject,
) : ParticleModuleColorBase {
  @JsName("ColorScaleOverLife")
  public open var colorScaleOverLife: RawDistributionVector

  @JsName("AlphaScaleOverLife")
  public open var alphaScaleOverLife: RawDistributionFloat

  @JsName("bEmitterTime")
  public open var emitterTime: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleColorScaleOverLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleColorScaleOverLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleColorScaleOverLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleColorScaleOverLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleColorScaleOverLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleColorScaleOverLife
  }
}

public open external class ParticleRandomSeedInfo {
  @JsName("ParameterName")
  public open var parameterName: String

  @JsName("bGetSeedFromInstance")
  public open var getSeedFromInstance: Boolean

  @JsName("bInstanceSeedIsIndex")
  public open var instanceSeedIsIndex: Boolean

  @JsName("bResetSeedOnEmitterLooping")
  public open var resetSeedOnEmitterLooping: Boolean

  @JsName("bRandomlySelectSeedArray")
  public open var randomlySelectSeedArray: Boolean

  @JsName("RandomSeeds")
  public open var randomSeeds: Array<Number>

  public open fun clone(): ParticleRandomSeedInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ParticleRandomSeedInfo

    @JsName("C")
    public fun copy(other: Any): ParticleRandomSeedInfo
  }
}

@JsName("ParticleModuleColor_Seeded")
public open external class ParticleModuleColorSeeded(
  outer: UObject,
) : ParticleModuleColor {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleColorSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleColorSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleColorSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleColorSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleColorSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleColorSeeded
  }
}

public open external class ParticleModuleEventReceiverKillParticles(
  outer: UObject,
) : ParticleModuleEventReceiverBase {
  @JsName("bStopSpawning")
  public open var stopSpawning: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleEventReceiverKillParticles

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleEventReceiverKillParticles

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleEventReceiverKillParticles

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleEventReceiverKillParticles

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleEventReceiverKillParticles

    @JsName("C")
    public fun copy(other: Any): ParticleModuleEventReceiverKillParticles
  }
}

public open external class ParticleModuleEventReceiverSpawn(
  outer: UObject,
) : ParticleModuleEventReceiverBase {
  @JsName("SpawnCount")
  public open var spawnCount: RawDistributionFloat

  @JsName("bUseParticleTime")
  public open var useParticleTime: Boolean

  @JsName("bUsePSysLocation")
  public open var usePSysLocation: Boolean

  @JsName("bInheritVelocity")
  public open var inheritVelocity: Boolean

  @JsName("InheritVelocityScale")
  public open var inheritVelocityScale: RawDistributionVector

  @JsName("PhysicalMaterials")
  public open var physicalMaterials: Array<PhysicalMaterial>

  @JsName("bBanPhysicalMaterials")
  public open var banPhysicalMaterials: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleEventReceiverSpawn

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleEventReceiverSpawn

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleEventReceiverSpawn

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleEventReceiverSpawn

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleEventReceiverSpawn

    @JsName("C")
    public fun copy(other: Any): ParticleModuleEventReceiverSpawn
  }
}

public open external class ParticleModuleKillBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleKillBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleKillBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleKillBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleKillBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleKillBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleKillBase
  }
}

public open external class ParticleModuleKillBox(
  outer: UObject,
) : ParticleModuleKillBase {
  @JsName("LowerLeftCorner")
  public open var lowerLeftCorner: RawDistributionVector

  @JsName("UpperRightCorner")
  public open var upperRightCorner: RawDistributionVector

  @JsName("bAbsolute")
  public open var absolute: Boolean

  @JsName("bKillInside")
  public open var killInside: Boolean

  @JsName("bAxisAlignedAndFixedSize")
  public open var axisAlignedAndFixedSize: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleKillBox

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleKillBox

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleKillBox

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleKillBox

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleKillBox

    @JsName("C")
    public fun copy(other: Any): ParticleModuleKillBox
  }
}

public open external class ParticleModuleKillHeight(
  outer: UObject,
) : ParticleModuleKillBase {
  @JsName("Height")
  public open var height: RawDistributionFloat

  @JsName("bAbsolute")
  public open var absolute: Boolean

  @JsName("bFloor")
  public open var floor: Boolean

  @JsName("bApplyPSysScale")
  public open var applyPSysScale: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleKillHeight

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleKillHeight

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleKillHeight

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleKillHeight

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleKillHeight

    @JsName("C")
    public fun copy(other: Any): ParticleModuleKillHeight
  }
}

public open external class ParticleModuleLifetimeBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLifetimeBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLifetimeBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLifetimeBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLifetimeBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLifetimeBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLifetimeBase
  }
}

public open external class ParticleModuleLifetime(
  outer: UObject,
) : ParticleModuleLifetimeBase {
  @JsName("LifeTime")
  public open var lifeTime: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLifetime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLifetime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLifetime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLifetime

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLifetime

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLifetime
  }
}

@JsName("ParticleModuleLifetime_Seeded")
public open external class ParticleModuleLifetimeSeeded(
  outer: UObject,
) : ParticleModuleLifetime {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLifetimeSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLifetimeSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLifetimeSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLifetimeSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLifetimeSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLifetimeSeeded
  }
}

public open external class ParticleModuleLightBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLightBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLightBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLightBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLightBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLightBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLightBase
  }
}

public open external class ParticleModuleLight(
  outer: UObject,
) : ParticleModuleLightBase {
  @JsName("bUseInverseSquaredFalloff")
  public open var useInverseSquaredFalloff: Boolean

  @JsName("bAffectsTranslucency")
  public open var affectsTranslucency: Boolean

  @JsName("bPreviewLightRadius")
  public open var previewLightRadius: Boolean

  @JsName("SpawnFraction")
  public open var spawnFraction: Number

  @JsName("ColorScaleOverLife")
  public open var colorScaleOverLife: RawDistributionVector

  @JsName("BrightnessOverLife")
  public open var brightnessOverLife: RawDistributionFloat

  @JsName("RadiusScale")
  public open var radiusScale: RawDistributionFloat

  @JsName("LightExponent")
  public open var lightExponent: RawDistributionFloat

  @JsName("LightingChannels")
  public open var lightingChannels: LightingChannels

  @JsName("VolumetricScatteringIntensity")
  public open var volumetricScatteringIntensity: Number

  @JsName("bHighQualityLights")
  public open var highQualityLights: Boolean

  @JsName("bShadowCastingLights")
  public open var shadowCastingLights: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLight

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLight

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLight

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLight

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLight

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLight
  }
}

@JsName("ParticleModuleLight_Seeded")
public open external class ParticleModuleLightSeeded(
  outer: UObject,
) : ParticleModuleLight {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLightSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLightSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLightSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLightSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLightSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLightSeeded
  }
}

public open external class ParticleModuleLocationBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationBase
  }
}

public open external class ParticleModuleLocation(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("StartLocation")
  public open var startLocation: RawDistributionVector

  @JsName("DistributeOverNPoints")
  public open var distributeOverNPoints: Number

  @JsName("DistributeThreshold")
  public open var distributeThreshold: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocation

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocation

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocation
  }
}

@JsName("ELocationBoneSocketSource")
public external object LocationBoneSocketSource {
  @JsName("BONESOCKETSOURCE_Bones")
  public var Bones: String

  @JsName("BONESOCKETSOURCE_Sockets")
  public var Sockets: String

  @JsName("BONESOCKETSOURCE_MAX")
  public var Max: String
}

public open external class LocationBoneSocketInfo {
  @JsName("BoneSocketName")
  public open var boneSocketName: String

  @JsName("Offset")
  public open var offset: Vector

  public open fun clone(): LocationBoneSocketInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LocationBoneSocketInfo

    @JsName("C")
    public fun copy(other: Any): LocationBoneSocketInfo
  }
}

@JsName("ELocationBoneSocketSelectionMethod")
public external object LocationBoneSocketSelectionMethod {
  @JsName("BONESOCKETSEL_Sequential")
  public var Sequential: String

  @JsName("BONESOCKETSEL_Random")
  public var Random: String

  @JsName("BONESOCKETSEL_MAX")
  public var Max: String
}

public open external class ParticleModuleLocationBoneSocket(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("SourceType")
  public open var sourceType: String

  @JsName("UniversalOffset")
  public open var universalOffset: Vector

  @JsName("SourceLocations")
  public open var sourceLocations: Array<LocationBoneSocketInfo>

  @JsName("SelectionMethod")
  public open var selectionMethod: String

  @JsName("bUpdatePositionEachFrame")
  public open var updatePositionEachFrame: Boolean

  @JsName("bOrientMeshEmitters")
  public open var orientMeshEmitters: Boolean

  @JsName("bInheritBoneVelocity")
  public open var inheritBoneVelocity: Boolean

  @JsName("InheritVelocityScale")
  public open var inheritVelocityScale: Number

  @JsName("SkelMeshActorParamName")
  public open var skelMeshActorParamName: String

  @JsName("NumPreSelectedIndices")
  public open var numPreSelectedIndices: Number

  @JsName("EditorSkelMesh")
  public open var editorSkelMesh: SkeletalMesh

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationBoneSocket

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationBoneSocket

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationBoneSocket

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationBoneSocket

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationBoneSocket

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationBoneSocket
  }
}

public open external class ParticleModuleLocationDirect(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("Location")
  public open var location: RawDistributionVector

  @JsName("LocationOffset")
  public open var locationOffset: RawDistributionVector

  @JsName("ScaleFactor")
  public open var scaleFactor: RawDistributionVector

  @JsName("Direction")
  public open var direction: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationDirect

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationDirect

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationDirect

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationDirect

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationDirect

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationDirect
  }
}

@JsName("ELocationEmitterSelectionMethod")
public external object LocationEmitterSelectionMethod {
  @JsName("ELESM_Random")
  public var Random: String

  @JsName("ELESM_Sequential")
  public var Sequential: String

  @JsName("ELESM_MAX")
  public var Max: String
}

public open external class ParticleModuleLocationEmitter(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("EmitterName")
  public open var emitterName: String

  @JsName("SelectionMethod")
  public open var selectionMethod: String

  @JsName("InheritSourceVelocity")
  public open var inheritSourceVelocity: Boolean

  @JsName("InheritSourceVelocityScale")
  public open var inheritSourceVelocityScale: Number

  @JsName("bInheritSourceRotation")
  public open var inheritSourceRotation: Boolean

  @JsName("InheritSourceRotationScale")
  public open var inheritSourceRotationScale: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationEmitter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationEmitter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationEmitter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationEmitter

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationEmitter

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationEmitter
  }
}

public open external class ParticleModuleLocationEmitterDirect(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("EmitterName")
  public open var emitterName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationEmitterDirect

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationEmitterDirect

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationEmitterDirect

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationEmitterDirect

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationEmitterDirect

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationEmitterDirect
  }
}

public open external class ParticleModuleLocationPrimitiveBase(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("Positive_X")
  public open var positiveX: Boolean

  @JsName("Positive_Y")
  public open var positiveY: Boolean

  @JsName("Positive_Z")
  public open var positiveZ: Boolean

  @JsName("Negative_X")
  public open var negativeX: Boolean

  @JsName("Negative_Y")
  public open var negativeY: Boolean

  @JsName("Negative_Z")
  public open var negativeZ: Boolean

  @JsName("SurfaceOnly")
  public open var surfaceOnly: Boolean

  @JsName("Velocity")
  public open var velocity: Boolean

  @JsName("VelocityScale")
  public open var velocityScale: RawDistributionFloat

  @JsName("StartLocation")
  public open var startLocation: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationPrimitiveBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveBase
  }
}

public external object CylinderHeightAxis {
  @JsName("PMLPC_HEIGHTAXIS_X")
  public var pmlpcheightaxisx: String

  @JsName("PMLPC_HEIGHTAXIS_Y")
  public var pmlpcheightaxisy: String

  @JsName("PMLPC_HEIGHTAXIS_Z")
  public var pmlpcheightaxisz: String

  @JsName("PMLPC_HEIGHTAXIS_MAX")
  public var pmlpcheightaxismax: String
}

public open external class ParticleModuleLocationPrimitiveCylinder(
  outer: UObject,
) : ParticleModuleLocationPrimitiveBase {
  @JsName("RadialVelocity")
  public open var radialVelocity: Boolean

  @JsName("StartRadius")
  public open var startRadius: RawDistributionFloat

  @JsName("StartHeight")
  public open var startHeight: RawDistributionFloat

  @JsName("HeightAxis")
  public open var heightAxis: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveCylinder

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationPrimitiveCylinder

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveCylinder

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveCylinder

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveCylinder

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveCylinder
  }
}

@JsName("ParticleModuleLocationPrimitiveCylinder_Seeded")
public open external class ParticleModuleLocationPrimitiveCylinderSeeded(
  outer: UObject,
) : ParticleModuleLocationPrimitiveCylinder {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveCylinderSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ParticleModuleLocationPrimitiveCylinderSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveCylinderSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveCylinderSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveCylinderSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveCylinderSeeded
  }
}

public open external class ParticleModuleLocationPrimitiveSphere(
  outer: UObject,
) : ParticleModuleLocationPrimitiveBase {
  @JsName("StartRadius")
  public open var startRadius: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveSphere

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationPrimitiveSphere

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveSphere

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveSphere

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveSphere

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveSphere
  }
}

@JsName("ParticleModuleLocationPrimitiveSphere_Seeded")
public open external class ParticleModuleLocationPrimitiveSphereSeeded(
  outer: UObject,
) : ParticleModuleLocationPrimitiveSphere {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveSphereSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ParticleModuleLocationPrimitiveSphereSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveSphereSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveSphereSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveSphereSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveSphereSeeded
  }
}

public open external class ParticleModuleLocationPrimitiveTriangle(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("StartOffset")
  public open var startOffset: RawDistributionVector

  @JsName("Height")
  public open var height: RawDistributionFloat

  @JsName("Angle")
  public open var angle: RawDistributionFloat

  @JsName("Thickness")
  public open var thickness: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationPrimitiveTriangle

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationPrimitiveTriangle

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationPrimitiveTriangle

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationPrimitiveTriangle

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationPrimitiveTriangle

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationPrimitiveTriangle
  }
}

@JsName("ELocationSkelVertSurfaceSource")
public external object LocationSkelVertSurfaceSource {
  @JsName("VERTSURFACESOURCE_Vert")
  public var Vert: String

  @JsName("VERTSURFACESOURCE_Surface")
  public var Surface: String

  @JsName("VERTSURFACESOURCE_MAX")
  public var Max: String
}

public open external class ParticleModuleLocationSkelVertSurface(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("SourceType")
  public open var sourceType: String

  @JsName("UniversalOffset")
  public open var universalOffset: Vector

  @JsName("bUpdatePositionEachFrame")
  public open var updatePositionEachFrame: Boolean

  @JsName("bOrientMeshEmitters")
  public open var orientMeshEmitters: Boolean

  @JsName("bInheritBoneVelocity")
  public open var inheritBoneVelocity: Boolean

  @JsName("InheritVelocityScale")
  public open var inheritVelocityScale: Number

  @JsName("SkelMeshActorParamName")
  public open var skelMeshActorParamName: String

  @JsName("EditorSkelMesh")
  public open var editorSkelMesh: SkeletalMesh

  @JsName("ValidAssociatedBones")
  public open var validAssociatedBones: Array<String>

  @JsName("bEnforceNormalCheck")
  public open var enforceNormalCheck: Boolean

  @JsName("NormalToCompare")
  public open var normalToCompare: Vector

  @JsName("NormalCheckToleranceDegrees")
  public open var normalCheckToleranceDegrees: Number

  @JsName("NormalCheckTolerance")
  public open var normalCheckTolerance: Number

  @JsName("ValidMaterialIndices")
  public open var validMaterialIndices: Array<Number>

  @JsName("bInheritVertexColor")
  public open var inheritVertexColor: Boolean

  @JsName("bInheritUV")
  public open var inheritUv: Boolean

  @JsName("InheritUVChannel")
  public open var inheritUvChannel: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationSkelVertSurface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationSkelVertSurface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationSkelVertSurface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationSkelVertSurface

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationSkelVertSurface

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationSkelVertSurface
  }
}

public open external class ParticleModuleLocationWorldOffset(
  outer: UObject,
) : ParticleModuleLocation {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationWorldOffset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationWorldOffset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationWorldOffset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationWorldOffset

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationWorldOffset

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationWorldOffset
  }
}

@JsName("ParticleModuleLocationWorldOffset_Seeded")
public open external class ParticleModuleLocationWorldOffsetSeeded(
  outer: UObject,
) : ParticleModuleLocationWorldOffset {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationWorldOffsetSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationWorldOffsetSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationWorldOffsetSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationWorldOffsetSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationWorldOffsetSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationWorldOffsetSeeded
  }
}

@JsName("ParticleModuleLocation_Seeded")
public open external class ParticleModuleLocationSeeded(
  outer: UObject,
) : ParticleModuleLocation {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleLocationSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleLocationSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleLocationSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleLocationSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleLocationSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleLocationSeeded
  }
}

public open external class ParticleModuleMaterialBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMaterialBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMaterialBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMaterialBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMaterialBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMaterialBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMaterialBase
  }
}

public open external class ParticleModuleMeshMaterial(
  outer: UObject,
) : ParticleModuleMaterialBase {
  @JsName("MeshMaterials")
  public open var meshMaterials: Array<MaterialInterface>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshMaterial

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshMaterial

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshMaterial

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshMaterial

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshMaterial

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshMaterial
  }
}

public open external class ParticleModuleRotationBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationBase
  }
}

public open external class ParticleModuleMeshRotation(
  outer: UObject,
) : ParticleModuleRotationBase {
  @JsName("StartRotation")
  public open var startRotation: RawDistributionVector

  @JsName("bInheritParent")
  public open var inheritParent: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshRotation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotation

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotation

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotation
  }
}

public open external class ParticleModuleRotationRateBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationRateBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationRateBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationRateBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationRateBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationRateBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationRateBase
  }
}

public open external class ParticleModuleMeshRotationRate(
  outer: UObject,
) : ParticleModuleRotationRateBase {
  @JsName("StartRotationRate")
  public open var startRotationRate: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotationRate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshRotationRate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotationRate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotationRate

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotationRate

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotationRate
  }
}

public open external class ParticleModuleMeshRotationRateMultiplyLife(
  outer: UObject,
) : ParticleModuleRotationRateBase {
  @JsName("LifeMultiplier")
  public open var lifeMultiplier: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotationRateMultiplyLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ParticleModuleMeshRotationRateMultiplyLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotationRateMultiplyLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotationRateMultiplyLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotationRateMultiplyLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotationRateMultiplyLife
  }
}

public open external class ParticleModuleMeshRotationRateOverLife(
  outer: UObject,
) : ParticleModuleRotationRateBase {
  @JsName("RotRate")
  public open var rotRate: RawDistributionVector

  @JsName("bScaleRotRate")
  public open var scaleRotRate: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotationRateOverLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshRotationRateOverLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotationRateOverLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotationRateOverLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotationRateOverLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotationRateOverLife
  }
}

@JsName("ParticleModuleMeshRotationRate_Seeded")
public open external class ParticleModuleMeshRotationRateSeeded(
  outer: UObject,
) : ParticleModuleMeshRotationRate {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotationRateSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshRotationRateSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotationRateSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotationRateSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotationRateSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotationRateSeeded
  }
}

@JsName("ParticleModuleMeshRotation_Seeded")
public open external class ParticleModuleMeshRotationSeeded(
  outer: UObject,
) : ParticleModuleMeshRotation {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleMeshRotationSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleMeshRotationSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleMeshRotationSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleMeshRotationSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleMeshRotationSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleMeshRotationSeeded
  }
}

public open external class ParticleModuleOrientationBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleOrientationBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleOrientationBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleOrientationBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleOrientationBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleOrientationBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleOrientationBase
  }
}

@JsName("EParticleAxisLock")
public external object ParticleAxisLock {
  @JsName("EPAL_NONE")
  public var NONE: String

  @JsName("EPAL_X")
  public var x: String

  @JsName("EPAL_Y")
  public var y: String

  @JsName("EPAL_Z")
  public var z: String

  @JsName("EPAL_NEGATIVE_X")
  public var Negativex: String

  @JsName("EPAL_NEGATIVE_Y")
  public var Negativey: String

  @JsName("EPAL_NEGATIVE_Z")
  public var Negativez: String

  @JsName("EPAL_ROTATE_X")
  public var Rotatex: String

  @JsName("EPAL_ROTATE_Y")
  public var Rotatey: String

  @JsName("EPAL_ROTATE_Z")
  public var Rotatez: String

  @JsName("EPAL_MAX")
  public var Max: String
}

public open external class ParticleModuleOrientationAxisLock(
  outer: UObject,
) : ParticleModuleOrientationBase {
  @JsName("LockAxisFlags")
  public open var lockAxisFlags: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleOrientationAxisLock

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleOrientationAxisLock

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleOrientationAxisLock

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleOrientationAxisLock

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleOrientationAxisLock

    @JsName("C")
    public fun copy(other: Any): ParticleModuleOrientationAxisLock
  }
}

public open external class ParticleModuleParameterBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleParameterBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleParameterBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleParameterBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleParameterBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleParameterBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleParameterBase
  }
}

@JsName("EEmitterDynamicParameterValue")
public external object EmitterDynamicParameterValue {
  @JsName("EDPV_UserSet")
  public var UserSet: String

  @JsName("EDPV_AutoSet")
  public var AutoSet: String

  @JsName("EDPV_VelocityX")
  public var VelocityX: String

  @JsName("EDPV_VelocityY")
  public var VelocityY: String

  @JsName("EDPV_VelocityZ")
  public var VelocityZ: String

  @JsName("EDPV_VelocityMag")
  public var VelocityMag: String

  @JsName("EDPV_MAX")
  public var Max: String
}

public open external class EmitterDynamicParameter {
  @JsName("ParamName")
  public open var paramName: String

  @JsName("bUseEmitterTime")
  public open var useEmitterTime: Boolean

  @JsName("bSpawnTimeOnly")
  public open var spawnTimeOnly: Boolean

  @JsName("ValueMethod")
  public open var valueMethod: String

  @JsName("bScaleVelocityByParamValue")
  public open var scaleVelocityByParamValue: Boolean

  @JsName("ParamValue")
  public open var paramValue: RawDistributionFloat

  public open fun clone(): EmitterDynamicParameter

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): EmitterDynamicParameter

    @JsName("C")
    public fun copy(other: Any): EmitterDynamicParameter
  }
}

public open external class ParticleModuleParameterDynamic(
  outer: UObject,
) : ParticleModuleParameterBase {
  @JsName("DynamicParams")
  public open var dynamicParams: Array<EmitterDynamicParameter>

  @JsName("UpdateFlags")
  public open var updateFlags: Number

  @JsName("bUsesVelocity")
  public open var usesVelocity: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleParameterDynamic

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleParameterDynamic

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleParameterDynamic

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleParameterDynamic

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleParameterDynamic

    @JsName("C")
    public fun copy(other: Any): ParticleModuleParameterDynamic
  }
}

@JsName("ParticleModuleParameterDynamic_Seeded")
public open external class ParticleModuleParameterDynamicSeeded(
  outer: UObject,
) : ParticleModuleParameterDynamic {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleParameterDynamicSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleParameterDynamicSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleParameterDynamicSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleParameterDynamicSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleParameterDynamicSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleParameterDynamicSeeded
  }
}

public open external class ParticleModulePivotOffset(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("PivotOffset")
  public open var pivotOffset: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModulePivotOffset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModulePivotOffset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModulePivotOffset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModulePivotOffset

    @JsName("C")
    public fun copy(other: UObject): ParticleModulePivotOffset

    @JsName("C")
    public fun copy(other: Any): ParticleModulePivotOffset
  }
}

public open external class ParticleModuleRotation(
  outer: UObject,
) : ParticleModuleRotationBase {
  @JsName("StartRotation")
  public open var startRotation: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotation

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotation

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotation
  }
}

public open external class ParticleModuleRotationOverLifetime(
  outer: UObject,
) : ParticleModuleRotationBase {
  @JsName("RotationOverLife")
  public open var rotationOverLife: RawDistributionFloat

  @JsName("Scale")
  public open var scale: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationOverLifetime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationOverLifetime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationOverLifetime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationOverLifetime

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationOverLifetime

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationOverLifetime
  }
}

public open external class ParticleModuleRotationRate(
  outer: UObject,
) : ParticleModuleRotationRateBase {
  @JsName("StartRotationRate")
  public open var startRotationRate: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationRate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationRate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationRate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationRate

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationRate

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationRate
  }
}

public open external class ParticleModuleRotationRateMultiplyLife(
  outer: UObject,
) : ParticleModuleRotationRateBase {
  @JsName("LifeMultiplier")
  public open var lifeMultiplier: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationRateMultiplyLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationRateMultiplyLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationRateMultiplyLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationRateMultiplyLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationRateMultiplyLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationRateMultiplyLife
  }
}

@JsName("ParticleModuleRotationRate_Seeded")
public open external class ParticleModuleRotationRateSeeded(
  outer: UObject,
) : ParticleModuleRotationRate {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationRateSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationRateSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationRateSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationRateSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationRateSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationRateSeeded
  }
}

@JsName("ParticleModuleRotation_Seeded")
public open external class ParticleModuleRotationSeeded(
  outer: UObject,
) : ParticleModuleRotation {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleRotationSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleRotationSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleRotationSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleRotationSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleRotationSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleRotationSeeded
  }
}

public open external class ParticleModuleSizeBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSizeBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSizeBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSizeBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSizeBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSizeBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSizeBase
  }
}

public open external class ParticleModuleSize(
  outer: UObject,
) : ParticleModuleSizeBase {
  @JsName("StartSize")
  public open var startSize: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSize

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSize

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSize

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSize

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSize

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSize
  }
}

public open external class ParticleModuleSizeMultiplyLife(
  outer: UObject,
) : ParticleModuleSizeBase {
  @JsName("LifeMultiplier")
  public open var lifeMultiplier: RawDistributionVector

  @JsName("MultiplyX")
  public open var multiplyX: Boolean

  @JsName("MultiplyY")
  public open var multiplyY: Boolean

  @JsName("MultiplyZ")
  public open var multiplyZ: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSizeMultiplyLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSizeMultiplyLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSizeMultiplyLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSizeMultiplyLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSizeMultiplyLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSizeMultiplyLife
  }
}

public open external class ParticleModuleSizeScale(
  outer: UObject,
) : ParticleModuleSizeBase {
  @JsName("SizeScale")
  public open var sizeScale: RawDistributionVector

  @JsName("EnableX")
  public open var enableX: Boolean

  @JsName("EnableY")
  public open var enableY: Boolean

  @JsName("EnableZ")
  public open var enableZ: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSizeScale

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSizeScale

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSizeScale

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSizeScale

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSizeScale

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSizeScale
  }
}

public open external class ParticleModuleSizeScaleBySpeed(
  outer: UObject,
) : ParticleModuleSizeBase {
  @JsName("SpeedScale")
  public open var speedScale: Vector2d

  @JsName("MaxScale")
  public open var maxScale: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSizeScaleBySpeed

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSizeScaleBySpeed

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSizeScaleBySpeed

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSizeScaleBySpeed

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSizeScaleBySpeed

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSizeScaleBySpeed
  }
}

@JsName("ParticleModuleSize_Seeded")
public open external class ParticleModuleSizeSeeded(
  outer: UObject,
) : ParticleModuleSize {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSizeSeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSizeSeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSizeSeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSizeSeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSizeSeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSizeSeeded
  }
}

public open external class ParticleModuleSourceMovement(
  outer: UObject,
) : ParticleModuleLocationBase {
  @JsName("SourceMovementScale")
  public open var sourceMovementScale: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSourceMovement

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSourceMovement

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSourceMovement

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSourceMovement

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSourceMovement

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSourceMovement
  }
}

public open external class ParticleModuleSpawnPerUnit(
  outer: UObject,
) : ParticleModuleSpawnBase {
  @JsName("UnitScalar")
  public open var unitScalar: Number

  @JsName("MovementTolerance")
  public open var movementTolerance: Number

  @JsName("SpawnPerUnit")
  public open var spawnPerUnit: RawDistributionFloat

  @JsName("MaxFrameDistance")
  public open var maxFrameDistance: Number

  @JsName("bIgnoreSpawnRateWhenMoving")
  public open var ignoreSpawnRateWhenMoving: Boolean

  @JsName("bIgnoreMovementAlongX")
  public open var ignoreMovementAlongX: Boolean

  @JsName("bIgnoreMovementAlongY")
  public open var ignoreMovementAlongY: Boolean

  @JsName("bIgnoreMovementAlongZ")
  public open var ignoreMovementAlongZ: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSpawnPerUnit

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSpawnPerUnit

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSpawnPerUnit

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSpawnPerUnit

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSpawnPerUnit

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSpawnPerUnit
  }
}

@JsName("ParticleModuleSubUVBase")
public open external class ParticleModuleSubUvBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSubUvBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSubUvBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSubUvBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSubUvBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSubUvBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSubUvBase
  }
}

@JsName("SubUVAnimation")
public open external class SubUvAnimation(
  outer: UObject,
) : UObject {
  @JsName("SubUVTexture")
  public open var subUvTexture: Texture2d

  @JsName("SubImages_Horizontal")
  public open var subImagesHorizontal: Number

  @JsName("SubImages_Vertical")
  public open var subImagesVertical: Number

  @JsName("BoundingMode")
  public open var boundingMode: String

  @JsName("OpacitySourceMode")
  public open var opacitySourceMode: String

  @JsName("AlphaThreshold")
  public open var alphaThreshold: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SubUvAnimation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SubUvAnimation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SubUvAnimation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SubUvAnimation

    @JsName("C")
    public fun copy(other: UObject): SubUvAnimation

    @JsName("C")
    public fun copy(other: Any): SubUvAnimation
  }
}

@JsName("ParticleModuleSubUV")
public open external class ParticleModuleSubUv(
  outer: UObject,
) : ParticleModuleSubUvBase {
  @JsName("Animation")
  public open var animation: SubUvAnimation

  @JsName("SubImageIndex")
  public open var subImageIndex: RawDistributionFloat

  @JsName("bUseRealTime")
  public open var useRealTime: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSubUv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSubUv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSubUv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSubUv

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSubUv

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSubUv
  }
}

@JsName("ParticleModuleSubUVMovie")
public open external class ParticleModuleSubUvMovie(
  outer: UObject,
) : ParticleModuleSubUv {
  @JsName("bUseEmitterTime")
  public open var useEmitterTime: Boolean

  @JsName("FrameRate")
  public open var frameRate: RawDistributionFloat

  @JsName("StartingFrame")
  public open var startingFrame: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleSubUvMovie

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleSubUvMovie

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleSubUvMovie

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleSubUvMovie

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleSubUvMovie

    @JsName("C")
    public fun copy(other: Any): ParticleModuleSubUvMovie
  }
}

public open external class ParticleModuleTrailBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTrailBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTrailBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTrailBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTrailBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTrailBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTrailBase
  }
}

@JsName("ETrail2SourceMethod")
public external object Trail2SourceMethod {
  @JsName("PET2SRCM_Default")
  public var Default: String

  @JsName("PET2SRCM_Particle")
  public var Particle: String

  @JsName("PET2SRCM_Actor")
  public var Actor: String

  @JsName("PET2SRCM_MAX")
  public var Max: String
}

@JsName("EParticleSourceSelectionMethod")
public external object ParticleSourceSelectionMethod {
  @JsName("EPSSM_Random")
  public var Random: String

  @JsName("EPSSM_Sequential")
  public var Sequential: String

  @JsName("EPSSM_MAX")
  public var Max: String
}

public open external class ParticleModuleTrailSource(
  outer: UObject,
) : ParticleModuleTrailBase {
  @JsName("SourceMethod")
  public open var sourceMethod: String

  @JsName("SourceName")
  public open var sourceName: String

  @JsName("SourceStrength")
  public open var sourceStrength: RawDistributionFloat

  @JsName("bLockSourceStength")
  public open var lockSourceStength: Boolean

  @JsName("SourceOffsetCount")
  public open var sourceOffsetCount: Number

  @JsName("SourceOffsetDefaults")
  public open var sourceOffsetDefaults: Array<Vector>

  @JsName("SelectionMethod")
  public open var selectionMethod: String

  @JsName("bInheritRotation")
  public open var inheritRotation: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTrailSource

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTrailSource

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTrailSource

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTrailSource

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTrailSource

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTrailSource
  }
}

public open external class ParticleModuleTypeDataAnimTrail(
  outer: UObject,
) : ParticleModuleTypeDataBase {
  @JsName("bDeadTrailsOnDeactivate")
  public open var deadTrailsOnDeactivate: Boolean

  @JsName("bEnablePreviousTangentRecalculation")
  public open var enablePreviousTangentRecalculation: Boolean

  @JsName("bTangentRecalculationEveryFrame")
  public open var tangentRecalculationEveryFrame: Boolean

  @JsName("TilingDistance")
  public open var tilingDistance: Number

  @JsName("DistanceTessellationStepSize")
  public open var distanceTessellationStepSize: Number

  @JsName("TangentTessellationStepSize")
  public open var tangentTessellationStepSize: Number

  @JsName("WidthTessellationStepSize")
  public open var widthTessellationStepSize: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTypeDataAnimTrail

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTypeDataAnimTrail

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTypeDataAnimTrail

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTypeDataAnimTrail

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTypeDataAnimTrail

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTypeDataAnimTrail
  }
}

@JsName("EBeam2Method")
public external object Beam2Method {
  @JsName("PEB2M_Distance")
  public var Distance: String

  @JsName("PEB2M_Target")
  public var Target: String

  @JsName("PEB2M_Branch")
  public var Branch: String

  @JsName("PEB2M_MAX")
  public var Max: String
}

@JsName("EBeamTaperMethod")
public external object BeamTaperMethod {
  @JsName("PEBTM_None")
  public var None: String

  @JsName("PEBTM_Full")
  public var Full: String

  @JsName("PEBTM_Partial")
  public var Partial: String

  @JsName("PEBTM_MAX")
  public var Max: String
}

public open external class ParticleModuleTypeDataBeam2(
  outer: UObject,
) : ParticleModuleTypeDataBase {
  @JsName("BeamMethod")
  public open var beamMethod: String

  @JsName("TextureTile")
  public open var textureTile: Number

  @JsName("TextureTileDistance")
  public open var textureTileDistance: Number

  @JsName("Sheets")
  public open var sheets: Number

  @JsName("MaxBeamCount")
  public open var maxBeamCount: Number

  @JsName("Speed")
  public open var speed: Number

  @JsName("InterpolationPoints")
  public open var interpolationPoints: Number

  @JsName("bAlwaysOn")
  public open var alwaysOn: Boolean

  @JsName("UpVectorStepSize")
  public open var upVectorStepSize: Number

  @JsName("BranchParentName")
  public open var branchParentName: String

  @JsName("Distance")
  public open var distance: RawDistributionFloat

  @JsName("TaperMethod")
  public open var taperMethod: String

  @JsName("TaperFactor")
  public open var taperFactor: RawDistributionFloat

  @JsName("TaperScale")
  public open var taperScale: RawDistributionFloat

  @JsName("RenderGeometry")
  public open var renderGeometry: Boolean

  @JsName("RenderDirectLine")
  public open var renderDirectLine: Boolean

  @JsName("RenderLines")
  public open var renderLines: Boolean

  @JsName("RenderTessellation")
  public open var renderTessellation: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTypeDataBeam2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTypeDataBeam2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTypeDataBeam2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTypeDataBeam2

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTypeDataBeam2

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTypeDataBeam2
  }
}

public open external class VectorField(
  outer: UObject,
) : UObject {
  @JsName("Bounds")
  public open var bounds: Box

  @JsName("Intensity")
  public open var intensity: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VectorField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VectorField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VectorField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VectorField

    @JsName("C")
    public fun copy(other: UObject): VectorField

    @JsName("C")
    public fun copy(other: Any): VectorField
  }
}

@JsName("GPUSpriteLocalVectorFieldInfo")
public open external class GpuSpriteLocalVectorFieldInfo {
  @JsName("Field")
  public open var field: VectorField

  @JsName("Transform")
  public open var transform: Transform

  @JsName("MinInitialRotation")
  public open var minInitialRotation: Rotator

  @JsName("MaxInitialRotation")
  public open var maxInitialRotation: Rotator

  @JsName("RotationRate")
  public open var rotationRate: Rotator

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("Tightness")
  public open var tightness: Number

  @JsName("bIgnoreComponentTransform")
  public open var ignoreComponentTransform: Boolean

  @JsName("bTileX")
  public open var tileX: Boolean

  @JsName("bTileY")
  public open var tileY: Boolean

  @JsName("bTileZ")
  public open var tileZ: Boolean

  @JsName("bUseFixDT")
  public open var useFixDt: Boolean

  public open fun clone(): GpuSpriteLocalVectorFieldInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GpuSpriteLocalVectorFieldInfo

    @JsName("C")
    public fun copy(other: Any): GpuSpriteLocalVectorFieldInfo
  }
}

public open external class FloatDistribution {
  @JsName("Table")
  public open var table: DistributionLookupTable

  public open fun clone(): FloatDistribution

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FloatDistribution

    @JsName("C")
    public fun copy(other: Any): FloatDistribution
  }
}

@JsName("GPUSpriteEmitterInfo")
public open external class GpuSpriteEmitterInfo {
  @JsName("RequiredModule")
  public open var requiredModule: ParticleModuleRequired

  @JsName("SpawnModule")
  public open var spawnModule: ParticleModuleSpawn

  @JsName("SpawnPerUnitModule")
  public open var spawnPerUnitModule: ParticleModuleSpawnPerUnit

  @JsName("SpawnModules")
  public open var spawnModules: Array<ParticleModule>

  @JsName("LocalVectorField")
  public open var localVectorField: GpuSpriteLocalVectorFieldInfo

  @JsName("VectorFieldScale")
  public open var vectorFieldScale: FloatDistribution

  @JsName("DragCoefficient")
  public open var dragCoefficient: FloatDistribution

  @JsName("PointAttractorStrength")
  public open var pointAttractorStrength: FloatDistribution

  @JsName("Resilience")
  public open var resilience: FloatDistribution

  @JsName("ConstantAcceleration")
  public open var constantAcceleration: Vector

  @JsName("PointAttractorPosition")
  public open var pointAttractorPosition: Vector

  @JsName("PointAttractorRadiusSq")
  public open var pointAttractorRadiusSq: Number

  @JsName("OrbitOffsetBase")
  public open var orbitOffsetBase: Vector

  @JsName("OrbitOffsetRange")
  public open var orbitOffsetRange: Vector

  @JsName("InvMaxSize")
  public open var invMaxSize: Vector2d

  @JsName("InvRotationRateScale")
  public open var invRotationRateScale: Number

  @JsName("MaxLifetime")
  public open var maxLifetime: Number

  @JsName("MaxParticleCount")
  public open var maxParticleCount: Number

  @JsName("ScreenAlignment")
  public open var screenAlignment: String

  @JsName("LockAxisFlag")
  public open var lockAxisFlag: String

  @JsName("bEnableCollision")
  public open var enableCollision: Boolean

  @JsName("CollisionMode")
  public open var collisionMode: String

  @JsName("bRemoveHMDRoll")
  public open var removeHmdRoll: Boolean

  @JsName("MinFacingCameraBlendDistance")
  public open var minFacingCameraBlendDistance: Number

  @JsName("MaxFacingCameraBlendDistance")
  public open var maxFacingCameraBlendDistance: Number

  @JsName("DynamicColor")
  public open var dynamicColor: RawDistributionVector

  @JsName("DynamicAlpha")
  public open var dynamicAlpha: RawDistributionFloat

  @JsName("DynamicColorScale")
  public open var dynamicColorScale: RawDistributionVector

  @JsName("DynamicAlphaScale")
  public open var dynamicAlphaScale: RawDistributionFloat

  public open fun clone(): GpuSpriteEmitterInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GpuSpriteEmitterInfo

    @JsName("C")
    public fun copy(other: Any): GpuSpriteEmitterInfo
  }
}

@JsName("GPUSpriteResourceData")
public open external class GpuSpriteResourceData {
  @JsName("QuantizedColorSamples")
  public open var quantizedColorSamples: Array<Color>

  @JsName("QuantizedMiscSamples")
  public open var quantizedMiscSamples: Array<Color>

  @JsName("QuantizedSimulationAttrSamples")
  public open var quantizedSimulationAttrSamples: Array<Color>

  @JsName("ColorScale")
  public open var colorScale: Vector4

  @JsName("ColorBias")
  public open var colorBias: Vector4

  @JsName("MiscScale")
  public open var miscScale: Vector4

  @JsName("MiscBias")
  public open var miscBias: Vector4

  @JsName("SimulationAttrCurveScale")
  public open var simulationAttrCurveScale: Vector4

  @JsName("SimulationAttrCurveBias")
  public open var simulationAttrCurveBias: Vector4

  @JsName("SubImageSize")
  public open var subImageSize: Vector4

  @JsName("SizeBySpeed")
  public open var sizeBySpeed: Vector4

  @JsName("ConstantAcceleration")
  public open var constantAcceleration: Vector

  @JsName("OrbitOffsetBase")
  public open var orbitOffsetBase: Vector

  @JsName("OrbitOffsetRange")
  public open var orbitOffsetRange: Vector

  @JsName("OrbitFrequencyBase")
  public open var orbitFrequencyBase: Vector

  @JsName("OrbitFrequencyRange")
  public open var orbitFrequencyRange: Vector

  @JsName("OrbitPhaseBase")
  public open var orbitPhaseBase: Vector

  @JsName("OrbitPhaseRange")
  public open var orbitPhaseRange: Vector

  @JsName("GlobalVectorFieldScale")
  public open var globalVectorFieldScale: Number

  @JsName("GlobalVectorFieldTightness")
  public open var globalVectorFieldTightness: Number

  @JsName("PerParticleVectorFieldScale")
  public open var perParticleVectorFieldScale: Number

  @JsName("PerParticleVectorFieldBias")
  public open var perParticleVectorFieldBias: Number

  @JsName("DragCoefficientScale")
  public open var dragCoefficientScale: Number

  @JsName("DragCoefficientBias")
  public open var dragCoefficientBias: Number

  @JsName("ResilienceScale")
  public open var resilienceScale: Number

  @JsName("ResilienceBias")
  public open var resilienceBias: Number

  @JsName("CollisionRadiusScale")
  public open var collisionRadiusScale: Number

  @JsName("CollisionRadiusBias")
  public open var collisionRadiusBias: Number

  @JsName("CollisionTimeBias")
  public open var collisionTimeBias: Number

  @JsName("CollisionRandomSpread")
  public open var collisionRandomSpread: Number

  @JsName("CollisionRandomDistribution")
  public open var collisionRandomDistribution: Number

  @JsName("OneMinusFriction")
  public open var oneMinusFriction: Number

  @JsName("RotationRateScale")
  public open var rotationRateScale: Number

  @JsName("CameraMotionBlurAmount")
  public open var cameraMotionBlurAmount: Number

  @JsName("ScreenAlignment")
  public open var screenAlignment: String

  @JsName("LockAxisFlag")
  public open var lockAxisFlag: String

  @JsName("PivotOffset")
  public open var pivotOffset: Vector2d

  @JsName("bRemoveHMDRoll")
  public open var removeHmdRoll: Boolean

  @JsName("MinFacingCameraBlendDistance")
  public open var minFacingCameraBlendDistance: Number

  @JsName("MaxFacingCameraBlendDistance")
  public open var maxFacingCameraBlendDistance: Number

  public open fun clone(): GpuSpriteResourceData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GpuSpriteResourceData

    @JsName("C")
    public fun copy(other: Any): GpuSpriteResourceData
  }
}

public open external class ParticleModuleTypeDataGpu(
  outer: UObject,
) : ParticleModuleTypeDataBase {
  @JsName("EmitterInfo")
  public open var emitterInfo: GpuSpriteEmitterInfo

  @JsName("ResourceData")
  public open var resourceData: GpuSpriteResourceData

  @JsName("CameraMotionBlurAmount")
  public open var cameraMotionBlurAmount: Number

  @JsName("bClearExistingParticlesOnInit")
  public open var clearExistingParticlesOnInit: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTypeDataGpu

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTypeDataGpu

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTypeDataGpu

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTypeDataGpu

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTypeDataGpu

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTypeDataGpu
  }
}

@JsName("EMeshScreenAlignment")
public external object MeshScreenAlignment {
  @JsName("PSMA_MeshFaceCameraWithRoll")
  public var MaMeshFaceCameraWithRoll: String

  @JsName("PSMA_MeshFaceCameraWithSpin")
  public var MaMeshFaceCameraWithSpin: String

  @JsName("PSMA_MeshFaceCameraWithLockedAxis")
  public var MaMeshFaceCameraWithLockedAxis: String

  @JsName("PSMA_MAX")
  public var Mamax: String
}

@JsName("EMeshCameraFacingUpAxis")
public external object MeshCameraFacingUpAxis {
  @JsName("CameraFacing_NoneUP")
  public var NoneUp: String

  @JsName("CameraFacing_ZUp")
  public var ZUp: String

  @JsName("CameraFacing_NegativeZUp")
  public var NegativeZUp: String

  @JsName("CameraFacing_YUp")
  public var YUp: String

  @JsName("CameraFacing_NegativeYUp")
  public var NegativeYUp: String

  @JsName("CameraFacing_MAX")
  public var Max: String
}

@JsName("EMeshCameraFacingOptions")
public external object MeshCameraFacingOptions {
  @JsName("XAxisFacing_NoUp")
  public var XAxisFacingNoUp: String

  @JsName("XAxisFacing_ZUp")
  public var XAxisFacingZUp: String

  @JsName("XAxisFacing_NegativeZUp")
  public var XAxisFacingNegativeZUp: String

  @JsName("XAxisFacing_YUp")
  public var XAxisFacingYUp: String

  @JsName("XAxisFacing_NegativeYUp")
  public var XAxisFacingNegativeYUp: String

  @JsName("LockedAxis_ZAxisFacing")
  public var LockedAxisZAxisFacing: String

  @JsName("LockedAxis_NegativeZAxisFacing")
  public var LockedAxisNegativeZAxisFacing: String

  @JsName("LockedAxis_YAxisFacing")
  public var LockedAxisYAxisFacing: String

  @JsName("LockedAxis_NegativeYAxisFacing")
  public var LockedAxisNegativeYAxisFacing: String

  @JsName("VelocityAligned_ZAxisFacing")
  public var VelocityAlignedZAxisFacing: String

  @JsName("VelocityAligned_NegativeZAxisFacing")
  public var VelocityAlignedNegativeZAxisFacing: String

  @JsName("VelocityAligned_YAxisFacing")
  public var VelocityAlignedYAxisFacing: String

  @JsName("VelocityAligned_NegativeYAxisFacing")
  public var VelocityAlignedNegativeYAxisFacing: String

  @JsName("EMeshCameraFacingOptions_MAX")
  public var Max: String
}

public open external class ParticleModuleTypeDataMesh(
  outer: UObject,
) : ParticleModuleTypeDataBase {
  @JsName("Mesh")
  public open var mesh: StaticMesh

  @JsName("LODSizeScale")
  public open var lodSizeScale: Number

  @JsName("bUseStaticMeshLODs")
  public open var useStaticMeshLoDs: Boolean

  @JsName("CastShadows")
  public open var castShadows: Boolean

  @JsName("DoCollisions")
  public open var doCollisions: Boolean

  @JsName("MeshAlignment")
  public open var meshAlignment: String

  @JsName("bOverrideMaterial")
  public open var overrideMaterial: Boolean

  @JsName("bOverrideDefaultMotionBlurSettings")
  public open var overrideDefaultMotionBlurSettings: Boolean

  @JsName("bEnableMotionBlur")
  public open var enableMotionBlur: Boolean

  @JsName("RollPitchYawRange")
  public open var rollPitchYawRange: RawDistributionVector

  @JsName("AxisLockOption")
  public open var axisLockOption: String

  @JsName("bCameraFacing")
  public open var cameraFacing: Boolean

  @JsName("CameraFacingUpAxisOption")
  public open var cameraFacingUpAxisOption: String

  @JsName("CameraFacingOption")
  public open var cameraFacingOption: String

  @JsName("bApplyParticleRotationAsSpin")
  public open var applyParticleRotationAsSpin: Boolean

  @JsName("bFaceCameraDirectionRatherThanPosition")
  public open var faceCameraDirectionRatherThanPosition: Boolean

  @JsName("bCollisionsConsiderPartilceSize")
  public open var collisionsConsiderPartilceSize: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTypeDataMesh

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTypeDataMesh

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTypeDataMesh

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTypeDataMesh

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTypeDataMesh

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTypeDataMesh
  }
}

@JsName("ETrailsRenderAxisOption")
public external object TrailsRenderAxisOption {
  @JsName("Trails_CameraUp")
  public var CameraUp: String

  @JsName("Trails_SourceUp")
  public var SourceUp: String

  @JsName("Trails_WorldUp")
  public var WorldUp: String

  @JsName("Trails_MAX")
  public var Max: String
}

public open external class ParticleModuleTypeDataRibbon(
  outer: UObject,
) : ParticleModuleTypeDataBase {
  @JsName("MaxTessellationBetweenParticles")
  public open var maxTessellationBetweenParticles: Number

  @JsName("SheetsPerTrail")
  public open var sheetsPerTrail: Number

  @JsName("MaxTrailCount")
  public open var maxTrailCount: Number

  @JsName("MaxParticleInTrailCount")
  public open var maxParticleInTrailCount: Number

  @JsName("bDeadTrailsOnDeactivate")
  public open var deadTrailsOnDeactivate: Boolean

  @JsName("bDeadTrailsOnSourceLoss")
  public open var deadTrailsOnSourceLoss: Boolean

  @JsName("bClipSourceSegement")
  public open var clipSourceSegement: Boolean

  @JsName("bEnablePreviousTangentRecalculation")
  public open var enablePreviousTangentRecalculation: Boolean

  @JsName("bTangentRecalculationEveryFrame")
  public open var tangentRecalculationEveryFrame: Boolean

  @JsName("bSpawnInitialParticle")
  public open var spawnInitialParticle: Boolean

  @JsName("RenderAxis")
  public open var renderAxis: String

  @JsName("TangentSpawningScalar")
  public open var tangentSpawningScalar: Number

  @JsName("bRenderGeometry")
  public open var renderGeometry: Boolean

  @JsName("bRenderSpawnPoints")
  public open var renderSpawnPoints: Boolean

  @JsName("bRenderTangents")
  public open var renderTangents: Boolean

  @JsName("bRenderTessellation")
  public open var renderTessellation: Boolean

  @JsName("TilingDistance")
  public open var tilingDistance: Number

  @JsName("DistanceTessellationStepSize")
  public open var distanceTessellationStepSize: Number

  @JsName("bEnableTangentDiffInterpScale")
  public open var enableTangentDiffInterpScale: Boolean

  @JsName("TangentTessellationScalar")
  public open var tangentTessellationScalar: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleTypeDataRibbon

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleTypeDataRibbon

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleTypeDataRibbon

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleTypeDataRibbon

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleTypeDataRibbon

    @JsName("C")
    public fun copy(other: Any): ParticleModuleTypeDataRibbon
  }
}

public open external class ParticleModuleVectorFieldBase(
  outer: UObject,
) : ParticleModule {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldBase
  }
}

public open external class ParticleModuleVectorFieldGlobal(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("bOverrideGlobalVectorFieldTightness")
  public open var overrideGlobalVectorFieldTightness: Boolean

  @JsName("GlobalVectorFieldScale")
  public open var globalVectorFieldScale: Number

  @JsName("GlobalVectorFieldTightness")
  public open var globalVectorFieldTightness: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldGlobal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldGlobal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldGlobal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldGlobal

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldGlobal

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldGlobal
  }
}

public open external class ParticleModuleVectorFieldLocal(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("VectorField")
  public open var vectorField: VectorField

  @JsName("RelativeTranslation")
  public open var relativeTranslation: Vector

  @JsName("RelativeRotation")
  public open var relativeRotation: Rotator

  @JsName("RelativeScale3D")
  public open var relativeScale3d: Vector

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("Tightness")
  public open var tightness: Number

  @JsName("bIgnoreComponentTransform")
  public open var ignoreComponentTransform: Boolean

  @JsName("bTileX")
  public open var tileX: Boolean

  @JsName("bTileY")
  public open var tileY: Boolean

  @JsName("bTileZ")
  public open var tileZ: Boolean

  @JsName("bUseFixDT")
  public open var useFixDt: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldLocal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldLocal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldLocal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldLocal

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldLocal

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldLocal
  }
}

public open external class ParticleModuleVectorFieldRotation(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("MinInitialRotation")
  public open var minInitialRotation: Vector

  @JsName("MaxInitialRotation")
  public open var maxInitialRotation: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldRotation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldRotation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldRotation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldRotation

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldRotation

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldRotation
  }
}

public open external class ParticleModuleVectorFieldRotationRate(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("RotationRate")
  public open var rotationRate: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldRotationRate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldRotationRate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldRotationRate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldRotationRate

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldRotationRate

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldRotationRate
  }
}

public open external class ParticleModuleVectorFieldScale(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("VectorFieldScale")
  public open var vectorFieldScale: DistributionFloat

  @JsName("VectorFieldScaleRaw")
  public open var vectorFieldScaleRaw: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldScale

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldScale

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldScale

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldScale

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldScale

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldScale
  }
}

public open external class ParticleModuleVectorFieldScaleOverLife(
  outer: UObject,
) : ParticleModuleVectorFieldBase {
  @JsName("VectorFieldScaleOverLife")
  public open var vectorFieldScaleOverLife: DistributionFloat

  @JsName("VectorFieldScaleOverLifeRaw")
  public open var vectorFieldScaleOverLifeRaw: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVectorFieldScaleOverLife

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVectorFieldScaleOverLife

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVectorFieldScaleOverLife

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVectorFieldScaleOverLife

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVectorFieldScaleOverLife

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVectorFieldScaleOverLife
  }
}

public open external class ParticleModuleVelocityBase(
  outer: UObject,
) : ParticleModule {
  @JsName("bInWorldSpace")
  public open var inWorldSpace: Boolean

  @JsName("bApplyOwnerScale")
  public open var applyOwnerScale: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocityBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocityBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocityBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocityBase

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocityBase

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocityBase
  }
}

public open external class ParticleModuleVelocity(
  outer: UObject,
) : ParticleModuleVelocityBase {
  @JsName("StartVelocity")
  public open var startVelocity: RawDistributionVector

  @JsName("StartVelocityRadial")
  public open var startVelocityRadial: RawDistributionFloat

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocity

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocity

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocity

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocity

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocity

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocity
  }
}

public open external class ParticleModuleVelocityCone(
  outer: UObject,
) : ParticleModuleVelocityBase {
  @JsName("Angle")
  public open var angle: RawDistributionFloat

  @JsName("Velocity")
  public open var velocity: RawDistributionFloat

  @JsName("Direction")
  public open var direction: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocityCone

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocityCone

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocityCone

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocityCone

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocityCone

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocityCone
  }
}

public open external class ParticleModuleVelocityInheritParent(
  outer: UObject,
) : ParticleModuleVelocityBase {
  @JsName("Scale")
  public open var scale: RawDistributionVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocityInheritParent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocityInheritParent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocityInheritParent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocityInheritParent

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocityInheritParent

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocityInheritParent
  }
}

public open external class ParticleModuleVelocityOverLifetime(
  outer: UObject,
) : ParticleModuleVelocityBase {
  @JsName("VelOverLife")
  public open var velOverLife: RawDistributionVector

  @JsName("Absolute")
  public open var absolute: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocityOverLifetime

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocityOverLifetime

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocityOverLifetime

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocityOverLifetime

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocityOverLifetime

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocityOverLifetime
  }
}

@JsName("ParticleModuleVelocity_Seeded")
public open external class ParticleModuleVelocitySeeded(
  outer: UObject,
) : ParticleModuleVelocity {
  @JsName("RandomSeedInfo")
  public open var randomSeedInfo: ParticleRandomSeedInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleModuleVelocitySeeded

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleModuleVelocitySeeded

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleModuleVelocitySeeded

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleModuleVelocitySeeded

    @JsName("C")
    public fun copy(other: UObject): ParticleModuleVelocitySeeded

    @JsName("C")
    public fun copy(other: Any): ParticleModuleVelocitySeeded
  }
}

public open external class ParticleSpriteEmitter(
  outer: UObject,
) : ParticleEmitter {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleSpriteEmitter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleSpriteEmitter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleSpriteEmitter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleSpriteEmitter

    @JsName("C")
    public fun copy(other: UObject): ParticleSpriteEmitter

    @JsName("C")
    public fun copy(other: Any): ParticleSpriteEmitter
  }
}

public open external class PathFollowingAgentInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PathFollowingAgentInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PathFollowingAgentInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PathFollowingAgentInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PathFollowingAgentInterface

    @JsName("C")
    public fun copy(other: UObject): PathFollowingAgentInterface

    @JsName("C")
    public fun copy(other: Any): PathFollowingAgentInterface
  }
}

public open external class PawnNoiseEmitterComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("bAIPerceptionSystemCompatibilityMode")
  public open var aiPerceptionSystemCompatibilityMode: Boolean

  @JsName("LastRemoteNoisePosition")
  public open var lastRemoteNoisePosition: Vector

  @JsName("NoiseLifetime")
  public open var noiseLifetime: Number

  @JsName("LastRemoteNoiseVolume")
  public open var lastRemoteNoiseVolume: Number

  @JsName("LastRemoteNoiseTime")
  public open var lastRemoteNoiseTime: Number

  @JsName("LastLocalNoiseVolume")
  public open var lastLocalNoiseVolume: Number

  @JsName("LastLocalNoiseTime")
  public open var lastLocalNoiseTime: Number

  @JsName("MakeNoise")
  public open fun makeNoise(
    noiseMaker: Actor,
    loudness: Number,
    noiseLocation: Vector,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PawnNoiseEmitterComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PawnNoiseEmitterComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PawnNoiseEmitterComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PawnNoiseEmitterComponent

    @JsName("C")
    public fun copy(other: UObject): PawnNoiseEmitterComponent

    @JsName("C")
    public fun copy(other: Any): PawnNoiseEmitterComponent
  }
}

public open external class PhysicalAnimationComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("StrengthMultiplyer")
  public open var strengthMultiplyer: Number

  @JsName("SkeletalMeshComponent")
  public open var skeletalMeshComponent: SkeletalMeshComponent

  @JsName("SetStrengthMultiplyer")
  public open fun setStrengthMultiplyer(inStrengthMultiplyer: Number): Unit

  @JsName("SetSkeletalMeshComponent")
  public open fun setSkeletalMeshComponent(inSkeletalMeshComponent: SkeletalMeshComponent): Unit

  @JsName("GetBodyTargetTransform")
  public open fun getBodyTargetTransform(bodyName: String): Transform

  @JsName("ApplyPhysicalAnimationSettingsBelow")
  public open fun applyPhysicalAnimationSettingsBelow(
    bodyName: String,
    physicalAnimationData: PhysicalAnimationData,
    includeSelf: Boolean,
  ): Unit

  @JsName("ApplyPhysicalAnimationSettings")
  public open fun applyPhysicalAnimationSettings(bodyName: String,
      physicalAnimationData: PhysicalAnimationData): Unit

  @JsName("ApplyPhysicalAnimationProfileBelow")
  public open fun applyPhysicalAnimationProfileBelow(
    bodyName: String,
    profileName: String,
    includeSelf: Boolean,
    clearNotFound: Boolean,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicalAnimationComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicalAnimationComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicalAnimationComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicalAnimationComponent

    @JsName("C")
    public fun copy(other: UObject): PhysicalAnimationComponent

    @JsName("C")
    public fun copy(other: Any): PhysicalAnimationComponent
  }
}

public open external class RigidBodyBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RigidBodyBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RigidBodyBase

    @JsName("C")
    public fun copy(other: UObject): RigidBodyBase

    @JsName("C")
    public fun copy(other: Any): RigidBodyBase
  }
}

public open external class ConstrainComponentPropName {
  @JsName("ComponentName")
  public open var componentName: String

  public open fun clone(): ConstrainComponentPropName

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ConstrainComponentPropName

    @JsName("C")
    public fun copy(other: Any): ConstrainComponentPropName
  }
}

@JsName("EConstraintFrame")
public external object ConstraintFrame {
  @JsName("Frame1")
  public var One: String

  @JsName("Frame2")
  public var Two: String

  @JsName("EConstraintFrame_MAX")
  public var Max: String
}

@JsName("T$801")
public external interface Object801 {
  @JsName("OutLinearForce")
  public var outLinearForce: Vector

  @JsName("OutAngularForce")
  public var outAngularForce: Vector
}

@JsName("T$802")
public external interface Object802 {
  @JsName("OutComponent1")
  public var outComponent1: PrimitiveComponent

  @JsName("OutBoneName1")
  public var outBoneName1: String

  @JsName("OutComponent2")
  public var outComponent2: PrimitiveComponent

  @JsName("OutBoneName2")
  public var outBoneName2: String
}

public open external class PhysicsConstraintComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("ConstraintActor1")
  public open var constraintActor1: Actor

  @JsName("ComponentName1")
  public open var componentName1: ConstrainComponentPropName

  @JsName("ConstraintActor2")
  public open var constraintActor2: Actor

  @JsName("ComponentName2")
  public open var componentName2: ConstrainComponentPropName

  @JsName("ConstraintSetup")
  public open var constraintSetup: PhysicsConstraintTemplate

  @JsName("OnConstraintBroken")
  public open var onConstraintBroken:
      UnrealEngineMulticastDelegate<(ConstraintIndex: Number) -> Unit>

  @JsName("OnPlasticDeformation")
  public open var onPlasticDeformation:
      UnrealEngineMulticastDelegate<(ConstraintIndex: Number) -> Unit>

  @JsName("ConstraintInstance")
  public open var constraintInstance: ConstraintInstance

  @JsName("SetOrientationDriveTwistAndSwing")
  public open fun setOrientationDriveTwistAndSwing(enableTwistDrive: Boolean,
      enableSwingDrive: Boolean): Unit

  @JsName("SetOrientationDriveSLERP")
  public open fun setOrientationDriveSlerp(enableSlerp: Boolean): Unit

  @JsName("SetLinearZLimit")
  public open fun setLinearZLimit(constraintType: String, limitSize: Number): Unit

  @JsName("SetLinearYLimit")
  public open fun setLinearYLimit(constraintType: String, limitSize: Number): Unit

  @JsName("SetLinearXLimit")
  public open fun setLinearXLimit(constraintType: String, limitSize: Number): Unit

  @JsName("SetLinearVelocityTarget")
  public open fun setLinearVelocityTarget(inVelTarget: Vector): Unit

  @JsName("SetLinearVelocityDrive")
  public open fun setLinearVelocityDrive(
    enableDriveX: Boolean,
    enableDriveY: Boolean,
    enableDriveZ: Boolean,
  ): Unit

  @JsName("SetLinearPositionTarget")
  public open fun setLinearPositionTarget(inPosTarget: Vector): Unit

  @JsName("SetLinearPositionDrive")
  public open fun setLinearPositionDrive(
    enableDriveX: Boolean,
    enableDriveY: Boolean,
    enableDriveZ: Boolean,
  ): Unit

  @JsName("SetLinearPlasticity")
  public open fun setLinearPlasticity(
    linearPlasticity: Boolean,
    linearPlasticityThreshold: Number,
    plasticityType: String,
  ): Unit

  @JsName("SetLinearDriveParams")
  public open fun setLinearDriveParams(
    positionStrength: Number,
    velocityStrength: Number,
    inForceLimit: Number,
  ): Unit

  @JsName("SetLinearBreakable")
  public open fun setLinearBreakable(linearBreakable: Boolean, linearBreakThreshold: Number): Unit

  @JsName("SetDisableCollision")
  public open fun setDisableCollision(disableCollision: Boolean): Unit

  @JsName("SetContactTransferScale")
  public open fun setContactTransferScale(contactTransferScale: Number): Unit

  @JsName("SetConstraintReferencePosition")
  public open fun setConstraintReferencePosition(frame: String, refPosition: Vector): Unit

  @JsName("SetConstraintReferenceOrientation")
  public open fun setConstraintReferenceOrientation(
    frame: String,
    priAxis: Vector,
    secAxis: Vector,
  ): Unit

  @JsName("SetConstraintReferenceFrame")
  public open fun setConstraintReferenceFrame(frame: String, refFrame: Transform): Unit

  @JsName("SetConstrainedComponents")
  public open fun setConstrainedComponents(
    component1: PrimitiveComponent,
    boneName1: String,
    component2: PrimitiveComponent,
    boneName2: String,
  ): Unit

  @JsName("SetAngularVelocityTarget")
  public open fun setAngularVelocityTarget(inVelTarget: Vector): Unit

  @JsName("SetAngularVelocityDriveTwistAndSwing")
  public open fun setAngularVelocityDriveTwistAndSwing(enableTwistDrive: Boolean,
      enableSwingDrive: Boolean): Unit

  @JsName("SetAngularVelocityDriveSLERP")
  public open fun setAngularVelocityDriveSlerp(enableSlerp: Boolean): Unit

  @JsName("SetAngularVelocityDrive")
  public open fun setAngularVelocityDrive(enableSwingDrive: Boolean, enableTwistDrive: Boolean):
      Unit

  @JsName("SetAngularTwistLimit")
  public open fun setAngularTwistLimit(constraintType: String, twistLimitAngle: Number): Unit

  @JsName("SetAngularSwing2Limit")
  public open fun setAngularSwing2Limit(motionType: String, swing2LimitAngle: Number): Unit

  @JsName("SetAngularSwing1Limit")
  public open fun setAngularSwing1Limit(motionType: String, swing1LimitAngle: Number): Unit

  @JsName("SetAngularPlasticity")
  public open fun setAngularPlasticity(angularPlasticity: Boolean,
      angularPlasticityThreshold: Number): Unit

  @JsName("SetAngularOrientationTarget")
  public open fun setAngularOrientationTarget(inPosTarget: Rotator): Unit

  @JsName("SetAngularOrientationDrive")
  public open fun setAngularOrientationDrive(enableSwingDrive: Boolean, enableTwistDrive: Boolean):
      Unit

  @JsName("SetAngularDriveParams")
  public open fun setAngularDriveParams(
    positionStrength: Number,
    velocityStrength: Number,
    inForceLimit: Number,
  ): Unit

  @JsName("SetAngularDriveMode")
  public open fun setAngularDriveMode(driveMode: String): Unit

  @JsName("SetAngularBreakable")
  public open fun setAngularBreakable(angularBreakable: Boolean, angularBreakThreshold: Number):
      Unit

  @JsName("IsBroken")
  public open fun isBroken(): Boolean

  @JsName("GetCurrentTwist")
  public open fun getCurrentTwist(): Number

  @JsName("GetCurrentSwing2")
  public open fun getCurrentSwing2(): Number

  @JsName("GetCurrentSwing1")
  public open fun getCurrentSwing1(): Number

  @JsName("GetConstraintForce")
  public open fun getConstraintForce(outLinearForce: Vector, outAngularForce: Vector): Object801

  @JsName("GetConstraint")
  public open fun getConstraint(): ConstraintInstanceAccessor

  @JsName("GetConstrainedComponents")
  public open fun getConstrainedComponents(
    outComponent1: PrimitiveComponent,
    outBoneName1: String,
    outComponent2: PrimitiveComponent,
    outBoneName2: String,
  ): Object802

  @JsName("BreakConstraint")
  public open fun breakConstraint(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsConstraintComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsConstraintComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsConstraintComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsConstraintComponent

    @JsName("C")
    public fun copy(other: UObject): PhysicsConstraintComponent

    @JsName("C")
    public fun copy(other: Any): PhysicsConstraintComponent
  }
}

public open external class PhysicsConstraintActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : RigidBodyBase {
  @JsName("ConstraintComp")
  public open var constraintComp: PhysicsConstraintComponent

  @JsName("ConstraintActor1")
  public open var constraintActor1: Actor

  @JsName("ConstraintActor2")
  public open var constraintActor2: Actor

  @JsName("bDisableCollision")
  public open var disableCollision: Boolean

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsConstraintActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsConstraintActor

    @JsName("C")
    public fun copy(other: UObject): PhysicsConstraintActor

    @JsName("C")
    public fun copy(other: Any): PhysicsConstraintActor
  }
}

@JsName("T$803")
public external interface Object803 {
  @JsName("TargetLocation")
  public var targetLocation: Vector

  @JsName("TargetRotation")
  public var targetRotation: Rotator
}

public open external class PhysicsHandleComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("GrabbedComponent")
  public open var grabbedComponent: PrimitiveComponent

  @JsName("bSoftAngularConstraint")
  public open var softAngularConstraint: Boolean

  @JsName("bSoftLinearConstraint")
  public open var softLinearConstraint: Boolean

  @JsName("bInterpolateTarget")
  public open var interpolateTarget: Boolean

  @JsName("LinearDamping")
  public open var linearDamping: Number

  @JsName("LinearStiffness")
  public open var linearStiffness: Number

  @JsName("AngularDamping")
  public open var angularDamping: Number

  @JsName("AngularStiffness")
  public open var angularStiffness: Number

  @JsName("InterpolationSpeed")
  public open var interpolationSpeed: Number

  @JsName("SetTargetRotation")
  public open fun setTargetRotation(newRotation: Rotator): Unit

  @JsName("SetTargetLocationAndRotation")
  public open fun setTargetLocationAndRotation(newLocation: Vector, newRotation: Rotator): Unit

  @JsName("SetTargetLocation")
  public open fun setTargetLocation(newLocation: Vector): Unit

  @JsName("SetLinearStiffness")
  public open fun setLinearStiffness(newLinearStiffness: Number): Unit

  @JsName("SetLinearDamping")
  public open fun setLinearDamping(newLinearDamping: Number): Unit

  @JsName("SetInterpolationSpeed")
  public open fun setInterpolationSpeed(newInterpolationSpeed: Number): Unit

  @JsName("SetAngularStiffness")
  public open fun setAngularStiffness(newAngularStiffness: Number): Unit

  @JsName("SetAngularDamping")
  public open fun setAngularDamping(newAngularDamping: Number): Unit

  @JsName("ReleaseComponent")
  public open fun releaseComponent(): Unit

  @JsName("GrabComponentAtLocationWithRotation")
  public open fun grabComponentAtLocationWithRotation(
    component: PrimitiveComponent,
    inBoneName: String,
    location: Vector,
    rotation: Rotator,
  ): Unit

  @JsName("GrabComponentAtLocation")
  public open fun grabComponentAtLocation(
    component: PrimitiveComponent,
    inBoneName: String,
    grabLocation: Vector,
  ): Unit

  @JsName("GrabComponent")
  public open fun grabComponent(
    component: PrimitiveComponent,
    inBoneName: String,
    grabLocation: Vector,
    constrainRotation: Boolean,
  ): Unit

  @JsName("GetTargetLocationAndRotation")
  public open fun getTargetLocationAndRotation(targetLocation: Vector, targetRotation: Rotator):
      Object803

  @JsName("GetGrabbedComponent")
  public open fun getGrabbedComponent(): PrimitiveComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsHandleComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsHandleComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsHandleComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsHandleComponent

    @JsName("C")
    public fun copy(other: UObject): PhysicsHandleComponent

    @JsName("C")
    public fun copy(other: Any): PhysicsHandleComponent
  }
}

public open external class RigidBodyErrorCorrection {
  @JsName("PingExtrapolation")
  public open var pingExtrapolation: Number

  @JsName("PingLimit")
  public open var pingLimit: Number

  @JsName("ErrorPerLinearDifference")
  public open var errorPerLinearDifference: Number

  @JsName("ErrorPerAngularDifference")
  public open var errorPerAngularDifference: Number

  @JsName("MaxRestoredStateError")
  public open var maxRestoredStateError: Number

  @JsName("MaxLinearHardSnapDistance")
  public open var maxLinearHardSnapDistance: Number

  @JsName("PositionLerp")
  public open var positionLerp: Number

  @JsName("AngleLerp")
  public open var angleLerp: Number

  @JsName("LinearVelocityCoefficient")
  public open var linearVelocityCoefficient: Number

  @JsName("AngularVelocityCoefficient")
  public open var angularVelocityCoefficient: Number

  @JsName("ErrorAccumulationSeconds")
  public open var errorAccumulationSeconds: Number

  @JsName("ErrorAccumulationDistanceSq")
  public open var errorAccumulationDistanceSq: Number

  @JsName("ErrorAccumulationSimilarity")
  public open var errorAccumulationSimilarity: Number

  public open fun clone(): RigidBodyErrorCorrection

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): RigidBodyErrorCorrection

    @JsName("C")
    public fun copy(other: Any): RigidBodyErrorCorrection
  }
}

@JsName("ESettingsLockedAxis")
public external object SettingsLockedAxis {
  public var None: String

  @JsName("X")
  public var x: String

  @JsName("Y")
  public var y: String

  @JsName("Z")
  public var z: String

  public var Invalid: String

  @JsName("ESettingsLockedAxis_MAX")
  public var Max: String
}

@JsName("ESettingsDOF")
public external object SettingsDOF {
  @JsName("Full3D")
  public var Full3d: String

  @JsName("YZPlane")
  public var YzPlane: String

  @JsName("XZPlane")
  public var XzPlane: String

  @JsName("XYPlane")
  public var XyPlane: String

  @JsName("ESettingsDOF_MAX")
  public var Max: String
}

public open external class PhysicalSurfaceName {
  @JsName("Type")
  public open var type: String

  @JsName("Name")
  public open var name: String

  public open fun clone(): PhysicalSurfaceName

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PhysicalSurfaceName

    @JsName("C")
    public fun copy(other: Any): PhysicalSurfaceName
  }
}

@JsName("EChaosThreadingMode")
public external object ChaosThreadingMode {
  public var DedicatedThread: String

  public var TaskGraph: String

  public var SingleThread: String

  public var Num: String

  public var Invalid: String

  @JsName("EChaosThreadingMode_MAX")
  public var Max: String
}

@JsName("EChaosSolverTickMode")
public external object ChaosSolverTickMode {
  public var Fixed: String

  public var Variable: String

  public var VariableCapped: String

  public var VariableCappedWithTarget: String

  @JsName("EChaosSolverTickMode_MAX")
  public var Max: String
}

@JsName("EChaosBufferMode")
public external object ChaosBufferMode {
  public var Double: String

  public var Triple: String

  public var Num: String

  public var Invalid: String

  @JsName("EChaosBufferMode_MAX")
  public var Max: String
}

public open external class ChaosPhysicsSettings {
  @JsName("DefaultThreadingModel")
  public open var defaultThreadingModel: String

  @JsName("DedicatedThreadTickMode")
  public open var dedicatedThreadTickMode: String

  @JsName("DedicatedThreadBufferMode")
  public open var dedicatedThreadBufferMode: String

  public open fun clone(): ChaosPhysicsSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChaosPhysicsSettings

    @JsName("C")
    public fun copy(other: Any): ChaosPhysicsSettings
  }
}

public open external class PhysicsSettings(
  outer: UObject,
) : PhysicsSettingsCore {
  @JsName("PhysicErrorCorrection")
  public open var physicErrorCorrection: RigidBodyErrorCorrection

  @JsName("LockedAxis")
  public open var lockedAxis: String

  @JsName("DefaultDegreesOfFreedom")
  public open var defaultDegreesOfFreedom: String

  @JsName("bSuppressFaceRemapTable")
  public open var suppressFaceRemapTable: Boolean

  @JsName("bSupportUVFromHitResults")
  public open var supportUvFromHitResults: Boolean

  @JsName("bDisableActiveActors")
  public open var disableActiveActors: Boolean

  @JsName("bDisableKinematicStaticPairs")
  public open var disableKinematicStaticPairs: Boolean

  @JsName("bDisableKinematicKinematicPairs")
  public open var disableKinematicKinematicPairs: Boolean

  @JsName("bDisableCCD")
  public open var disableCcd: Boolean

  @JsName("bEnableEnhancedDeterminism")
  public open var enableEnhancedDeterminism: Boolean

  @JsName("AnimPhysicsMinDeltaTime")
  public open var animPhysicsMinDeltaTime: Number

  @JsName("bSimulateAnimPhysicsAfterReset")
  public open var simulateAnimPhysicsAfterReset: Boolean

  @JsName("MinPhysicsDeltaTime")
  public open var minPhysicsDeltaTime: Number

  @JsName("MaxPhysicsDeltaTime")
  public open var maxPhysicsDeltaTime: Number

  @JsName("bSubstepping")
  public open var substepping: Boolean

  @JsName("bSubsteppingAsync")
  public open var substeppingAsync: Boolean

  @JsName("bTickPhysicsAsync")
  public open var tickPhysicsAsync: Boolean

  @JsName("AsyncFixedTimeStepSize")
  public open var asyncFixedTimeStepSize: Number

  @JsName("MaxSubstepDeltaTime")
  public open var maxSubstepDeltaTime: Number

  @JsName("MaxSubsteps")
  public open var maxSubsteps: Number

  @JsName("SyncSceneSmoothingFactor")
  public open var syncSceneSmoothingFactor: Number

  @JsName("InitialAverageFrameRate")
  public open var initialAverageFrameRate: Number

  @JsName("PhysXTreeRebuildRate")
  public open var physXTreeRebuildRate: Number

  @JsName("PhysicalSurfaces")
  public open var physicalSurfaces: Array<PhysicalSurfaceName>

  @JsName("DefaultBroadphaseSettings")
  public open var defaultBroadphaseSettings: BroadphaseSettings

  @JsName("MinDeltaVelocityForHitEvents")
  public open var minDeltaVelocityForHitEvents: Number

  @JsName("ChaosSettings")
  public open var chaosSettings: ChaosPhysicsSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsSettings

    @JsName("C")
    public fun copy(other: UObject): PhysicsSettings

    @JsName("C")
    public fun copy(other: Any): PhysicsSettings
  }
}

public open external class PhysicsSpringComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("SpringStiffness")
  public open var springStiffness: Number

  @JsName("SpringDamping")
  public open var springDamping: Number

  @JsName("SpringLengthAtRest")
  public open var springLengthAtRest: Number

  @JsName("SpringRadius")
  public open var springRadius: Number

  @JsName("SpringChannel")
  public open var springChannel: String

  @JsName("bIgnoreSelf")
  public open var ignoreSelf: Boolean

  @JsName("SpringCompression")
  public open var springCompression: Number

  @JsName("GetSpringRestingPoint")
  public open fun getSpringRestingPoint(): Vector

  @JsName("GetSpringDirection")
  public open fun getSpringDirection(): Vector

  @JsName("GetSpringCurrentEndPoint")
  public open fun getSpringCurrentEndPoint(): Vector

  @JsName("GetNormalizedCompressionScalar")
  public open fun getNormalizedCompressionScalar(): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsSpringComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsSpringComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsSpringComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsSpringComponent

    @JsName("C")
    public fun copy(other: UObject): PhysicsSpringComponent

    @JsName("C")
    public fun copy(other: Any): PhysicsSpringComponent
  }
}

public open external class PhysicsThrusterComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("ThrustStrength")
  public open var thrustStrength: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsThrusterComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsThrusterComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsThrusterComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsThrusterComponent

    @JsName("C")
    public fun copy(other: UObject): PhysicsThrusterComponent

    @JsName("C")
    public fun copy(other: Any): PhysicsThrusterComponent
  }
}

public open external class PhysicsThruster(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : RigidBodyBase {
  @JsName("ThrusterComponent")
  public open var thrusterComponent: PhysicsThrusterComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsThruster

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsThruster

    @JsName("C")
    public fun copy(other: UObject): PhysicsThruster

    @JsName("C")
    public fun copy(other: Any): PhysicsThruster
  }
}

public open external class SceneCapture(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("MeshComp")
  public open var meshComp: StaticMeshComponent

  @JsName("SceneComponent")
  public open var sceneComponent: SceneComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCapture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCapture

    @JsName("C")
    public fun copy(other: UObject): SceneCapture

    @JsName("C")
    public fun copy(other: Any): SceneCapture
  }
}

@JsName("ESceneCapturePrimitiveRenderMode")
public external object SceneCapturePrimitiveRenderMode {
  @JsName("PRM_LegacySceneCapture")
  public var LegacySceneCapture: String

  @JsName("PRM_RenderScenePrimitives")
  public var RenderScenePrimitives: String

  @JsName("PRM_UseShowOnlyList")
  public var UseShowOnlyList: String

  @JsName("PRM_MAX")
  public var Max: String
}

@JsName("ESceneCaptureSource")
public external object SceneCaptureSource {
  @JsName("SCS_SceneColorHDR")
  public var SceneColorHdr: String

  @JsName("SCS_SceneColorHDRNoAlpha")
  public var SceneColorHdrNoAlpha: String

  @JsName("SCS_FinalColorLDR")
  public var FinalColorLdr: String

  @JsName("SCS_SceneColorSceneDepth")
  public var SceneColorSceneDepth: String

  @JsName("SCS_SceneDepth")
  public var SceneDepth: String

  @JsName("SCS_DeviceDepth")
  public var DeviceDepth: String

  @JsName("SCS_Normal")
  public var Normal: String

  @JsName("SCS_BaseColor")
  public var BaseColor: String

  @JsName("SCS_FinalColorHDR")
  public var FinalColorHdr: String

  @JsName("SCS_FinalToneCurveHDR")
  public var FinalToneCurveHdr: String

  @JsName("SCS_MAX")
  public var Max: String
}

public open external class EngineShowFlagsSetting {
  @JsName("ShowFlagName")
  public open var showFlagName: String

  @JsName("Enabled")
  public open var enabled: Boolean

  public open fun clone(): EngineShowFlagsSetting

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): EngineShowFlagsSetting

    @JsName("C")
    public fun copy(other: Any): EngineShowFlagsSetting
  }
}

public open external class SceneCaptureComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("PrimitiveRenderMode")
  public open var primitiveRenderMode: String

  @JsName("CaptureSource")
  public open var captureSource: String

  @JsName("bCaptureEveryFrame")
  public open var captureEveryFrame: Boolean

  @JsName("bCaptureOnMovement")
  public open var captureOnMovement: Boolean

  @JsName("bAlwaysPersistRenderingState")
  public open var alwaysPersistRenderingState: Boolean

  @JsName("HiddenComponents")
  public open var hiddenComponents: Array<Any>

  @JsName("HiddenActors")
  public open var hiddenActors: Array<Actor>

  @JsName("ShowOnlyComponents")
  public open var showOnlyComponents: Array<Any>

  @JsName("ShowOnlyActors")
  public open var showOnlyActors: Array<Actor>

  @JsName("LODDistanceFactor")
  public open var lodDistanceFactor: Number

  @JsName("MaxViewDistanceOverride")
  public open var maxViewDistanceOverride: Number

  @JsName("CaptureSortPriority")
  public open var captureSortPriority: Number

  @JsName("bUseRayTracingIfEnabled")
  public open var useRayTracingIfEnabled: Boolean

  @JsName("ShowFlagSettings")
  public open var showFlagSettings: Array<EngineShowFlagsSetting>

  @JsName("ProfilingEventName")
  public open var profilingEventName: String

  @JsName("CaptureMesh")
  public open var captureMesh: StaticMesh

  @JsName("ShowOnlyComponent")
  public open fun showOnlyComponent(inComponent: PrimitiveComponent): Unit

  @JsName("ShowOnlyActorComponents")
  public open fun showOnlyActorComponents(inActor: Actor, includeFromChildActors: Boolean): Unit

  @JsName("SetCaptureSortPriority")
  public open fun setCaptureSortPriority(newCaptureSortPriority: Number): Unit

  @JsName("RemoveShowOnlyComponent")
  public open fun removeShowOnlyComponent(inComponent: PrimitiveComponent): Unit

  @JsName("RemoveShowOnlyActorComponents")
  public open fun removeShowOnlyActorComponents(inActor: Actor, includeFromChildActors: Boolean):
      Unit

  @JsName("HideComponent")
  public open fun hideComponent(inComponent: PrimitiveComponent): Unit

  @JsName("HideActorComponents")
  public open fun hideActorComponents(inActor: Actor, includeFromChildActors: Boolean): Unit

  @JsName("ClearShowOnlyComponents")
  public open fun clearShowOnlyComponents(): Unit

  @JsName("ClearHiddenComponents")
  public open fun clearHiddenComponents(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SceneCaptureComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SceneCaptureComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCaptureComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCaptureComponent

    @JsName("C")
    public fun copy(other: UObject): SceneCaptureComponent

    @JsName("C")
    public fun copy(other: Any): SceneCaptureComponent
  }
}

public open external class PlanarReflectionComponent(
  outer: UObject,
) : SceneCaptureComponent {
  @JsName("PreviewBox")
  public open var previewBox: BoxComponent

  @JsName("NormalDistortionStrength")
  public open var normalDistortionStrength: Number

  @JsName("PrefilterRoughness")
  public open var prefilterRoughness: Number

  @JsName("PrefilterRoughnessDistance")
  public open var prefilterRoughnessDistance: Number

  @JsName("ScreenPercentage")
  public open var screenPercentage: Number

  @JsName("ExtraFOV")
  public open var extraFov: Number

  @JsName("DistanceFromPlaneFadeStart")
  public open var distanceFromPlaneFadeStart: Number

  @JsName("DistanceFromPlaneFadeEnd")
  public open var distanceFromPlaneFadeEnd: Number

  @JsName("DistanceFromPlaneFadeoutStart")
  public open var distanceFromPlaneFadeoutStart: Number

  @JsName("DistanceFromPlaneFadeoutEnd")
  public open var distanceFromPlaneFadeoutEnd: Number

  @JsName("AngleFromPlaneFadeStart")
  public open var angleFromPlaneFadeStart: Number

  @JsName("AngleFromPlaneFadeEnd")
  public open var angleFromPlaneFadeEnd: Number

  @JsName("bShowPreviewPlane")
  public open var showPreviewPlane: Boolean

  @JsName("bRenderSceneTwoSided")
  public open var renderSceneTwoSided: Boolean

  @JsName("CaptureMaterial")
  public open var captureMaterial: Material

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlanarReflectionComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlanarReflectionComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlanarReflectionComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlanarReflectionComponent

    @JsName("C")
    public fun copy(other: UObject): PlanarReflectionComponent

    @JsName("C")
    public fun copy(other: Any): PlanarReflectionComponent
  }
}

public open external class PlanarReflection(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : SceneCapture {
  @JsName("PlanarReflectionComponent")
  public open var planarReflectionComponent: PlanarReflectionComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("bShowPreviewPlane")
  public open var showPreviewPlane: Boolean

  @JsName("OnInterpToggle")
  public open fun onInterpToggle(enable: Boolean): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlanarReflection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlanarReflection

    @JsName("C")
    public fun copy(other: UObject): PlanarReflection

    @JsName("C")
    public fun copy(other: Any): PlanarReflection
  }
}

public open external class PlaneReflectionCapture(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : ReflectionCapture {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlaneReflectionCapture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlaneReflectionCapture

    @JsName("C")
    public fun copy(other: UObject): PlaneReflectionCapture

    @JsName("C")
    public fun copy(other: Any): PlaneReflectionCapture
  }
}

public open external class PlaneReflectionCaptureComponent(
  outer: UObject,
) : ReflectionCaptureComponent {
  @JsName("InfluenceRadiusScale")
  public open var influenceRadiusScale: Number

  @JsName("PreviewInfluenceRadius")
  public open var previewInfluenceRadius: DrawSphereComponent

  @JsName("PreviewCaptureBox")
  public open var previewCaptureBox: BoxComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlaneReflectionCaptureComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlaneReflectionCaptureComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlaneReflectionCaptureComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlaneReflectionCaptureComponent

    @JsName("C")
    public fun copy(other: UObject): PlaneReflectionCaptureComponent

    @JsName("C")
    public fun copy(other: Any): PlaneReflectionCaptureComponent
  }
}

public open external class PlatformEventsComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("PlatformChangedToLaptopModeDelegate")
  public open var platformChangedToLaptopModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("PlatformChangedToTabletModeDelegate")
  public open var platformChangedToTabletModeDelegate: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("SupportsConvertibleLaptops")
  public open fun supportsConvertibleLaptops(): Boolean

  @JsName("IsInTabletMode")
  public open fun isInTabletMode(): Boolean

  @JsName("IsInLaptopMode")
  public open fun isInLaptopMode(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformEventsComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlatformEventsComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformEventsComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformEventsComponent

    @JsName("C")
    public fun copy(other: UObject): PlatformEventsComponent

    @JsName("C")
    public fun copy(other: Any): PlatformEventsComponent
  }
}

@JsName("T$804")
public external interface Object804 {
  @JsName("Header")
  public var header: String

  @JsName("Value")
  public var value: String
}

public open external class PlatformInterfaceWebResponse(
  outer: UObject,
) : UObject {
  @JsName("OriginalURL")
  public open var originalUrl: String

  @JsName("ResponseCode")
  public open var responseCode: Number

  @JsName("Tag")
  public open var tag: Number

  @JsName("StringResponse")
  public open var stringResponse: String

  @JsName("BinaryResponse")
  public open var binaryResponse: Array<Number>

  @JsName("GetNumHeaders")
  public open fun getNumHeaders(): Number

  @JsName("GetHeaderValue")
  public open fun getHeaderValue(headerName: String): String

  @JsName("GetHeader")
  public open fun getHeader(
    headerIndex: Number,
    header: String,
    value: String,
  ): Object804

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformInterfaceWebResponse

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlatformInterfaceWebResponse

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformInterfaceWebResponse

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformInterfaceWebResponse

    @JsName("C")
    public fun copy(other: UObject): PlatformInterfaceWebResponse

    @JsName("C")
    public fun copy(other: Any): PlatformInterfaceWebResponse
  }
}

public open external class PlayerStart(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : NavigationObjectBase {
  @JsName("PlayerStartTag")
  public open var playerStartTag: String

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlayerStart

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlayerStart

    @JsName("C")
    public fun copy(other: UObject): PlayerStart

    @JsName("C")
    public fun copy(other: Any): PlayerStart
  }
}

@JsName("PlayerStartPIE")
public open external class PlayerStartPie(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : PlayerStart {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlayerStartPie

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlayerStartPie

    @JsName("C")
    public fun copy(other: UObject): PlayerStartPie

    @JsName("C")
    public fun copy(other: Any): PlayerStartPie
  }
}

public open external class PluginCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PluginCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PluginCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PluginCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PluginCommandlet

    @JsName("C")
    public fun copy(other: UObject): PluginCommandlet

    @JsName("C")
    public fun copy(other: Any): PluginCommandlet
  }
}

public open external class PointLight(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Light {
  @JsName("PointLightComponent")
  public open var pointLightComponent: PointLightComponent

  @JsName("SetRadius")
  public open fun setRadius(newRadius: Number): Unit

  @JsName("SetLightFalloffExponent")
  public open fun setLightFalloffExponent(newLightFalloffExponent: Number): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PointLight

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PointLight

    @JsName("C")
    public fun copy(other: UObject): PointLight

    @JsName("C")
    public fun copy(other: Any): PointLight
  }
}

public open external class Polys(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): Polys

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): Polys

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Polys

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Polys

    @JsName("C")
    public fun copy(other: UObject): Polys

    @JsName("C")
    public fun copy(other: Any): Polys
  }
}

@JsName("EBoneSpaces")
public external object BoneSpaces {
  public var WorldSpace: String

  public var ComponentSpace: String

  @JsName("EBoneSpaces_MAX")
  public var Max: String
}

public open external class PoseableMeshComponent(
  outer: UObject,
) : SkinnedMeshComponent {
  @JsName("SetBoneTransformByName")
  public open fun setBoneTransformByName(
    boneName: String,
    inTransform: Transform,
    boneSpace: String,
  ): Unit

  @JsName("SetBoneScaleByName")
  public open fun setBoneScaleByName(
    boneName: String,
    inScale3d: Vector,
    boneSpace: String,
  ): Unit

  @JsName("SetBoneRotationByName")
  public open fun setBoneRotationByName(
    boneName: String,
    inRotation: Rotator,
    boneSpace: String,
  ): Unit

  @JsName("SetBoneLocationByName")
  public open fun setBoneLocationByName(
    boneName: String,
    inLocation: Vector,
    boneSpace: String,
  ): Unit

  @JsName("ResetBoneTransformByName")
  public open fun resetBoneTransformByName(boneName: String): Unit

  @JsName("GetBoneTransformByName")
  public open fun getBoneTransformByName(boneName: String, boneSpace: String): Transform

  @JsName("GetBoneScaleByName")
  public open fun getBoneScaleByName(boneName: String, boneSpace: String): Vector

  @JsName("GetBoneRotationByName")
  public open fun getBoneRotationByName(boneName: String, boneSpace: String): Rotator

  @JsName("GetBoneLocationByName")
  public open fun getBoneLocationByName(boneName: String, boneSpace: String): Vector

  @JsName("CopyPoseFromSkeletalComponent")
  public open fun copyPoseFromSkeletalComponent(inComponentToCopy: SkeletalMeshComponent): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PoseableMeshComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PoseableMeshComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PoseableMeshComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PoseableMeshComponent

    @JsName("C")
    public fun copy(other: UObject): PoseableMeshComponent

    @JsName("C")
    public fun copy(other: Any): PoseableMeshComponent
  }
}

public open external class PostProcessVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  @JsName("Settings")
  public open var settings: PostProcessSettings

  @JsName("Priority")
  public open var priority: Number

  @JsName("BlendRadius")
  public open var blendRadius: Number

  @JsName("BlendWeight")
  public open var blendWeight: Number

  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("bUnbound")
  public open var unbound: Boolean

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PostProcessVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PostProcessVolume

    @JsName("C")
    public fun copy(other: UObject): PostProcessVolume

    @JsName("C")
    public fun copy(other: Any): PostProcessVolume
  }
}

public open external class PrecomputedVisibilityOverrideVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  @JsName("OverrideVisibleActors")
  public open var overrideVisibleActors: Array<Actor>

  @JsName("OverrideInvisibleActors")
  public open var overrideInvisibleActors: Array<Actor>

  @JsName("OverrideInvisibleLevels")
  public open var overrideInvisibleLevels: Array<String>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PrecomputedVisibilityOverrideVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PrecomputedVisibilityOverrideVolume

    @JsName("C")
    public fun copy(other: UObject): PrecomputedVisibilityOverrideVolume

    @JsName("C")
    public fun copy(other: Any): PrecomputedVisibilityOverrideVolume
  }
}

public open external class PrecomputedVisibilityVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PrecomputedVisibilityVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PrecomputedVisibilityVolume

    @JsName("C")
    public fun copy(other: UObject): PrecomputedVisibilityVolume

    @JsName("C")
    public fun copy(other: Any): PrecomputedVisibilityVolume
  }
}

public open external class PreviewCollectionInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PreviewCollectionInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PreviewCollectionInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PreviewCollectionInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PreviewCollectionInterface

    @JsName("C")
    public fun copy(other: UObject): PreviewCollectionInterface

    @JsName("C")
    public fun copy(other: Any): PreviewCollectionInterface
  }
}

public open external class PreviewMeshCollectionEntry {
  @JsName("SkeletalMesh")
  public open var skeletalMesh: SkeletalMesh

  public open fun clone(): PreviewMeshCollectionEntry

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PreviewMeshCollectionEntry

    @JsName("C")
    public fun copy(other: Any): PreviewMeshCollectionEntry
  }
}

public open external class PreviewMeshCollection(
  outer: UObject,
) : DataAsset {
  @JsName("Skeleton")
  public open var skeleton: Skeleton

  @JsName("SkeletalMeshes")
  public open var skeletalMeshes: Array<PreviewMeshCollectionEntry>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PreviewMeshCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PreviewMeshCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PreviewMeshCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PreviewMeshCollection

    @JsName("C")
    public fun copy(other: UObject): PreviewMeshCollection

    @JsName("C")
    public fun copy(other: Any): PreviewMeshCollection
  }
}

public open external class CollectionReference {
  @JsName("CollectionName")
  public open var collectionName: String

  public open fun clone(): CollectionReference

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CollectionReference

    @JsName("C")
    public fun copy(other: Any): CollectionReference
  }
}

public open external class PrimaryAssetLabel(
  outer: UObject,
) : PrimaryDataAsset {
  @JsName("Rules")
  public open var rules: PrimaryAssetRules

  @JsName("bLabelAssetsInMyDirectory")
  public open var labelAssetsInMyDirectory: Boolean

  @JsName("bIsRuntimeLabel")
  public open var isRuntimeLabel: Boolean

  @JsName("ExplicitAssets")
  public open var explicitAssets: Array<UObject>

  @JsName("ExplicitBlueprints")
  public open var explicitBlueprints: Array<Class>

  @JsName("AssetCollection")
  public open var assetCollection: CollectionReference

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PrimaryAssetLabel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PrimaryAssetLabel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PrimaryAssetLabel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PrimaryAssetLabel

    @JsName("C")
    public fun copy(other: UObject): PrimaryAssetLabel

    @JsName("C")
    public fun copy(other: Any): PrimaryAssetLabel
  }
}

public open external class ProjectileMovementComponent(
  outer: UObject,
) : MovementComponent {
  @JsName("InitialSpeed")
  public open var initialSpeed: Number

  @JsName("MaxSpeed")
  public open var maxSpeed: Number

  @JsName("bRotationFollowsVelocity")
  public open var rotationFollowsVelocity: Boolean

  @JsName("bRotationRemainsVertical")
  public open var rotationRemainsVertical: Boolean

  @JsName("bShouldBounce")
  public open var shouldBounce: Boolean

  @JsName("bInitialVelocityInLocalSpace")
  public open var initialVelocityInLocalSpace: Boolean

  @JsName("bForceSubStepping")
  public open var forceSubStepping: Boolean

  @JsName("bSimulationEnabled")
  public open var simulationEnabled: Boolean

  @JsName("bSweepCollision")
  public open var sweepCollision: Boolean

  @JsName("bIsHomingProjectile")
  public open var isHomingProjectile: Boolean

  @JsName("bBounceAngleAffectsFriction")
  public open var bounceAngleAffectsFriction: Boolean

  @JsName("bIsSliding")
  public open var isSliding: Boolean

  @JsName("bInterpMovement")
  public open var interpMovement: Boolean

  @JsName("bInterpRotation")
  public open var interpRotation: Boolean

  @JsName("PreviousHitTime")
  public open var previousHitTime: Number

  @JsName("PreviousHitNormal")
  public open var previousHitNormal: Vector

  @JsName("ProjectileGravityScale")
  public open var projectileGravityScale: Number

  @JsName("Buoyancy")
  public open var buoyancy: Number

  @JsName("Bounciness")
  public open var bounciness: Number

  @JsName("Friction")
  public open var friction: Number

  @JsName("BounceVelocityStopSimulatingThreshold")
  public open var bounceVelocityStopSimulatingThreshold: Number

  @JsName("MinFrictionFraction")
  public open var minFrictionFraction: Number

  @JsName("OnProjectileBounce")
  public open var onProjectileBounce: UnrealEngineMulticastDelegate<(ImpactResult: HitResult,
      ImpactVelocity: Vector) -> Unit>

  @JsName("OnProjectileStop")
  public open var onProjectileStop: UnrealEngineMulticastDelegate<(ImpactResult: HitResult) -> Unit>

  @JsName("HomingAccelerationMagnitude")
  public open var homingAccelerationMagnitude: Number

  @JsName("HomingTargetComponent")
  public open var homingTargetComponent: Any

  @JsName("MaxSimulationTimeStep")
  public open var maxSimulationTimeStep: Number

  @JsName("MaxSimulationIterations")
  public open var maxSimulationIterations: Number

  @JsName("BounceAdditionalIterations")
  public open var bounceAdditionalIterations: Number

  @JsName("InterpLocationTime")
  public open var interpLocationTime: Number

  @JsName("InterpRotationTime")
  public open var interpRotationTime: Number

  @JsName("InterpLocationMaxLagDistance")
  public open var interpLocationMaxLagDistance: Number

  @JsName("InterpLocationSnapToTargetDistance")
  public open var interpLocationSnapToTargetDistance: Number

  @JsName("StopSimulating")
  public open fun stopSimulating(hitResult: HitResult): Unit

  @JsName("SetVelocityInLocalSpace")
  public open fun setVelocityInLocalSpace(newVelocity: Vector): Unit

  @JsName("SetInterpolatedComponent")
  public open fun setInterpolatedComponent(component: SceneComponent): Unit

  @JsName("ResetInterpolation")
  public open fun resetInterpolation(): Unit

  @JsName("MoveInterpolationTarget")
  public open fun moveInterpolationTarget(newLocation: Vector, newRotation: Rotator): Unit

  @JsName("LimitVelocity")
  public open fun limitVelocity(newVelocity: Vector): Vector

  @JsName("IsVelocityUnderSimulationThreshold")
  public open fun isVelocityUnderSimulationThreshold(): Boolean

  @JsName("IsInterpolationComplete")
  public open fun isInterpolationComplete(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ProjectileMovementComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ProjectileMovementComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ProjectileMovementComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ProjectileMovementComponent

    @JsName("C")
    public fun copy(other: UObject): ProjectileMovementComponent

    @JsName("C")
    public fun copy(other: Any): ProjectileMovementComponent
  }
}

@JsName("ProxyLODMeshSimplificationSettings")
public open external class ProxyLodMeshSimplificationSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("ProxyLODMeshReductionModuleName")
  public open var proxyLodMeshReductionModuleName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ProxyLodMeshSimplificationSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ProxyLodMeshSimplificationSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ProxyLodMeshSimplificationSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ProxyLodMeshSimplificationSettings

    @JsName("C")
    public fun copy(other: UObject): ProxyLodMeshSimplificationSettings

    @JsName("C")
    public fun copy(other: Any): ProxyLodMeshSimplificationSettings
  }
}

public open external class RadialForceComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("Radius")
  public open var radius: Number

  @JsName("Falloff")
  public open var falloff: String

  @JsName("ImpulseStrength")
  public open var impulseStrength: Number

  @JsName("bImpulseVelChange")
  public open var impulseVelChange: Boolean

  @JsName("bIgnoreOwningActor")
  public open var ignoreOwningActor: Boolean

  @JsName("ForceStrength")
  public open var forceStrength: Number

  @JsName("DestructibleDamage")
  public open var destructibleDamage: Number

  @JsName("ObjectTypesToAffect")
  public open var objectTypesToAffect: Array<String>

  @JsName("RemoveObjectTypeToAffect")
  public open fun removeObjectTypeToAffect(objectType: String): Unit

  @JsName("FireImpulse")
  public open fun fireImpulse(): Unit

  @JsName("AddObjectTypeToAffect")
  public open fun addObjectTypeToAffect(objectType: String): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RadialForceComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RadialForceComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RadialForceComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RadialForceComponent

    @JsName("C")
    public fun copy(other: UObject): RadialForceComponent

    @JsName("C")
    public fun copy(other: Any): RadialForceComponent
  }
}

public open external class RadialForceActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : RigidBodyBase {
  @JsName("ForceComponent")
  public open var forceComponent: RadialForceComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("ToggleForce")
  public open fun toggleForce(): Unit

  @JsName("FireImpulse")
  public open fun fireImpulse(): Unit

  @JsName("EnableForce")
  public open fun enableForce(): Unit

  @JsName("DisableForce")
  public open fun disableForce(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RadialForceActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RadialForceActor

    @JsName("C")
    public fun copy(other: UObject): RadialForceActor

    @JsName("C")
    public fun copy(other: Any): RadialForceActor
  }
}

public open external class RectLightComponent(
  outer: UObject,
) : LocalLightComponent {
  @JsName("SourceWidth")
  public open var sourceWidth: Number

  @JsName("SourceHeight")
  public open var sourceHeight: Number

  @JsName("BarnDoorAngle")
  public open var barnDoorAngle: Number

  @JsName("BarnDoorLength")
  public open var barnDoorLength: Number

  @JsName("SourceTexture")
  public open var sourceTexture: Texture

  @JsName("SetSourceWidth")
  public open fun setSourceWidth(newValue: Number): Unit

  @JsName("SetSourceTexture")
  public open fun setSourceTexture(newValue: Texture): Unit

  @JsName("SetSourceHeight")
  public open fun setSourceHeight(newValue: Number): Unit

  @JsName("SetBarnDoorLength")
  public open fun setBarnDoorLength(newValue: Number): Unit

  @JsName("SetBarnDoorAngle")
  public open fun setBarnDoorAngle(newValue: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RectLightComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RectLightComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RectLightComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RectLightComponent

    @JsName("C")
    public fun copy(other: UObject): RectLightComponent

    @JsName("C")
    public fun copy(other: Any): RectLightComponent
  }
}

public open external class RectLight(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Light {
  @JsName("RectLightComponent")
  public open var rectLightComponent: RectLightComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RectLight

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RectLight

    @JsName("C")
    public fun copy(other: UObject): RectLight

    @JsName("C")
    public fun copy(other: Any): RectLight
  }
}

@JsName("EMobileAntiAliasingMethod")
public external object MobileAntiAliasingMethod {
  public var None: String

  public var FXAA: String

  @JsName("TemporalAA")
  public var TemporalAa: String

  public var MSAA: String

  @JsName("EMobileAntiAliasingMethod_MAX")
  public var Max: String
}

@JsName("EMobileFloatPrecisionMode")
public external object MobileFloatPrecisionMode {
  public var Half: String

  @JsName("Full_MaterialExpressionOnly")
  public var FullMaterialExpressionOnly: String

  public var Full: String

  @JsName("EMobileFloatPrecisionMode_MAX")
  public var Max: String
}

@JsName("EShaderCompressionFormat")
public external object ShaderCompressionFormat {
  public var None: String

  @JsName("LZ4")
  public var Lz4: String

  public var Oodle: String

  public var Zlib: String

  @JsName("EShaderCompressionFormat_MAX")
  public var Max: String
}

@JsName("EWorkingColorSpace")
public external object WorkingColorSpace {
  @JsName("sRGB")
  public var SRgb: String

  public var Rec2020: String

  @JsName("ACESAP0")
  public var Acesap0: String

  @JsName("ACESAP1")
  public var Acesap1: String

  @JsName("P3DCI")
  public var P3dci: String

  @JsName("P3D65")
  public var P3d65: String

  public var Custom: String

  @JsName("EWorkingColorSpace_MAX")
  public var Max: String
}

@JsName("ELumenRayLightingMode")
public external object LumenRayLightingMode {
  public var SurfaceCache: String

  public var HitLighting: String

  @JsName("ELumenRayLightingMode_MAX")
  public var Max: String
}

@JsName("ELumenSoftwareTracingMode")
public external object LumenSoftwareTracingMode {
  public var DetailTracing: String

  public var GlobalTracing: String

  @JsName("ELumenSoftwareTracingMode_MAX")
  public var Max: String
}

@JsName("EShadowMapMethod")
public external object ShadowMapMethod {
  public var ShadowMaps: String

  public var VirtualShadowMaps: String

  @JsName("EShadowMapMethod_MAX")
  public var Max: String
}

@JsName("ETranslucentSortPolicy")
public external object TranslucentSortPolicy {
  @JsName("SortByDistance")
  public var ByDistance: String

  @JsName("SortByProjectedZ")
  public var ByProjectedZ: String

  @JsName("SortAlongAxis")
  public var AlongAxis: String

  @JsName("ETranslucentSortPolicy_MAX")
  public var Max: String
}

@JsName("EFixedFoveationLevels")
public external object FixedFoveationLevels {
  public var Disabled: String

  public var Low: String

  public var Medium: String

  public var High: String

  public var HighTop: String

  @JsName("EFixedFoveationLevels_MAX")
  public var Max: String
}

@JsName("ECustomDepthStencil")
public external object CustomDepthStencil {
  public var Disabled: String

  public var Enabled: String

  public var EnabledOnDemand: String

  public var EnabledWithStencil: String

  @JsName("ECustomDepthStencil_MAX")
  public var Max: String
}

@JsName("EAlphaChannelMode")
public external object AlphaChannelMode {
  public var Disabled: String

  public var LinearColorSpaceOnly: String

  public var AllowThroughTonemapper: String

  @JsName("EAlphaChannelMode_MAX")
  public var Max: String
}

@JsName("EAutoExposureMethodUI")
public external object AutoExposureMethodUI {
  @JsName("AEM_Histogram")
  public var Histogram: String

  @JsName("AEM_Basic")
  public var Basic: String

  @JsName("AEM_Manual")
  public var Manual: String

  @JsName("AEM_MAX")
  public var Max: String
}

@JsName("EAntiAliasingMethod")
public external object AntiAliasingMethod {
  @JsName("AAM_None")
  public var None: String

  @JsName("AAM_FXAA")
  public var FXAA: String

  @JsName("AAM_TemporalAA")
  public var TemporalAa: String

  @JsName("AAM_MSAA")
  public var MSAA: String

  @JsName("AAM_TSR")
  public var TSR: String

  @JsName("AAM_MAX")
  public var Max: String
}

@JsName("ECompositingSampleCount")
public external object CompositingSampleCount {
  public var One: String

  public var Two: String

  public var Four: String

  public var Eight: String

  @JsName("ECompositingSampleCount_MAX")
  public var Max: String
}

@JsName("EDefaultBackBufferPixelFormat")
public external object DefaultBackBufferPixelFormat {
  @JsName("DBBPF_B8G8R8A8")
  public var B8g8r8a8: String

  @JsName("DBBPF_A16B16G16R16_DEPRECATED")
  public var A16b16g16r16deprecated: String

  @JsName("DBBPF_FloatRGB_DEPRECATED")
  public var FloatRgbdeprecated: String

  @JsName("DBBPF_FloatRGBA")
  public var FloatRgba: String

  @JsName("DBBPF_A2B10G10R10")
  public var A2b10g10r10: String

  @JsName("DBBPF_MAX")
  public var Max: String
}

@JsName("EEarlyZPass")
public external object EarlyZPass {
  public var None: String

  public var OpaqueOnly: String

  public var OpaqueAndMasked: String

  public var Auto: String

  @JsName("EEarlyZPass_MAX")
  public var Max: String
}

@JsName("EClearSceneOptions")
public external object ClearSceneOptions {
  public var NoClear: String

  public var HardwareClear: String

  public var QuadAtMaxZ: String

  @JsName("EClearSceneOptions_MAX")
  public var Max: String
}

@JsName("EVelocityOutputPass")
public external object VelocityOutputPass {
  public var DepthPass: String

  public var BasePass: String

  public var AfterBasePass: String

  @JsName("EVelocityOutputPass_MAX")
  public var Max: String
}

@JsName("EVertexDeformationOutputsVelocity")
public external object VertexDeformationOutputsVelocity {
  public var Off: String

  public var On: String

  public var Auto: String

  @JsName("EVertexDeformationOutputsVelocity_MAX")
  public var Max: String
}

@JsName("EGBufferFormat")
public external object GBufferFormat {
  public var Force8BitsPerChannel: String

  public var Default: String

  public var HighPrecisionNormals: String

  public var Force16BitsPerChannel: String

  @JsName("EGBufferFormat_MAX")
  public var Max: String
}

@JsName("ESkinCacheDefaultBehavior")
public external object SkinCacheDefaultBehavior {
  public var Exclusive: String

  public var Inclusive: String

  @JsName("ESkinCacheDefaultBehavior_MAX")
  public var Max: String
}

@JsName("EMobilePlanarReflectionMode")
public external object MobilePlanarReflectionMode {
  public var Usual: String

  @JsName("MobilePPRExclusive")
  public var MobilePprExclusive: String

  @JsName("MobilePPR")
  public var MobilePpr: String

  @JsName("EMobilePlanarReflectionMode_MAX")
  public var Max: String
}

public open external class RendererSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bMobileDisableVertexFog")
  public open var mobileDisableVertexFog: Boolean

  @JsName("MaxMobileCascades")
  public open var maxMobileCascades: Number

  @JsName("MobileAntiAliasing")
  public open var mobileAntiAliasing: String

  @JsName("MobileFloatPrecisionMode")
  public open var mobileFloatPrecisionMode: String

  @JsName("bMobileAllowDitheredLODTransition")
  public open var mobileAllowDitheredLodTransition: Boolean

  @JsName("bMobileVirtualTextures")
  public open var mobileVirtualTextures: Boolean

  @JsName("bReflectionCaptureCompression")
  public open var reflectionCaptureCompression: Boolean

  @JsName("bDiscardUnusedQualityLevels")
  public open var discardUnusedQualityLevels: Boolean

  @JsName("ShaderCompressionFormat")
  public open var shaderCompressionFormat: String

  @JsName("bOcclusionCulling")
  public open var occlusionCulling: Boolean

  @JsName("MinScreenRadiusForLights")
  public open var minScreenRadiusForLights: Number

  @JsName("MinScreenRadiusForEarlyZPass")
  public open var minScreenRadiusForEarlyZPass: Number

  @JsName("MinScreenRadiusForCSMdepth")
  public open var minScreenRadiusForCsMdepth: Number

  @JsName("bPrecomputedVisibilityWarning")
  public open var precomputedVisibilityWarning: Boolean

  @JsName("bTextureStreaming")
  public open var textureStreaming: Boolean

  @JsName("bUseDXT5NormalMaps")
  public open var useDxt5NormalMaps: Boolean

  @JsName("bVirtualTextures")
  public open var virtualTextures: Boolean

  @JsName("bVirtualTextureEnableAutoImport")
  public open var virtualTextureEnableAutoImport: Boolean

  @JsName("bVirtualTexturedLightmaps")
  public open var virtualTexturedLightmaps: Boolean

  @JsName("bVirtualTextureAnisotropicFiltering")
  public open var virtualTextureAnisotropicFiltering: Boolean

  @JsName("VirtualTextureTileSize")
  public open var virtualTextureTileSize: Any

  @JsName("VirtualTextureTileBorderSize")
  public open var virtualTextureTileBorderSize: Any

  @JsName("VirtualTextureFeedbackFactor")
  public open var virtualTextureFeedbackFactor: Any

  @JsName("WorkingColorSpaceChoice")
  public open var workingColorSpaceChoice: String

  @JsName("RedChromaticityCoordinate")
  public open var redChromaticityCoordinate: Vector2d

  @JsName("GreenChromaticityCoordinate")
  public open var greenChromaticityCoordinate: Vector2d

  @JsName("BlueChromaticityCoordinate")
  public open var blueChromaticityCoordinate: Vector2d

  @JsName("WhiteChromaticityCoordinate")
  public open var whiteChromaticityCoordinate: Vector2d

  @JsName("bClearCoatEnableSecondNormal")
  public open var clearCoatEnableSecondNormal: Boolean

  @JsName("DynamicGlobalIllumination")
  public open var dynamicGlobalIllumination: String

  @JsName("Reflections")
  public open var reflections: String

  @JsName("ReflectionCaptureResolution")
  public open var reflectionCaptureResolution: Number

  @JsName("ReflectionEnvironmentLightmapMixBasedOnRoughness")
  public open var reflectionEnvironmentLightmapMixBasedOnRoughness: Boolean

  @JsName("bUseHardwareRayTracingForLumen")
  public open var useHardwareRayTracingForLumen: Boolean

  @JsName("LumenRayLightingMode")
  public open var lumenRayLightingMode: String

  @JsName("LumenSoftwareTracingMode")
  public open var lumenSoftwareTracingMode: String

  @JsName("ShadowMapMethod")
  public open var shadowMapMethod: String

  @JsName("bEnableRayTracing")
  public open var enableRayTracing: Boolean

  @JsName("bEnableRayTracingShadows")
  public open var enableRayTracingShadows: Boolean

  @JsName("bEnableRayTracingSkylight")
  public open var enableRayTracingSkylight: Boolean

  @JsName("bEnableRayTracingTextureLOD")
  public open var enableRayTracingTextureLod: Boolean

  @JsName("bEnablePathTracing")
  public open var enablePathTracing: Boolean

  @JsName("bGenerateMeshDistanceFields")
  public open var generateMeshDistanceFields: Boolean

  @JsName("DistanceFieldVoxelDensity")
  public open var distanceFieldVoxelDensity: Number

  @JsName("bAllowStaticLighting")
  public open var allowStaticLighting: Boolean

  @JsName("bUseNormalMapsForStaticLighting")
  public open var useNormalMapsForStaticLighting: Boolean

  @JsName("bForwardShading")
  public open var forwardShading: Boolean

  @JsName("bVertexFoggingForOpaque")
  public open var vertexFoggingForOpaque: Boolean

  @JsName("bSeparateTranslucency")
  public open var separateTranslucency: Boolean

  @JsName("TranslucentSortPolicy")
  public open var translucentSortPolicy: String

  @JsName("TranslucentSortAxis")
  public open var translucentSortAxis: Vector

  @JsName("HMDFixedFoveationLevel")
  public open var hmdFixedFoveationLevel: String

  @JsName("bHMDFixedFoveationDynamic")
  public open var hmdFixedFoveationDynamic: Boolean

  @JsName("CustomDepthStencil")
  public open var customDepthStencil: String

  @JsName("bCustomDepthTaaJitter")
  public open var customDepthTaaJitter: Boolean

  @JsName("bEnableAlphaChannelInPostProcessing")
  public open var enableAlphaChannelInPostProcessing: String

  @JsName("bDefaultFeatureBloom")
  public open var defaultFeatureBloom: Boolean

  @JsName("bDefaultFeatureAmbientOcclusion")
  public open var defaultFeatureAmbientOcclusion: Boolean

  @JsName("bDefaultFeatureAmbientOcclusionStaticFraction")
  public open var defaultFeatureAmbientOcclusionStaticFraction: Boolean

  @JsName("bDefaultFeatureAutoExposure")
  public open var useDefaultFeatureAutoExposure: Boolean

  @JsName("DefaultFeatureAutoExposure")
  public open var defaultFeatureAutoExposure: String

  @JsName("DefaultFeatureAutoExposureBias")
  public open var defaultFeatureAutoExposureBias: Number

  @JsName("bExtendDefaultLuminanceRangeInAutoExposureSettings")
  public open var extendDefaultLuminanceRangeInAutoExposureSettings: Boolean

  @JsName("bDefaultFeatureMotionBlur")
  public open var defaultFeatureMotionBlur: Boolean

  @JsName("bDefaultFeatureLensFlare")
  public open var defaultFeatureLensFlare: Boolean

  @JsName("bTemporalUpsampling")
  public open var temporalUpsampling: Boolean

  @JsName("DefaultFeatureAntiAliasing")
  public open var defaultFeatureAntiAliasing: String

  @JsName("MSAASampleCount")
  public open var msaaSampleCount: String

  @JsName("DefaultLightUnits")
  public open var defaultLightUnits: String

  @JsName("DefaultBackBufferPixelFormat")
  public open var defaultBackBufferPixelFormat: String

  @JsName("bRenderUnbuiltPreviewShadowsInGame")
  public open var renderUnbuiltPreviewShadowsInGame: Boolean

  @JsName("bStencilForLODDither")
  public open var stencilForLodDither: Boolean

  @JsName("EarlyZPass")
  public open var earlyZPass: String

  @JsName("bEarlyZPassOnlyMaterialMasking")
  public open var earlyZPassOnlyMaterialMasking: Boolean

  @JsName("bEnableCSMCaching")
  public open var enableCsmCaching: Boolean

  @JsName("bDBuffer")
  public open var dBuffer: Boolean

  @JsName("ClearSceneMethod")
  public open var clearSceneMethod: String

  @JsName("VelocityPass")
  public open var velocityPass: String

  @JsName("VertexDeformationOutputsVelocity")
  public open var vertexDeformationOutputsVelocity: String

  @JsName("bSelectiveBasePassOutputs")
  public open var selectiveBasePassOutputs: Boolean

  @JsName("bDefaultParticleCutouts")
  public open var defaultParticleCutouts: Boolean

  @JsName("GPUSimulationTextureSizeX")
  public open var gpuSimulationTextureSizeX: Number

  @JsName("GPUSimulationTextureSizeY")
  public open var gpuSimulationTextureSizeY: Number

  @JsName("bGlobalClipPlane")
  public open var globalClipPlane: Boolean

  @JsName("GBufferFormat")
  public open var gBufferFormat: String

  @JsName("bUseGPUMorphTargets")
  public open var useGpuMorphTargets: Boolean

  @JsName("bNvidiaAftermathEnabled")
  public open var nvidiaAftermathEnabled: Boolean

  @JsName("bMultiView")
  public open var multiView: Boolean

  @JsName("bMobilePostProcessing")
  public open var mobilePostProcessing: Boolean

  @JsName("bMobileMultiView")
  public open var mobileMultiView: Boolean

  @JsName("bMobileUseHWsRGBEncoding")
  public open var mobileUseHWsRgbEncoding: Boolean

  @JsName("bRoundRobinOcclusion")
  public open var roundRobinOcclusion: Boolean

  @JsName("bODSCapture")
  public open var odsCapture: Boolean

  @JsName("bMeshStreaming")
  public open var meshStreaming: Boolean

  @JsName("WireframeCullThreshold")
  public open var wireframeCullThreshold: Number

  @JsName("bSupportStationarySkylight")
  public open var supportStationarySkylight: Boolean

  @JsName("bSupportLowQualityLightmaps")
  public open var supportLowQualityLightmaps: Boolean

  @JsName("bSupportPointLightWholeSceneShadows")
  public open var supportPointLightWholeSceneShadows: Boolean

  @JsName("bSupportSkyAtmosphere")
  public open var supportSkyAtmosphere: Boolean

  @JsName("bSupportSkyAtmosphereAffectsHeightFog")
  public open var supportSkyAtmosphereAffectsHeightFog: Boolean

  @JsName("bSupportCloudShadowOnForwardLitTranslucent")
  public open var supportCloudShadowOnForwardLitTranslucent: Boolean

  @JsName("bMaterialRoughDiffuse")
  public open var materialRoughDiffuse: Boolean

  @JsName("bMaterialEnergyConservation")
  public open var materialEnergyConservation: Boolean

  @JsName("bSupportSkinCacheShaders")
  public open var supportSkinCacheShaders: Boolean

  @JsName("DefaultSkinCacheBehavior")
  public open var defaultSkinCacheBehavior: String

  @JsName("SkinCacheSceneMemoryLimitInMB")
  public open var skinCacheSceneMemoryLimitInMb: Number

  @JsName("bMobileEnableStaticAndCSMShadowReceivers")
  public open var mobileEnableStaticAndCsmShadowReceivers: Boolean

  @JsName("bMobileEnableMovableLightCSMShaderCulling")
  public open var mobileEnableMovableLightCsmShaderCulling: Boolean

  @JsName("bMobileEnableNoPrecomputedLightingCSMShader")
  public open var mobileEnableNoPrecomputedLightingCsmShader: Boolean

  @JsName("bMobileAllowDistanceFieldShadows")
  public open var mobileAllowDistanceFieldShadows: Boolean

  @JsName("bMobileAllowMovableDirectionalLights")
  public open var mobileAllowMovableDirectionalLights: Boolean

  @JsName("MobileNumDynamicPointLights")
  public open var mobileNumDynamicPointLights: Any

  @JsName("bMobileAllowMovableSpotlights")
  public open var mobileAllowMovableSpotlights: Boolean

  @JsName("bMobileAllowMovableSpotlightShadows")
  public open var mobileAllowMovableSpotlightShadows: Boolean

  @JsName("bSupport16BitBoneIndex")
  public open var support16BitBoneIndex: Boolean

  @JsName("bGPUSkinLimit2BoneInfluences")
  public open var gpuSkinLimit2BoneInfluences: Boolean

  @JsName("bSupportDepthOnlyIndexBuffers")
  public open var supportDepthOnlyIndexBuffers: Boolean

  @JsName("bSupportReversedIndexBuffers")
  public open var supportReversedIndexBuffers: Boolean

  @JsName("bMobileAmbientOcclusion")
  public open var mobileAmbientOcclusion: Boolean

  @JsName("bUseUnlimitedBoneInfluences")
  public open var useUnlimitedBoneInfluences: Boolean

  @JsName("UnlimitedBonInfluencesThreshold")
  public open var unlimitedBonInfluencesThreshold: Number

  @JsName("MaxSkinBones")
  public open var maxSkinBones: PerPlatformInt

  @JsName("MobilePlanarReflectionMode")
  public open var mobilePlanarReflectionMode: String

  @JsName("bMobileSupportsGen4TAA")
  public open var mobileSupportsGen4taa: Boolean

  @JsName("bStreamSkeletalMeshLODs")
  public open var streamSkeletalMeshLoDs: PerPlatformBool

  @JsName("bDiscardSkeletalMeshOptionalLODs")
  public open var discardSkeletalMeshOptionalLoDs: PerPlatformBool

  @JsName("VisualizeCalibrationColorMaterialPath")
  public open var visualizeCalibrationColorMaterialPath: SoftObjectPath

  @JsName("VisualizeCalibrationCustomMaterialPath")
  public open var visualizeCalibrationCustomMaterialPath: SoftObjectPath

  @JsName("VisualizeCalibrationGrayscaleMaterialPath")
  public open var visualizeCalibrationGrayscaleMaterialPath: SoftObjectPath

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RendererSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RendererSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RendererSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RendererSettings

    @JsName("C")
    public fun copy(other: UObject): RendererSettings

    @JsName("C")
    public fun copy(other: Any): RendererSettings
  }
}

public open external class RendererOverrideSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bSupportAllShaderPermutations")
  public open var supportAllShaderPermutations: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RendererOverrideSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RendererOverrideSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RendererOverrideSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RendererOverrideSettings

    @JsName("C")
    public fun copy(other: UObject): RendererOverrideSettings

    @JsName("C")
    public fun copy(other: Any): RendererOverrideSettings
  }
}

public open external class ReplayNetConnection(
  outer: UObject,
) : NetConnection {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReplayNetConnection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReplayNetConnection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReplayNetConnection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReplayNetConnection

    @JsName("C")
    public fun copy(other: UObject): ReplayNetConnection

    @JsName("C")
    public fun copy(other: Any): ReplayNetConnection
  }
}

public open external class ReplaySubsystem(
  outer: UObject,
) : GameInstanceSubsystem {
  @JsName("bLoadDefaultMapOnStop")
  public open var loadDefaultMapOnStop: Boolean

  @JsName("RequestCheckpoint")
  public open fun requestCheckpoint(): Unit

  @JsName("IsRecording")
  public open fun isRecording(): Boolean

  @JsName("IsPlaying")
  public open fun isPlaying(): Boolean

  @JsName("GetReplayCurrentTime")
  public open fun getReplayCurrentTime(): Number

  @JsName("GetActiveReplayName")
  public open fun getActiveReplayName(): String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReplaySubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReplaySubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReplaySubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReplaySubsystem

    @JsName("C")
    public fun copy(other: UObject): ReplaySubsystem

    @JsName("C")
    public fun copy(other: Any): ReplaySubsystem
  }
}

public open external class ReplicationConnectionDriver(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReplicationConnectionDriver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReplicationConnectionDriver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReplicationConnectionDriver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReplicationConnectionDriver

    @JsName("C")
    public fun copy(other: UObject): ReplicationConnectionDriver

    @JsName("C")
    public fun copy(other: Any): ReplicationConnectionDriver
  }
}

public open external class RotatingMovementComponent(
  outer: UObject,
) : MovementComponent {
  @JsName("RotationRate")
  public open var rotationRate: Rotator

  @JsName("PivotTranslation")
  public open var pivotTranslation: Vector

  @JsName("bRotationInLocalSpace")
  public open var rotationInLocalSpace: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RotatingMovementComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RotatingMovementComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RotatingMovementComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RotatingMovementComponent

    @JsName("C")
    public fun copy(other: UObject): RotatingMovementComponent

    @JsName("C")
    public fun copy(other: Any): RotatingMovementComponent
  }
}

@JsName("RPCAnalyticsThreshold")
public open external class RpcAnalyticsThreshold {
  public open var RPC: String

  @JsName("CountPerSec")
  public open var countPerSec: Number

  @JsName("TimePerSec")
  public open var timePerSec: Any

  public open fun clone(): RpcAnalyticsThreshold

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): RpcAnalyticsThreshold

    @JsName("C")
    public fun copy(other: Any): RpcAnalyticsThreshold
  }
}

@JsName("RPCDoSDetectionConfig")
public open external class RpcDoSDetectionConfig(
  outer: UObject,
) : UObject {
  @JsName("bRPCDoSDetection")
  public open var rpcDoSDetection: Boolean

  @JsName("bRPCDoSAnalytics")
  public open var rpcDoSAnalytics: Boolean

  @JsName("HitchTimeQuotaMS")
  public open var hitchTimeQuotaMs: Number

  @JsName("HitchSuspendDetectionTimeMS")
  public open var hitchSuspendDetectionTimeMs: Number

  @JsName("DetectionSeverity")
  public open var detectionSeverity: Array<String>

  @JsName("InitialConnectToleranceMS")
  public open var initialConnectToleranceMs: Number

  @JsName("RPCBlockWhitelist")
  public open var rpcBlockWhitelist: Array<String>

  @JsName("RPCAnalyticsThresholds")
  public open var rpcAnalyticsThresholds: Array<RpcAnalyticsThreshold>

  @JsName("RPCAnalyticsOverrideChance")
  public open var rpcAnalyticsOverrideChance: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RpcDoSDetectionConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RpcDoSDetectionConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RpcDoSDetectionConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RpcDoSDetectionConfig

    @JsName("C")
    public fun copy(other: UObject): RpcDoSDetectionConfig

    @JsName("C")
    public fun copy(other: Any): RpcDoSDetectionConfig
  }
}

public open external class RuntimeOptionsBase(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RuntimeOptionsBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RuntimeOptionsBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RuntimeOptionsBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RuntimeOptionsBase

    @JsName("C")
    public fun copy(other: UObject): RuntimeOptionsBase

    @JsName("C")
    public fun copy(other: Any): RuntimeOptionsBase
  }
}

public open external class VirtualTextureBuildSettings {
  @JsName("TileSize")
  public open var tileSize: Number

  @JsName("TileBorderSize")
  public open var tileBorderSize: Number

  @JsName("bEnableCompressCrunch")
  public open var enableCompressCrunch: Boolean

  @JsName("bEnableCompressZlib")
  public open var enableCompressZlib: Boolean

  public open fun clone(): VirtualTextureBuildSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): VirtualTextureBuildSettings

    @JsName("C")
    public fun copy(other: Any): VirtualTextureBuildSettings
  }
}

@JsName("VirtualTexture2D")
public open external class VirtualTexture2d(
  outer: UObject,
) : Texture2d {
  @JsName("Settings")
  public open var settings: VirtualTextureBuildSettings

  @JsName("bContinuousUpdate")
  public open var continuousUpdate: Boolean

  @JsName("bSinglePhysicalSpace")
  public open var singlePhysicalSpace: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VirtualTexture2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VirtualTexture2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VirtualTexture2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VirtualTexture2d

    @JsName("C")
    public fun copy(other: UObject): VirtualTexture2d

    @JsName("C")
    public fun copy(other: Any): VirtualTexture2d
  }
}

public open external class VirtualTextureBuilder(
  outer: UObject,
) : UObject {
  @JsName("Texture")
  public open var texture: VirtualTexture2d

  @JsName("BuildHash")
  public open var buildHash: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VirtualTextureBuilder

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VirtualTextureBuilder

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VirtualTextureBuilder

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VirtualTextureBuilder

    @JsName("C")
    public fun copy(other: UObject): VirtualTextureBuilder

    @JsName("C")
    public fun copy(other: Any): VirtualTextureBuilder
  }
}

public open external class RuntimeVirtualTextureComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("BoundsAlignActor")
  public open var boundsAlignActor: Actor

  @JsName("bSetBoundsButton")
  public open var setBoundsButton: Boolean

  @JsName("bSnapBoundsToLandscape")
  public open var snapBoundsToLandscape: Boolean

  @JsName("VirtualTexture")
  public open var virtualTexture: RuntimeVirtualTexture

  @JsName("bEnableScalability")
  public open var enableScalability: Boolean

  @JsName("ScalabilityGroup")
  public open var scalabilityGroup: Any

  @JsName("bHidePrimitives")
  public open var hidePrimitives: Boolean

  @JsName("StreamingTexture")
  public open var streamingTexture: VirtualTextureBuilder

  @JsName("StreamLowMips")
  public open var streamLowMips: Number

  @JsName("bBuildStreamingMipsButton")
  public open var buildStreamingMipsButton: Boolean

  @JsName("bUseStreamingLowMipsInEditor")
  public open var useStreamingLowMipsInEditor: Boolean

  @JsName("bEnableCompressCrunch")
  public open var enableCompressCrunch: Boolean

  @JsName("bBuildDebugStreamingMips")
  public open var buildDebugStreamingMips: Boolean

  @JsName("Invalidate")
  public open fun invalidate(worldBounds: BoxSphereBounds): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RuntimeVirtualTextureComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RuntimeVirtualTextureComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RuntimeVirtualTextureComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RuntimeVirtualTextureComponent

    @JsName("C")
    public fun copy(other: UObject): RuntimeVirtualTextureComponent

    @JsName("C")
    public fun copy(other: Any): RuntimeVirtualTextureComponent
  }
}

public open external class RuntimeVirtualTextureVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("VirtualTextureComponent")
  public open var virtualTextureComponent: RuntimeVirtualTextureComponent

  @JsName("Box")
  public open var box: BoxComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RuntimeVirtualTextureVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RuntimeVirtualTextureVolume

    @JsName("C")
    public fun copy(other: UObject): RuntimeVirtualTextureVolume

    @JsName("C")
    public fun copy(other: Any): RuntimeVirtualTextureVolume
  }
}

@JsName("RVOAvoidanceInterface")
public open external class RvoAvoidanceInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RvoAvoidanceInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RvoAvoidanceInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RvoAvoidanceInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RvoAvoidanceInterface

    @JsName("C")
    public fun copy(other: UObject): RvoAvoidanceInterface

    @JsName("C")
    public fun copy(other: Any): RvoAvoidanceInterface
  }
}

public open external class Scene(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): Scene

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): Scene

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Scene

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Scene

    @JsName("C")
    public fun copy(other: UObject): Scene

    @JsName("C")
    public fun copy(other: Any): Scene
  }
}

@JsName("ESceneCaptureCompositeMode")
public external object SceneCaptureCompositeMode {
  @JsName("SCCM_Overwrite")
  public var Overwrite: String

  @JsName("SCCM_Additive")
  public var Additive: String

  @JsName("SCCM_Composite")
  public var Composite: String

  @JsName("SCCM_MAX")
  public var Max: String
}

@JsName("SceneCaptureComponent2D")
public open external class SceneCaptureComponent2d(
  outer: UObject,
) : SceneCaptureComponent {
  @JsName("ProjectionType")
  public open var projectionType: String

  @JsName("FOVAngle")
  public open var fovAngle: Number

  @JsName("OrthoWidth")
  public open var orthoWidth: Number

  @JsName("TextureTarget")
  public open var textureTarget: TextureRenderTarget2d

  @JsName("CompositeMode")
  public open var compositeMode: String

  @JsName("PostProcessSettings")
  public open var postProcessSettings: PostProcessSettings

  @JsName("PostProcessBlendWeight")
  public open var postProcessBlendWeight: Number

  @JsName("bOverride_CustomNearClippingPlane")
  public open var overrideCustomNearClippingPlane: Boolean

  @JsName("CustomNearClippingPlane")
  public open var customNearClippingPlane: Number

  @JsName("bUseCustomProjectionMatrix")
  public open var useCustomProjectionMatrix: Boolean

  @JsName("CustomProjectionMatrix")
  public open var customProjectionMatrix: Matrix

  @JsName("bUseFauxOrthoViewPos")
  public open var useFauxOrthoViewPos: Boolean

  @JsName("bEnableOrthographicTiling")
  public open var enableOrthographicTiling: Boolean

  @JsName("NumXTiles")
  public open var numXTiles: Number

  @JsName("NumYTiles")
  public open var numYTiles: Number

  @JsName("bEnableClipPlane")
  public open var enableClipPlane: Boolean

  @JsName("ClipPlaneBase")
  public open var clipPlaneBase: Vector

  @JsName("ClipPlaneNormal")
  public open var clipPlaneNormal: Vector

  @JsName("bCameraCutThisFrame")
  public open var cameraCutThisFrame: Boolean

  @JsName("bConsiderUnrenderedOpaquePixelAsFullyTranslucent")
  public open var considerUnrenderedOpaquePixelAsFullyTranslucent: Boolean

  @JsName("bDisableFlipCopyGLES")
  public open var disableFlipCopyGles: Boolean

  @JsName("CaptureScene")
  public open fun captureScene(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SceneCaptureComponent2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SceneCaptureComponent2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCaptureComponent2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCaptureComponent2d

    @JsName("C")
    public fun copy(other: UObject): SceneCaptureComponent2d

    @JsName("C")
    public fun copy(other: Any): SceneCaptureComponent2d
  }
}

@JsName("SceneCapture2D")
public open external class SceneCapture2d(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : SceneCapture {
  @JsName("CaptureComponent2D")
  public open var captureComponent2d: SceneCaptureComponent2d

  @JsName("OnInterpToggle")
  public open fun onInterpToggle(enable: Boolean): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCapture2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCapture2d

    @JsName("C")
    public fun copy(other: UObject): SceneCapture2d

    @JsName("C")
    public fun copy(other: Any): SceneCapture2d
  }
}

public open external class TextureRenderTargetCube(
  outer: UObject,
) : TextureRenderTarget {
  @JsName("SizeX")
  public open var sizeX: Number

  @JsName("ClearColor")
  public open var clearColor: LinearColor

  @JsName("OverrideFormat")
  public open var overrideFormat: String

  @JsName("bHDR")
  public open var HDR: Boolean

  @JsName("bForceLinearGamma")
  public open var forceLinearGamma: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextureRenderTargetCube

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextureRenderTargetCube

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextureRenderTargetCube

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextureRenderTargetCube

    @JsName("C")
    public fun copy(other: UObject): TextureRenderTargetCube

    @JsName("C")
    public fun copy(other: Any): TextureRenderTargetCube
  }
}

public open external class SceneCaptureComponentCube(
  outer: UObject,
) : SceneCaptureComponent {
  @JsName("TextureTarget")
  public open var textureTarget: TextureRenderTargetCube

  @JsName("bCaptureRotation")
  public open var captureRotation: Boolean

  @JsName("TextureTargetLeft")
  public open var textureTargetLeft: TextureRenderTargetCube

  @JsName("TextureTargetRight")
  public open var textureTargetRight: TextureRenderTargetCube

  @JsName("TextureTargetODS")
  public open var textureTargetOds: TextureRenderTarget2d

  public open var IPD: Number

  @JsName("CaptureScene")
  public open fun captureScene(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SceneCaptureComponentCube

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SceneCaptureComponentCube

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCaptureComponentCube

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCaptureComponentCube

    @JsName("C")
    public fun copy(other: UObject): SceneCaptureComponentCube

    @JsName("C")
    public fun copy(other: Any): SceneCaptureComponentCube
  }
}

public open external class SceneCaptureCube(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : SceneCapture {
  @JsName("CaptureComponentCube")
  public open var captureComponentCube: SceneCaptureComponentCube

  @JsName("OnInterpToggle")
  public open fun onInterpToggle(enable: Boolean): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SceneCaptureCube

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SceneCaptureCube

    @JsName("C")
    public fun copy(other: UObject): SceneCaptureCube

    @JsName("C")
    public fun copy(other: Any): SceneCaptureCube
  }
}

@JsName("EShadowMapFlags")
public external object ShadowMapFlags {
  @JsName("SMF_None")
  public var None: String

  @JsName("SMF_Streamed")
  public var Streamed: String

  @JsName("SMF_MAX")
  public var Max: String
}

@JsName("ShadowMapTexture2D")
public open external class ShadowMapTexture2d(
  outer: UObject,
) : Texture2d {
  @JsName("ShadowmapFlags")
  public open var shadowmapFlags: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ShadowMapTexture2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ShadowMapTexture2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ShadowMapTexture2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ShadowMapTexture2d

    @JsName("C")
    public fun copy(other: UObject): ShadowMapTexture2d

    @JsName("C")
    public fun copy(other: Any): ShadowMapTexture2d
  }
}

public open external class SkeletalMeshSimplificationSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("SkeletalMeshReductionModuleName")
  public open var skeletalMeshReductionModuleName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SkeletalMeshSimplificationSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SkeletalMeshSimplificationSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SkeletalMeshSimplificationSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SkeletalMeshSimplificationSettings

    @JsName("C")
    public fun copy(other: UObject): SkeletalMeshSimplificationSettings

    @JsName("C")
    public fun copy(other: Any): SkeletalMeshSimplificationSettings
  }
}

public open external class SkyAtmosphere(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Info {
  @JsName("SkyAtmosphereComponent")
  public open var skyAtmosphereComponent: SkyAtmosphereComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SkyAtmosphere

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SkyAtmosphere

    @JsName("C")
    public fun copy(other: UObject): SkyAtmosphere

    @JsName("C")
    public fun copy(other: Any): SkyAtmosphere
  }
}

public open external class SlateTextureAtlasInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SlateTextureAtlasInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SlateTextureAtlasInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SlateTextureAtlasInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SlateTextureAtlasInterface

    @JsName("C")
    public fun copy(other: UObject): SlateTextureAtlasInterface

    @JsName("C")
    public fun copy(other: Any): SlateTextureAtlasInterface
  }
}

@JsName("SMInstanceElementAssetDataInterface")
public open external class SmInstanceElementAssetDataInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmInstanceElementAssetDataInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmInstanceElementAssetDataInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmInstanceElementAssetDataInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmInstanceElementAssetDataInterface

    @JsName("C")
    public fun copy(other: UObject): SmInstanceElementAssetDataInterface

    @JsName("C")
    public fun copy(other: Any): SmInstanceElementAssetDataInterface
  }
}

@JsName("SMInstanceElementHierarchyInterface")
public open external class SmInstanceElementHierarchyInterface(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmInstanceElementHierarchyInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmInstanceElementHierarchyInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmInstanceElementHierarchyInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmInstanceElementHierarchyInterface

    @JsName("C")
    public fun copy(other: UObject): SmInstanceElementHierarchyInterface

    @JsName("C")
    public fun copy(other: Any): SmInstanceElementHierarchyInterface
  }
}

@JsName("SMInstanceElementIdMapTransactor")
public open external class SmInstanceElementIdMapTransactor(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmInstanceElementIdMapTransactor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmInstanceElementIdMapTransactor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmInstanceElementIdMapTransactor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmInstanceElementIdMapTransactor

    @JsName("C")
    public fun copy(other: UObject): SmInstanceElementIdMapTransactor

    @JsName("C")
    public fun copy(other: Any): SmInstanceElementIdMapTransactor
  }
}

@JsName("SMInstanceManager")
public open external class SmInstanceManager(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmInstanceManager

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmInstanceManager

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmInstanceManager

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmInstanceManager

    @JsName("C")
    public fun copy(other: UObject): SmInstanceManager

    @JsName("C")
    public fun copy(other: Any): SmInstanceManager
  }
}

@JsName("SMInstanceManagerProvider")
public open external class SmInstanceManagerProvider(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmInstanceManagerProvider

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmInstanceManagerProvider

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmInstanceManagerProvider

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmInstanceManagerProvider

    @JsName("C")
    public fun copy(other: UObject): SmInstanceManagerProvider

    @JsName("C")
    public fun copy(other: Any): SmInstanceManagerProvider
  }
}

public open external class SmokeTestCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmokeTestCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmokeTestCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmokeTestCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmokeTestCommandlet

    @JsName("C")
    public fun copy(other: UObject): SmokeTestCommandlet

    @JsName("C")
    public fun copy(other: Any): SmokeTestCommandlet
  }
}

public open external class SoundEffectPresetWidgetInterface(
  outer: UObject,
) : AudioPanelWidgetInterface {
  @JsName("OnPropertyChanged")
  public open fun onPropertyChanged(preset: SoundEffectPreset, propertyName: String): Unit

  @JsName("OnConstructed")
  public open fun onConstructed(preset: SoundEffectPreset): Unit

  @JsName("GetClass")
  public open fun getClass(): UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundEffectPresetWidgetInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundEffectPresetWidgetInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundEffectPresetWidgetInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundEffectPresetWidgetInterface

    @JsName("C")
    public fun copy(other: UObject): SoundEffectPresetWidgetInterface

    @JsName("C")
    public fun copy(other: Any): SoundEffectPresetWidgetInterface
  }
}

public open external class SoundGroup {
  @JsName("SoundGroup")
  public open var soundGroup: String

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("bAlwaysDecompressOnLoad")
  public open var alwaysDecompressOnLoad: Boolean

  @JsName("DecompressedDuration")
  public open var decompressedDuration: Number

  public open fun clone(): SoundGroup

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SoundGroup

    @JsName("C")
    public fun copy(other: Any): SoundGroup
  }
}

public open external class SoundGroups(
  outer: UObject,
) : UObject {
  @JsName("SoundGroupProfiles")
  public open var soundGroupProfiles: Array<SoundGroup>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundGroups

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundGroups

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundGroups

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundGroups

    @JsName("C")
    public fun copy(other: UObject): SoundGroups

    @JsName("C")
    public fun copy(other: Any): SoundGroups
  }
}

public open external class SoundNodeAssetReferencer(
  outer: UObject,
) : SoundNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeAssetReferencer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeAssetReferencer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeAssetReferencer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeAssetReferencer

    @JsName("C")
    public fun copy(other: UObject): SoundNodeAssetReferencer

    @JsName("C")
    public fun copy(other: Any): SoundNodeAssetReferencer
  }
}

public open external class SoundNodeAttenuation(
  outer: UObject,
) : SoundNode {
  @JsName("AttenuationSettings")
  public open var attenuationSettings: SoundAttenuation

  @JsName("AttenuationOverrides")
  public open var attenuationOverrides: SoundAttenuationSettings

  @JsName("bOverrideAttenuation")
  public open var overrideAttenuation: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeAttenuation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeAttenuation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeAttenuation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeAttenuation

    @JsName("C")
    public fun copy(other: UObject): SoundNodeAttenuation

    @JsName("C")
    public fun copy(other: Any): SoundNodeAttenuation
  }
}

public open external class SoundNodeBranch(
  outer: UObject,
) : SoundNode {
  @JsName("BoolParameterName")
  public open var boolParameterName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeBranch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeBranch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeBranch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeBranch

    @JsName("C")
    public fun copy(other: UObject): SoundNodeBranch

    @JsName("C")
    public fun copy(other: Any): SoundNodeBranch
  }
}

public open external class SoundNodeConcatenator(
  outer: UObject,
) : SoundNode {
  @JsName("InputVolume")
  public open var inputVolume: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeConcatenator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeConcatenator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeConcatenator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeConcatenator

    @JsName("C")
    public fun copy(other: UObject): SoundNodeConcatenator

    @JsName("C")
    public fun copy(other: Any): SoundNodeConcatenator
  }
}

public open external class SoundNodeDelay(
  outer: UObject,
) : SoundNode {
  @JsName("DelayMin")
  public open var delayMin: Number

  @JsName("DelayMax")
  public open var delayMax: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeDelay

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeDelay

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeDelay

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeDelay

    @JsName("C")
    public fun copy(other: UObject): SoundNodeDelay

    @JsName("C")
    public fun copy(other: Any): SoundNodeDelay
  }
}

public open external class DialogueWaveParameter {
  @JsName("DialogueWave")
  public open var dialogueWave: DialogueWave

  @JsName("Context")
  public open var context: DialogueContext

  public open fun clone(): DialogueWaveParameter

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DialogueWaveParameter

    @JsName("C")
    public fun copy(other: Any): DialogueWaveParameter
  }
}

public open external class SoundNodeDialoguePlayer(
  outer: UObject,
) : SoundNode {
  @JsName("DialogueWaveParameter")
  public open var dialogueWaveParameter: DialogueWaveParameter

  @JsName("bLooping")
  public open var looping: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeDialoguePlayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeDialoguePlayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeDialoguePlayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeDialoguePlayer

    @JsName("C")
    public fun copy(other: UObject): SoundNodeDialoguePlayer

    @JsName("C")
    public fun copy(other: Any): SoundNodeDialoguePlayer
  }
}

public open external class DistanceDatum {
  @JsName("FadeInDistanceStart")
  public open var fadeInDistanceStart: Number

  @JsName("FadeInDistanceEnd")
  public open var fadeInDistanceEnd: Number

  @JsName("FadeOutDistanceStart")
  public open var fadeOutDistanceStart: Number

  @JsName("FadeOutDistanceEnd")
  public open var fadeOutDistanceEnd: Number

  @JsName("Volume")
  public open var volume: Number

  public open fun clone(): DistanceDatum

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DistanceDatum

    @JsName("C")
    public fun copy(other: Any): DistanceDatum
  }
}

public open external class SoundNodeDistanceCrossFade(
  outer: UObject,
) : SoundNode {
  @JsName("CrossFadeInput")
  public open var crossFadeInput: Array<DistanceDatum>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeDistanceCrossFade

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeDistanceCrossFade

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeDistanceCrossFade

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeDistanceCrossFade

    @JsName("C")
    public fun copy(other: UObject): SoundNodeDistanceCrossFade

    @JsName("C")
    public fun copy(other: Any): SoundNodeDistanceCrossFade
  }
}

public open external class SoundNodeDoppler(
  outer: UObject,
) : SoundNode {
  @JsName("DopplerIntensity")
  public open var dopplerIntensity: Number

  @JsName("bUseSmoothing")
  public open var useSmoothing: Boolean

  @JsName("SmoothingInterpSpeed")
  public open var smoothingInterpSpeed: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeDoppler

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeDoppler

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeDoppler

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeDoppler

    @JsName("C")
    public fun copy(other: UObject): SoundNodeDoppler

    @JsName("C")
    public fun copy(other: Any): SoundNodeDoppler
  }
}

public open external class SoundNodeEnveloper(
  outer: UObject,
) : SoundNode {
  @JsName("LoopStart")
  public open var loopStart: Number

  @JsName("LoopEnd")
  public open var loopEnd: Number

  @JsName("DurationAfterLoop")
  public open var durationAfterLoop: Number

  @JsName("LoopCount")
  public open var loopCount: Number

  @JsName("bLoopIndefinitely")
  public open var loopIndefinitely: Boolean

  @JsName("bLoop")
  public open var loop: Boolean

  @JsName("VolumeInterpCurve")
  public open var volumeInterpCurve: DistributionFloatConstantCurve

  @JsName("PitchInterpCurve")
  public open var pitchInterpCurve: DistributionFloatConstantCurve

  @JsName("VolumeCurve")
  public open var volumeCurve: RuntimeFloatCurve

  @JsName("PitchCurve")
  public open var pitchCurve: RuntimeFloatCurve

  @JsName("PitchMin")
  public open var pitchMin: Number

  @JsName("PitchMax")
  public open var pitchMax: Number

  @JsName("VolumeMin")
  public open var volumeMin: Number

  @JsName("VolumeMax")
  public open var volumeMax: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeEnveloper

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeEnveloper

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeEnveloper

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeEnveloper

    @JsName("C")
    public fun copy(other: UObject): SoundNodeEnveloper

    @JsName("C")
    public fun copy(other: Any): SoundNodeEnveloper
  }
}

public open external class SoundNodeGroupControl(
  outer: UObject,
) : SoundNode {
  @JsName("GroupSizes")
  public open var groupSizes: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeGroupControl

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeGroupControl

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeGroupControl

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeGroupControl

    @JsName("C")
    public fun copy(other: UObject): SoundNodeGroupControl

    @JsName("C")
    public fun copy(other: Any): SoundNodeGroupControl
  }
}

public open external class SoundNodeLooping(
  outer: UObject,
) : SoundNode {
  @JsName("LoopCount")
  public open var loopCount: Number

  @JsName("bLoopIndefinitely")
  public open var loopIndefinitely: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeLooping

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeLooping

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeLooping

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeLooping

    @JsName("C")
    public fun copy(other: UObject): SoundNodeLooping

    @JsName("C")
    public fun copy(other: Any): SoundNodeLooping
  }
}

public open external class SoundNodeMature(
  outer: UObject,
) : SoundNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeMature

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeMature

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeMature

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeMature

    @JsName("C")
    public fun copy(other: UObject): SoundNodeMature

    @JsName("C")
    public fun copy(other: Any): SoundNodeMature
  }
}

public open external class SoundNodeMixer(
  outer: UObject,
) : SoundNode {
  @JsName("InputVolume")
  public open var inputVolume: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeMixer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeMixer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeMixer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeMixer

    @JsName("C")
    public fun copy(other: UObject): SoundNodeMixer

    @JsName("C")
    public fun copy(other: Any): SoundNodeMixer
  }
}

public open external class SoundNodeModulator(
  outer: UObject,
) : SoundNode {
  @JsName("PitchMin")
  public open var pitchMin: Number

  @JsName("PitchMax")
  public open var pitchMax: Number

  @JsName("VolumeMin")
  public open var volumeMin: Number

  @JsName("VolumeMax")
  public open var volumeMax: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeModulator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeModulator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeModulator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeModulator

    @JsName("C")
    public fun copy(other: UObject): SoundNodeModulator

    @JsName("C")
    public fun copy(other: Any): SoundNodeModulator
  }
}

public external object ModulationParamMode {
  @JsName("MPM_Normal")
  public var mpmNormal: String

  @JsName("MPM_Abs")
  public var mpmAbs: String

  @JsName("MPM_Direct")
  public var mpmDirect: String

  @JsName("MPM_MAX")
  public var mpmmax: String
}

public open external class ModulatorContinuousParams {
  @JsName("ParameterName")
  public open var parameterName: String

  @JsName("Default")
  public open var default: Number

  @JsName("MinInput")
  public open var minInput: Number

  @JsName("MaxInput")
  public open var maxInput: Number

  @JsName("MinOutput")
  public open var minOutput: Number

  @JsName("MaxOutput")
  public open var maxOutput: Number

  @JsName("ParamMode")
  public open var paramMode: String

  public open fun clone(): ModulatorContinuousParams

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ModulatorContinuousParams

    @JsName("C")
    public fun copy(other: Any): ModulatorContinuousParams
  }
}

public open external class SoundNodeModulatorContinuous(
  outer: UObject,
) : SoundNode {
  @JsName("PitchModulationParams")
  public open var pitchModulationParams: ModulatorContinuousParams

  @JsName("VolumeModulationParams")
  public open var volumeModulationParams: ModulatorContinuousParams

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeModulatorContinuous

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeModulatorContinuous

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeModulatorContinuous

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeModulatorContinuous

    @JsName("C")
    public fun copy(other: UObject): SoundNodeModulatorContinuous

    @JsName("C")
    public fun copy(other: Any): SoundNodeModulatorContinuous
  }
}

public open external class SoundNodeOscillator(
  outer: UObject,
) : SoundNode {
  @JsName("bModulateVolume")
  public open var modulateVolume: Boolean

  @JsName("bModulatePitch")
  public open var modulatePitch: Boolean

  @JsName("AmplitudeMin")
  public open var amplitudeMin: Number

  @JsName("AmplitudeMax")
  public open var amplitudeMax: Number

  @JsName("FrequencyMin")
  public open var frequencyMin: Number

  @JsName("FrequencyMax")
  public open var frequencyMax: Number

  @JsName("OffsetMin")
  public open var offsetMin: Number

  @JsName("OffsetMax")
  public open var offsetMax: Number

  @JsName("CenterMin")
  public open var centerMin: Number

  @JsName("CenterMax")
  public open var centerMax: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeOscillator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeOscillator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeOscillator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeOscillator

    @JsName("C")
    public fun copy(other: UObject): SoundNodeOscillator

    @JsName("C")
    public fun copy(other: Any): SoundNodeOscillator
  }
}

public open external class SoundNodeParamCrossFade(
  outer: UObject,
) : SoundNodeDistanceCrossFade {
  @JsName("ParamName")
  public open var paramName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeParamCrossFade

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeParamCrossFade

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeParamCrossFade

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeParamCrossFade

    @JsName("C")
    public fun copy(other: UObject): SoundNodeParamCrossFade

    @JsName("C")
    public fun copy(other: Any): SoundNodeParamCrossFade
  }
}

public open external class SoundNodeQualityLevel(
  outer: UObject,
) : SoundNode {
  @JsName("CookedQualityLevelIndex")
  public open var cookedQualityLevelIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeQualityLevel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeQualityLevel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeQualityLevel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeQualityLevel

    @JsName("C")
    public fun copy(other: UObject): SoundNodeQualityLevel

    @JsName("C")
    public fun copy(other: Any): SoundNodeQualityLevel
  }
}

public open external class SoundNodeRandom(
  outer: UObject,
) : SoundNode {
  @JsName("Weights")
  public open var weights: Array<Number>

  @JsName("HasBeenUsed")
  public open var hasBeenUsed: Array<Boolean>

  @JsName("NumRandomUsed")
  public open var numRandomUsed: Number

  @JsName("PreselectAtLevelLoad")
  public open var preselectAtLevelLoad: Number

  @JsName("bShouldExcludeFromBranchCulling")
  public open var shouldExcludeFromBranchCulling: Boolean

  @JsName("bSoundCueExcludedFromBranchCulling")
  public open var soundCueExcludedFromBranchCulling: Boolean

  @JsName("bRandomizeWithoutReplacement")
  public open var randomizeWithoutReplacement: Boolean

  @JsName("PIEHiddenNodes")
  public open var pieHiddenNodes: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeRandom

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeRandom

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeRandom

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeRandom

    @JsName("C")
    public fun copy(other: UObject): SoundNodeRandom

    @JsName("C")
    public fun copy(other: Any): SoundNodeRandom
  }
}

public open external class SoundNodeSoundClass(
  outer: UObject,
) : SoundNode {
  @JsName("SoundClassOverride")
  public open var soundClassOverride: SoundClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeSoundClass

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeSoundClass

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeSoundClass

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeSoundClass

    @JsName("C")
    public fun copy(other: UObject): SoundNodeSoundClass

    @JsName("C")
    public fun copy(other: Any): SoundNodeSoundClass
  }
}

public open external class SoundNodeSwitch(
  outer: UObject,
) : SoundNode {
  @JsName("IntParameterName")
  public open var intParameterName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeSwitch

    @JsName("C")
    public fun copy(other: UObject): SoundNodeSwitch

    @JsName("C")
    public fun copy(other: Any): SoundNodeSwitch
  }
}

public open external class SoundNodeWaveParam(
  outer: UObject,
) : SoundNode {
  @JsName("WaveParameterName")
  public open var waveParameterName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeWaveParam

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeWaveParam

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeWaveParam

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeWaveParam

    @JsName("C")
    public fun copy(other: UObject): SoundNodeWaveParam

    @JsName("C")
    public fun copy(other: Any): SoundNodeWaveParam
  }
}

public open external class SoundNodeWavePlayer(
  outer: UObject,
) : SoundNodeAssetReferencer {
  @JsName("SoundWaveAssetPtr")
  public open var soundWaveAssetPtr: SoundWave

  @JsName("SoundWave")
  public open var soundWave: SoundWave

  @JsName("bLooping")
  public open var looping: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundNodeWavePlayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundNodeWavePlayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundNodeWavePlayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundNodeWavePlayer

    @JsName("C")
    public fun copy(other: UObject): SoundNodeWavePlayer

    @JsName("C")
    public fun copy(other: Any): SoundNodeWavePlayer
  }
}

public open external class SoundParameterControllerInterface(
  outer: UObject,
) : AudioParameterControllerInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundParameterControllerInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundParameterControllerInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundParameterControllerInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundParameterControllerInterface

    @JsName("C")
    public fun copy(other: UObject): SoundParameterControllerInterface

    @JsName("C")
    public fun copy(other: Any): SoundParameterControllerInterface
  }
}

public open external class AudioParameterConversionStatics(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioParameterConversionStatics

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioParameterConversionStatics

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioParameterConversionStatics

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioParameterConversionStatics

    @JsName("StringToAudioParameter")
    public fun stringToAudioParameter(name: String, string: String): AudioParameter

    @JsName("StringArrayToAudioParameter")
    public fun stringArrayToAudioParameter(name: String, strings: Array<String>): AudioParameter

    @JsName("ObjectToAudioParameter")
    public fun objectToAudioParameter(name: String, uObject: UObject): AudioParameter

    @JsName("ObjectArrayToAudioParameter")
    public fun objectArrayToAudioParameter(name: String, objects: Array<UObject>): AudioParameter

    @JsName("IntegerToAudioParameter")
    public fun integerToAudioParameter(name: String, integer: Number): AudioParameter

    @JsName("IntegerArrayToAudioParameter")
    public fun integerArrayToAudioParameter(name: String, integers: Array<Number>): AudioParameter

    @JsName("FloatToAudioParameter")
    public fun floatToAudioParameter(name: String, float: Number): AudioParameter

    @JsName("FloatArrayToAudioParameter")
    public fun floatArrayToAudioParameter(name: String, floats: Array<Number>): AudioParameter

    @JsName("BooleanToAudioParameter")
    public fun booleanToAudioParameter(name: String, bool: Boolean): AudioParameter

    @JsName("BooleanArrayToAudioParameter")
    public fun booleanArrayToAudioParameter(name: String, bools: Array<Boolean>): AudioParameter

    @JsName("C")
    public fun copy(other: UObject): AudioParameterConversionStatics

    @JsName("C")
    public fun copy(other: Any): AudioParameterConversionStatics
  }
}

public open external class SoundfieldSubmix(
  outer: UObject,
) : SoundSubmixWithParentBase {
  @JsName("SoundfieldEncodingFormat")
  public open var soundfieldEncodingFormat: String

  @JsName("EncodingSettings")
  public open var encodingSettings: SoundfieldEncodingSettingsBase

  @JsName("SoundfieldEffectChain")
  public open var soundfieldEffectChain: Array<SoundfieldEffectBase>

  @JsName("EncodingSettingsClass")
  public open var encodingSettingsClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundfieldSubmix

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundfieldSubmix

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundfieldSubmix

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundfieldSubmix

    @JsName("C")
    public fun copy(other: UObject): SoundfieldSubmix

    @JsName("C")
    public fun copy(other: Any): SoundfieldSubmix
  }
}

public open external class EndpointSubmix(
  outer: UObject,
) : SoundSubmixBase {
  @JsName("EndpointType")
  public open var endpointType: String

  @JsName("EndpointSettingsClass")
  public open var endpointSettingsClass: UnrealEngineClass

  @JsName("EndpointSettings")
  public open var endpointSettings: AudioEndpointSettingsBase

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EndpointSubmix

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EndpointSubmix

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EndpointSubmix

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EndpointSubmix

    @JsName("C")
    public fun copy(other: UObject): EndpointSubmix

    @JsName("C")
    public fun copy(other: Any): EndpointSubmix
  }
}

public open external class SoundfieldEndpointSubmix(
  outer: UObject,
) : SoundSubmixBase {
  @JsName("SoundfieldEndpointType")
  public open var soundfieldEndpointType: String

  @JsName("EndpointSettingsClass")
  public open var endpointSettingsClass: UnrealEngineClass

  @JsName("EndpointSettings")
  public open var endpointSettings: SoundfieldEndpointSettingsBase

  @JsName("EncodingSettingsClass")
  public open var encodingSettingsClass: UnrealEngineClass

  @JsName("EncodingSettings")
  public open var encodingSettings: SoundfieldEncodingSettingsBase

  @JsName("SoundfieldEffectChain")
  public open var soundfieldEffectChain: Array<SoundfieldEffectBase>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundfieldEndpointSubmix

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundfieldEndpointSubmix

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundfieldEndpointSubmix

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundfieldEndpointSubmix

    @JsName("C")
    public fun copy(other: UObject): SoundfieldEndpointSubmix

    @JsName("C")
    public fun copy(other: Any): SoundfieldEndpointSubmix
  }
}

public open external class SoundSubmixWidgetInterface(
  outer: UObject,
) : Interface {
  @JsName("OnConstructed")
  public open fun onConstructed(soundSubmix: SoundSubmixBase): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixWidgetInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixWidgetInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixWidgetInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixWidgetInterface

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixWidgetInterface

    @JsName("C")
    public fun copy(other: Any): SoundSubmixWidgetInterface
  }
}

public open external class SpectatorPawnMovement(
  outer: UObject,
) : FloatingPawnMovement {
  @JsName("bIgnoreTimeDilation")
  public open var ignoreTimeDilation: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SpectatorPawnMovement

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SpectatorPawnMovement

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpectatorPawnMovement

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpectatorPawnMovement

    @JsName("C")
    public fun copy(other: UObject): SpectatorPawnMovement

    @JsName("C")
    public fun copy(other: Any): SpectatorPawnMovement
  }
}

public open external class SphereReflectionCapture(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : ReflectionCapture {
  @JsName("DrawCaptureRadius")
  public open var drawCaptureRadius: DrawSphereComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SphereReflectionCapture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SphereReflectionCapture

    @JsName("C")
    public fun copy(other: UObject): SphereReflectionCapture

    @JsName("C")
    public fun copy(other: Any): SphereReflectionCapture
  }
}

public open external class SphereReflectionCaptureComponent(
  outer: UObject,
) : ReflectionCaptureComponent {
  @JsName("InfluenceRadius")
  public open var influenceRadius: Number

  @JsName("CaptureDistanceScale")
  public open var captureDistanceScale: Number

  @JsName("PreviewInfluenceRadius")
  public open var previewInfluenceRadius: DrawSphereComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SphereReflectionCaptureComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SphereReflectionCaptureComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SphereReflectionCaptureComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SphereReflectionCaptureComponent

    @JsName("C")
    public fun copy(other: UObject): SphereReflectionCaptureComponent

    @JsName("C")
    public fun copy(other: Any): SphereReflectionCaptureComponent
  }
}

public open external class SplineMeshActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("SplineMeshComponent")
  public open var splineMeshComponent: SplineMeshComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SplineMeshActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SplineMeshActor

    @JsName("C")
    public fun copy(other: UObject): SplineMeshActor

    @JsName("C")
    public fun copy(other: Any): SplineMeshActor
  }
}

public open external class SpringArmComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("TargetArmLength")
  public open var targetArmLength: Number

  @JsName("SocketOffset")
  public open var socketOffset: Vector

  @JsName("TargetOffset")
  public open var targetOffset: Vector

  @JsName("ProbeSize")
  public open var probeSize: Number

  @JsName("ProbeChannel")
  public open var probeChannel: String

  @JsName("bDoCollisionTest")
  public open var doCollisionTest: Boolean

  @JsName("bUsePawnControlRotation")
  public open var usePawnControlRotation: Boolean

  @JsName("bInheritPitch")
  public open var inheritPitch: Boolean

  @JsName("bInheritYaw")
  public open var inheritYaw: Boolean

  @JsName("bInheritRoll")
  public open var inheritRoll: Boolean

  @JsName("bEnableCameraLag")
  public open var enableCameraLag: Boolean

  @JsName("bEnableCameraRotationLag")
  public open var enableCameraRotationLag: Boolean

  @JsName("bUseCameraLagSubstepping")
  public open var useCameraLagSubstepping: Boolean

  @JsName("bDrawDebugLagMarkers")
  public open var drawDebugLagMarkers: Boolean

  @JsName("CameraLagSpeed")
  public open var cameraLagSpeed: Number

  @JsName("CameraRotationLagSpeed")
  public open var cameraRotationLagSpeed: Number

  @JsName("CameraLagMaxTimeStep")
  public open var cameraLagMaxTimeStep: Number

  @JsName("CameraLagMaxDistance")
  public open var cameraLagMaxDistance: Number

  @JsName("bClampToMaxPhysicsDeltaTime")
  public open var clampToMaxPhysicsDeltaTime: Boolean

  @JsName("IsCollisionFixApplied")
  public open fun isCollisionFixApplied(): Boolean

  @JsName("GetUnfixedCameraPosition")
  public open fun getUnfixedCameraPosition(): Vector

  @JsName("GetTargetRotation")
  public open fun getTargetRotation(): Rotator

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SpringArmComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SpringArmComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpringArmComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpringArmComponent

    @JsName("C")
    public fun copy(other: UObject): SpringArmComponent

    @JsName("C")
    public fun copy(other: Any): SpringArmComponent
  }
}

public open external class StereoLayerShape(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerShape

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerShape

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerShape

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerShape

    @JsName("C")
    public fun copy(other: UObject): StereoLayerShape

    @JsName("C")
    public fun copy(other: Any): StereoLayerShape
  }
}

public open external class StereoLayerShapeQuad(
  outer: UObject,
) : StereoLayerShape {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerShapeQuad

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerShapeQuad

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerShapeQuad

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerShapeQuad

    @JsName("C")
    public fun copy(other: UObject): StereoLayerShapeQuad

    @JsName("C")
    public fun copy(other: Any): StereoLayerShapeQuad
  }
}

public open external class StereoLayerShapeCylinder(
  outer: UObject,
) : StereoLayerShape {
  @JsName("Radius")
  public open var radius: Number

  @JsName("OverlayArc")
  public open var overlayArc: Number

  @JsName("Height")
  public open var height: Number

  @JsName("SetRadius")
  public open fun setRadius(inRadius: Number): Unit

  @JsName("SetOverlayArc")
  public open fun setOverlayArc(inOverlayArc: Number): Unit

  @JsName("SetHeight")
  public open fun setHeight(inHeight: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerShapeCylinder

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerShapeCylinder

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerShapeCylinder

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerShapeCylinder

    @JsName("C")
    public fun copy(other: UObject): StereoLayerShapeCylinder

    @JsName("C")
    public fun copy(other: Any): StereoLayerShapeCylinder
  }
}

public open external class StereoLayerShapeCubemap(
  outer: UObject,
) : StereoLayerShape {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerShapeCubemap

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerShapeCubemap

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerShapeCubemap

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerShapeCubemap

    @JsName("C")
    public fun copy(other: UObject): StereoLayerShapeCubemap

    @JsName("C")
    public fun copy(other: Any): StereoLayerShapeCubemap
  }
}

public open external class EquirectProps {
  @JsName("LeftUVRect")
  public open var leftUvRect: Box2d

  @JsName("RightUVRect")
  public open var rightUvRect: Box2d

  @JsName("LeftScale")
  public open var leftScale: Vector2d

  @JsName("RightScale")
  public open var rightScale: Vector2d

  @JsName("LeftBias")
  public open var leftBias: Vector2d

  @JsName("RightBias")
  public open var rightBias: Vector2d

  public open fun clone(): EquirectProps

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): EquirectProps

    @JsName("C")
    public fun copy(other: Any): EquirectProps
  }
}

public open external class StereoLayerShapeEquirect(
  outer: UObject,
) : StereoLayerShape {
  @JsName("LeftUVRect")
  public open var leftUvRect: Box2d

  @JsName("RightUVRect")
  public open var rightUvRect: Box2d

  @JsName("LeftScale")
  public open var leftScale: Vector2d

  @JsName("RightScale")
  public open var rightScale: Vector2d

  @JsName("LeftBias")
  public open var leftBias: Vector2d

  @JsName("RightBias")
  public open var rightBias: Vector2d

  @JsName("SetEquirectProps")
  public open fun setEquirectProps(inScaleBiases: EquirectProps): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerShapeEquirect

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerShapeEquirect

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerShapeEquirect

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerShapeEquirect

    @JsName("C")
    public fun copy(other: UObject): StereoLayerShapeEquirect

    @JsName("C")
    public fun copy(other: Any): StereoLayerShapeEquirect
  }
}

@JsName("EStereoLayerType")
public external object StereoLayerType {
  @JsName("SLT_WorldLocked")
  public var WorldLocked: String

  @JsName("SLT_TrackerLocked")
  public var TrackerLocked: String

  @JsName("SLT_FaceLocked")
  public var FaceLocked: String

  @JsName("SLT_MAX")
  public var Max: String
}

@JsName("EStereoLayerShape")
public external object StereoLayerShapeEnum {
  @JsName("SLSH_QuadLayer")
  public var QuadLayer: String

  @JsName("SLSH_CylinderLayer")
  public var CylinderLayer: String

  @JsName("SLSH_CubemapLayer")
  public var CubemapLayer: String

  @JsName("SLSH_EquirectLayer")
  public var EquirectLayer: String

  @JsName("SLSH_MAX")
  public var Max: String
}

public open external class StereoLayerComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("bLiveTexture")
  public open var liveTexture: Boolean

  @JsName("bSupportsDepth")
  public open var supportsDepth: Boolean

  @JsName("bNoAlphaChannel")
  public open var noAlphaChannel: Boolean

  @JsName("Texture")
  public open var texture: Texture

  @JsName("LeftTexture")
  public open var leftTexture: Texture

  @JsName("bQuadPreserveTextureRatio")
  public open var quadPreserveTextureRatio: Boolean

  @JsName("QuadSize")
  public open var quadSize: Vector2d

  @JsName("UVRect")
  public open var uvRect: Box2d

  @JsName("CylinderRadius")
  public open var cylinderRadius: Number

  @JsName("CylinderOverlayArc")
  public open var cylinderOverlayArc: Number

  @JsName("CylinderHeight")
  public open var cylinderHeight: Number

  @JsName("EquirectProps")
  public open var equirectProps: EquirectProps

  @JsName("StereoLayerType")
  public open var stereoLayerType: String

  @JsName("StereoLayerShape")
  public open var stereoLayerShape: String

  @JsName("Shape")
  public open var shape: StereoLayerShape

  @JsName("Priority")
  public open var priority: Number

  @JsName("SetUVRect")
  public open fun setUvRect(inUvRect: Box2d): Unit

  @JsName("SetTexture")
  public open fun setTexture(inTexture: Texture): Unit

  @JsName("SetQuadSize")
  public open fun setQuadSize(inQuadSize: Vector2d): Unit

  @JsName("SetPriority")
  public open fun setPriority(inPriority: Number): Unit

  @JsName("SetLeftTexture")
  public open fun setLeftTexture(inTexture: Texture): Unit

  @JsName("SetEquirectProps")
  public open fun setEquirectProps(inScaleBiases: EquirectProps): Unit

  @JsName("MarkTextureForUpdate")
  public open fun markTextureForUpdate(): Unit

  @JsName("GetUVRect")
  public open fun getUvRect(): Box2d

  @JsName("GetTexture")
  public open fun getTexture(): Texture

  @JsName("GetQuadSize")
  public open fun getQuadSize(): Vector2d

  @JsName("GetPriority")
  public open fun getPriority(): Number

  @JsName("GetLeftTexture")
  public open fun getLeftTexture(): Texture

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerComponent

    @JsName("C")
    public fun copy(other: UObject): StereoLayerComponent

    @JsName("C")
    public fun copy(other: Any): StereoLayerComponent
  }
}

public open external class StereoLayerFunctionLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StereoLayerFunctionLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StereoLayerFunctionLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StereoLayerFunctionLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StereoLayerFunctionLibrary

    @JsName("ShowSplashScreen")
    public fun showSplashScreen(): Unit

    @JsName("SetSplashScreen")
    public fun setSplashScreen(
      texture: Texture,
      scale: Vector2d,
      offset: Vector,
      showLoadingMovie: Boolean,
      showOnSet: Boolean,
    ): Unit

    @JsName("HideSplashScreen")
    public fun hideSplashScreen(): Unit

    @JsName("EnableAutoLoadingSplashScreen")
    public fun enableAutoLoadingSplashScreen(inAutoShowEnabled: Boolean): Unit

    @JsName("C")
    public fun copy(other: UObject): StereoLayerFunctionLibrary

    @JsName("C")
    public fun copy(other: Any): StereoLayerFunctionLibrary
  }
}

public open external class StringTable(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StringTable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StringTable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StringTable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StringTable

    @JsName("C")
    public fun copy(other: UObject): StringTable

    @JsName("C")
    public fun copy(other: Any): StringTable
  }
}

public open external class SubsystemBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SubsystemBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SubsystemBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SubsystemBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SubsystemBlueprintLibrary

    @JsName("GetWorldSubsystem")
    public fun getWorldSubsystem(contextObject: UObject, `class`: UnrealEngineClass): WorldSubsystem

    @JsName("GetLocalPlayerSubSystemFromPlayerController")
    public fun getLocalPlayerSubSystemFromPlayerController(playerController: PlayerController,
        `class`: UnrealEngineClass): LocalPlayerSubsystem

    @JsName("GetLocalPlayerSubsystem")
    public fun getLocalPlayerSubsystem(contextObject: UObject, `class`: UnrealEngineClass):
        LocalPlayerSubsystem

    @JsName("GetGameInstanceSubsystem")
    public fun getGameInstanceSubsystem(contextObject: UObject, `class`: UnrealEngineClass):
        GameInstanceSubsystem

    @JsName("GetEngineSubsystem")
    public fun getEngineSubsystem(`class`: UnrealEngineClass): EngineSubsystem

    @JsName("GetAudioEngineSubsystem")
    public fun getAudioEngineSubsystem(contextObject: UObject, `class`: UnrealEngineClass):
        AudioEngineSubsystem

    @JsName("C")
    public fun copy(other: UObject): SubsystemBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): SubsystemBlueprintLibrary
  }
}

public open external class SystemTimeTimecodeProvider(
  outer: UObject,
) : TimecodeProvider {
  @JsName("FrameRate")
  public open var frameRate: FrameRate

  @JsName("bGenerateFullFrame")
  public open var generateFullFrame: Boolean

  @JsName("bUseHighPerformanceClock")
  public open var useHighPerformanceClock: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SystemTimeTimecodeProvider

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SystemTimeTimecodeProvider

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SystemTimeTimecodeProvider

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SystemTimeTimecodeProvider

    @JsName("C")
    public fun copy(other: UObject): SystemTimeTimecodeProvider

    @JsName("C")
    public fun copy(other: Any): SystemTimeTimecodeProvider
  }
}

public open external class TargetPoint(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TargetPoint

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TargetPoint

    @JsName("C")
    public fun copy(other: UObject): TargetPoint

    @JsName("C")
    public fun copy(other: Any): TargetPoint
  }
}

public open external class TextPropertyTestObject(
  outer: UObject,
) : UObject {
  @JsName("DefaultedText")
  public open var defaultedText: String

  @JsName("UndefaultedText")
  public open var undefaultedText: String

  @JsName("TransientText")
  public open var transientText: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextPropertyTestObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextPropertyTestObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextPropertyTestObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextPropertyTestObject

    @JsName("C")
    public fun copy(other: UObject): TextPropertyTestObject

    @JsName("C")
    public fun copy(other: Any): TextPropertyTestObject
  }
}

public open external class TextRenderActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("TextRender")
  public open var textRender: TextRenderComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextRenderActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextRenderActor

    @JsName("C")
    public fun copy(other: UObject): TextRenderActor

    @JsName("C")
    public fun copy(other: Any): TextRenderActor
  }
}

public open external class TextureCubeArray(
  outer: UObject,
) : Texture {
  @JsName("SourceTextures")
  public open var sourceTextures: Array<TextureCube>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextureCubeArray

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextureCubeArray

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextureCubeArray

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextureCubeArray

    @JsName("C")
    public fun copy(other: UObject): TextureCubeArray

    @JsName("C")
    public fun copy(other: Any): TextureCubeArray
  }
}

@JsName("ETextureEncodeEffort")
public external object TextureEncodeEffort {
  public var Default: String

  public var Low: String

  public var Normal: String

  public var High: String

  @JsName("ETextureEncodeEffort_MAX")
  public var Max: String
}

@JsName("ETextureUniversalTiling")
public external object TextureUniversalTiling {
  public var Disabled: String

  @JsName("Enabled_256KB")
  public var Enabled256kb: String

  @JsName("Enabled_64KB")
  public var Enabled64kb: String

  @JsName("ETextureUniversalTiling_MAX")
  public var Max: String
}

@JsName("ETextureEncodeSpeed")
public external object TextureEncodeSpeed {
  public var Final: String

  public var FinalIfAvailable: String

  public var Fast: String

  @JsName("ETextureEncodeSpeed_MAX")
  public var Max: String
}

public open external class TextureEncodingProjectSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bFinalUsesRDO")
  public open var finalUsesRdo: Boolean

  @JsName("FinalRDOLambda")
  public open var finalRdoLambda: Any

  @JsName("FinalEffortLevel")
  public open var finalEffortLevel: String

  @JsName("FinalUniversalTiling")
  public open var finalUniversalTiling: String

  @JsName("bFastUsesRDO")
  public open var fastUsesRdo: Boolean

  @JsName("FastRDOLambda")
  public open var fastRdoLambda: Any

  @JsName("FastEffortLevel")
  public open var fastEffortLevel: String

  @JsName("FastUniversalTiling")
  public open var fastUniversalTiling: String

  @JsName("CookUsesSpeed")
  public open var cookUsesSpeed: String

  @JsName("EditorUsesSpeed")
  public open var editorUsesSpeed: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextureEncodingProjectSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextureEncodingProjectSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextureEncodingProjectSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextureEncodingProjectSettings

    @JsName("C")
    public fun copy(other: UObject): TextureEncodingProjectSettings

    @JsName("C")
    public fun copy(other: Any): TextureEncodingProjectSettings
  }
}

@JsName("ETextureEncodeSpeedOverride")
public external object TextureEncodeSpeedOverride {
  public var Disabled: String

  public var Final: String

  public var FinalIfAvailable: String

  public var Fast: String

  @JsName("ETextureEncodeSpeedOverride_MAX")
  public var Max: String
}

public open external class TextureEncodingUserSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("ForceEncodeSpeed")
  public open var forceEncodeSpeed: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextureEncodingUserSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextureEncodingUserSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextureEncodingUserSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextureEncodingUserSettings

    @JsName("C")
    public fun copy(other: UObject): TextureEncodingUserSettings

    @JsName("C")
    public fun copy(other: Any): TextureEncodingUserSettings
  }
}

public open external class TextureMipDataProviderFactory(
  outer: UObject,
) : AssetUserData {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TextureMipDataProviderFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TextureMipDataProviderFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TextureMipDataProviderFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TextureMipDataProviderFactory

    @JsName("C")
    public fun copy(other: UObject): TextureMipDataProviderFactory

    @JsName("C")
    public fun copy(other: Any): TextureMipDataProviderFactory
  }
}

public open external class TimelineEventEntry {
  @JsName("Time")
  public open var time: Number

  @JsName("EventFunc")
  public open var eventFunc: UnrealEngineDelegate<() -> Unit>

  public open fun clone(): TimelineEventEntry

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TimelineEventEntry

    @JsName("C")
    public fun copy(other: Any): TimelineEventEntry
  }
}

public open external class TimelineVectorTrack {
  @JsName("VectorCurve")
  public open var vectorCurve: CurveVector

  @JsName("InterpFunc")
  public open var interpFunc: UnrealEngineDelegate<(Output: Vector) -> Unit>

  @JsName("TrackName")
  public open var trackName: String

  @JsName("VectorPropertyName")
  public open var vectorPropertyName: String

  public open fun clone(): TimelineVectorTrack

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TimelineVectorTrack

    @JsName("C")
    public fun copy(other: Any): TimelineVectorTrack
  }
}

public open external class TimelineFloatTrack {
  @JsName("FloatCurve")
  public open var floatCurve: CurveFloat

  @JsName("InterpFunc")
  public open var interpFunc: UnrealEngineDelegate<(Output: Number) -> Unit>

  @JsName("TrackName")
  public open var trackName: String

  @JsName("FloatPropertyName")
  public open var floatPropertyName: String

  public open fun clone(): TimelineFloatTrack

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TimelineFloatTrack

    @JsName("C")
    public fun copy(other: Any): TimelineFloatTrack
  }
}

public open external class TimelineLinearColorTrack {
  @JsName("LinearColorCurve")
  public open var linearColorCurve: CurveLinearColor

  @JsName("InterpFunc")
  public open var interpFunc: UnrealEngineDelegate<(Output: LinearColor) -> Unit>

  @JsName("TrackName")
  public open var trackName: String

  @JsName("LinearColorPropertyName")
  public open var linearColorPropertyName: String

  public open fun clone(): TimelineLinearColorTrack

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TimelineLinearColorTrack

    @JsName("C")
    public fun copy(other: Any): TimelineLinearColorTrack
  }
}

public open external class Timeline {
  @JsName("LengthMode")
  public open var lengthMode: String

  @JsName("bLooping")
  public open var looping: Boolean

  @JsName("bReversePlayback")
  public open var reversePlayback: Boolean

  @JsName("bPlaying")
  public open var playing: Boolean

  @JsName("Length")
  public open var length: Number

  @JsName("PlayRate")
  public open var playRate: Number

  public open var position: Number

  @JsName("Events")
  public open var events: Array<TimelineEventEntry>

  @JsName("InterpVectors")
  public open var interpVectors: Array<TimelineVectorTrack>

  @JsName("InterpFloats")
  public open var interpFloats: Array<TimelineFloatTrack>

  @JsName("InterpLinearColors")
  public open var interpLinearColors: Array<TimelineLinearColorTrack>

  @JsName("TimelinePostUpdateFunc")
  public open var timelinePostUpdateFunc: UnrealEngineDelegate<() -> Unit>

  @JsName("TimelineFinishedFunc")
  public open var timelineFinishedFunc: UnrealEngineDelegate<() -> Unit>

  @JsName("PropertySetObject")
  public open var propertySetObject: Any

  @JsName("DirectionPropertyName")
  public open var directionPropertyName: String

  public open fun clone(): Timeline

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): Timeline

    @JsName("C")
    public fun copy(other: Any): Timeline
  }
}

public open external class TimelineComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("TheTimeline")
  public open var theTimeline: Timeline

  @JsName("bIgnoreTimeDilation")
  public open var ignoreTimeDilation: Boolean

  @JsName("Stop")
  public open fun stop(): Unit

  @JsName("SetVectorCurve")
  public open fun setVectorCurve(newVectorCurve: CurveVector, vectorTrackName: String): Unit

  @JsName("SetTimelineLengthMode")
  public open fun setTimelineLengthMode(newLengthMode: String): Unit

  @JsName("SetTimelineLength")
  public open fun setTimelineLength(newLength: Number): Unit

  @JsName("SetPlayRate")
  public open fun setPlayRate(newRate: Number): Unit

  @JsName("SetPlaybackPosition")
  public open fun setPlaybackPosition(
    newPosition: Number,
    fireEvents: Boolean,
    fireUpdate: Boolean,
  ): Unit

  @JsName("SetNewTime")
  public open fun setNewTime(newTime: Number): Unit

  @JsName("SetLooping")
  public open fun setLooping(newLooping: Boolean): Unit

  @JsName("SetLinearColorCurve")
  public open fun setLinearColorCurve(newLinearColorCurve: CurveLinearColor,
      linearColorTrackName: String): Unit

  @JsName("SetIgnoreTimeDilation")
  public open fun setIgnoreTimeDilation(newIgnoreTimeDilation: Boolean): Unit

  @JsName("SetFloatCurve")
  public open fun setFloatCurve(newFloatCurve: CurveFloat, floatTrackName: String): Unit

  @JsName("ReverseFromEnd")
  public open fun reverseFromEnd(): Unit

  @JsName("Reverse")
  public open fun reverse(): Unit

  @JsName("PlayFromStart")
  public open fun playFromStart(): Unit

  @JsName("Play")
  public open fun play(): Unit

  @JsName("OnRep_Timeline")
  public open fun onRepTimeline(): Unit

  @JsName("IsReversing")
  public open fun isReversing(): Boolean

  @JsName("IsPlaying")
  public open fun isPlaying(): Boolean

  @JsName("IsLooping")
  public open fun isLooping(): Boolean

  @JsName("GetTimelineLength")
  public open fun getTimelineLength(): Number

  @JsName("GetScaledTimelineLength")
  public open fun getScaledTimelineLength(): Number

  @JsName("GetPlayRate")
  public open fun getPlayRate(): Number

  @JsName("GetPlaybackPosition")
  public open fun getPlaybackPosition(): Number

  @JsName("GetIgnoreTimeDilation")
  public open fun getIgnoreTimeDilation(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TimelineComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TimelineComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TimelineComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TimelineComponent

    @JsName("C")
    public fun copy(other: UObject): TimelineComponent

    @JsName("C")
    public fun copy(other: Any): TimelineComponent
  }
}

public open external class TireType(
  outer: UObject,
) : DataAsset {
  @JsName("FrictionScale")
  public open var frictionScale: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TireType

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TireType

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TireType

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TireType

    @JsName("C")
    public fun copy(other: UObject): TireType

    @JsName("C")
    public fun copy(other: Any): TireType
  }
}

public open external class TriggerBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("CollisionComponent")
  public open var collisionComponent: ShapeComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TriggerBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TriggerBase

    @JsName("C")
    public fun copy(other: UObject): TriggerBase

    @JsName("C")
    public fun copy(other: Any): TriggerBase
  }
}

public open external class TriggerBox(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : TriggerBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TriggerBox

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TriggerBox

    @JsName("C")
    public fun copy(other: UObject): TriggerBox

    @JsName("C")
    public fun copy(other: Any): TriggerBox
  }
}

public open external class TriggerCapsule(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : TriggerBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TriggerCapsule

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TriggerCapsule

    @JsName("C")
    public fun copy(other: UObject): TriggerCapsule

    @JsName("C")
    public fun copy(other: Any): TriggerCapsule
  }
}

public open external class TriggerSphere(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : TriggerBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TriggerSphere

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TriggerSphere

    @JsName("C")
    public fun copy(other: UObject): TriggerSphere

    @JsName("C")
    public fun copy(other: Any): TriggerSphere
  }
}

public open external class TriggerVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TriggerVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TriggerVolume

    @JsName("C")
    public fun copy(other: UObject): TriggerVolume

    @JsName("C")
    public fun copy(other: Any): TriggerVolume
  }
}

@JsName("ETwitterRequestMethod")
public external object TwitterRequestMethod {
  @JsName("TRM_Get")
  public var Get: String

  @JsName("TRM_Post")
  public var Post: String

  @JsName("TRM_Delete")
  public var Delete: String

  @JsName("TRM_MAX")
  public var Max: String
}

public open external class TwitterIntegrationBase(
  outer: UObject,
) : PlatformInterfaceBase {
  @JsName("TwitterRequest")
  public open fun twitterRequest(
    URL: String,
    paramKeysAndValues: Array<String>,
    requestMethod: String,
    accountIndex: Number,
  ): Boolean

  @JsName("ShowTweetUI")
  public open fun showTweetUi(
    initialMessage: String,
    URL: String,
    picture: String,
  ): Boolean

  @JsName("Init")
  public open fun init(): Unit

  @JsName("GetNumAccounts")
  public open fun getNumAccounts(): Number

  @JsName("GetAccountName")
  public open fun getAccountName(accountIndex: Number): String

  @JsName("CanShowTweetUI")
  public open fun canShowTweetUi(): Boolean

  @JsName("AuthorizeAccounts")
  public open fun authorizeAccounts(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TwitterIntegrationBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TwitterIntegrationBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TwitterIntegrationBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TwitterIntegrationBase

    @JsName("C")
    public fun copy(other: UObject): TwitterIntegrationBase

    @JsName("C")
    public fun copy(other: Any): TwitterIntegrationBase
  }
}

public open external class TypedElementDeletionOptions {
  @JsName("bVerifyDeletionCanHappen")
  public open var verifyDeletionCanHappen: Boolean

  @JsName("bWarnAboutReferences")
  public open var warnAboutReferences: Boolean

  @JsName("bWarnAboutSoftReferences")
  public open var warnAboutSoftReferences: Boolean

  public open fun clone(): TypedElementDeletionOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TypedElementDeletionOptions

    @JsName("C")
    public fun copy(other: Any): TypedElementDeletionOptions
  }
}

public open external class TypedElementCommonActions(
  outer: UObject,
) : UObject {
  @JsName("K2_DuplicateSelectedElements")
  public open fun k2DuplicateSelectedElements(
    selectionSet: TypedElementSelectionSet,
    world: World,
    locationOffset: Vector,
  ): Array<ScriptTypedElementHandle>

  @JsName("DuplicateNormalizedElements")
  public open fun duplicateNormalizedElements(
    elementList: ScriptTypedElementListProxy,
    world: World,
    locationOffset: Vector,
  ): Array<ScriptTypedElementHandle>

  @JsName("DeleteSelectedElements")
  public open fun deleteSelectedElements(
    selectionSet: TypedElementSelectionSet,
    world: World,
    deletionOptions: TypedElementDeletionOptions,
  ): Boolean

  @JsName("DeleteNormalizedElements")
  public open fun deleteNormalizedElements(
    elementList: ScriptTypedElementListProxy,
    world: World,
    inSelectionSet: TypedElementSelectionSet,
    deletionOptions: TypedElementDeletionOptions,
  ): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TypedElementCommonActions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TypedElementCommonActions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TypedElementCommonActions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TypedElementCommonActions

    @JsName("C")
    public fun copy(other: UObject): TypedElementCommonActions

    @JsName("C")
    public fun copy(other: Any): TypedElementCommonActions
  }
}

@JsName("ETypedElementWorldType")
public external object TypedElementWorldType {
  public var Game: String

  public var Editor: String

  @JsName("ETypedElementWorldType_MAX")
  public var Max: String
}

@JsName("T$805")
public external interface Object805 {
  @JsName("OutTransform")
  public var outTransform: Transform

  @JsName("$")
  public var value: Boolean
}

@JsName("T$806")
public external interface Object806 {
  @JsName("OutPivotOffset")
  public var outPivotOffset: Vector

  @JsName("$")
  public var value: Boolean
}

@JsName("T$807")
public external interface Object807 {
  @JsName("OutBounds")
  public var outBounds: BoxSphereBounds

  @JsName("$")
  public var value: Boolean
}

public open external class TypedElementWorldInterface(
  outer: UObject,
) : Interface {
  @JsName("SetWorldTransform")
  public open fun setWorldTransform(inElementHandle: ScriptTypedElementHandle,
      inTransform: Transform): Boolean

  @JsName("SetRelativeTransform")
  public open fun setRelativeTransform(inElementHandle: ScriptTypedElementHandle,
      inTransform: Transform): Boolean

  @JsName("SetPivotOffset")
  public open fun setPivotOffset(inElementHandle: ScriptTypedElementHandle, inPivotOffset: Vector):
      Boolean

  @JsName("NotifyMovementStarted")
  public open fun notifyMovementStarted(inElementHandle: ScriptTypedElementHandle): Unit

  @JsName("NotifyMovementOngoing")
  public open fun notifyMovementOngoing(inElementHandle: ScriptTypedElementHandle): Unit

  @JsName("NotifyMovementEnded")
  public open fun notifyMovementEnded(inElementHandle: ScriptTypedElementHandle): Unit

  @JsName("IsTemplateElement")
  public open fun isTemplateElement(inElementHandle: ScriptTypedElementHandle): Boolean

  @JsName("GetWorldTransform")
  public open fun getWorldTransform(inElementHandle: ScriptTypedElementHandle,
      outTransform: Transform): Object805

  @JsName("GetRelativeTransform")
  public open fun getRelativeTransform(inElementHandle: ScriptTypedElementHandle,
      outTransform: Transform): Object805

  @JsName("GetPivotOffset")
  public open fun getPivotOffset(inElementHandle: ScriptTypedElementHandle, outPivotOffset: Vector):
      Object806

  @JsName("GetOwnerWorld")
  public open fun getOwnerWorld(inElementHandle: ScriptTypedElementHandle): World

  @JsName("GetOwnerLevel")
  public open fun getOwnerLevel(inElementHandle: ScriptTypedElementHandle): Level

  @JsName("GetBounds")
  public open fun getBounds(inElementHandle: ScriptTypedElementHandle, outBounds: BoxSphereBounds):
      Object807

  @JsName("DuplicateElement")
  public open fun duplicateElement(
    inElementHandle: ScriptTypedElementHandle,
    inWorld: World,
    inLocationOffset: Vector,
  ): ScriptTypedElementHandle

  @JsName("DeleteElement")
  public open fun deleteElement(
    inElementHandle: ScriptTypedElementHandle,
    inWorld: World,
    inSelectionSet: TypedElementSelectionSet,
    inDeletionOptions: TypedElementDeletionOptions,
  ): Boolean

  @JsName("CanMoveElement")
  public open fun canMoveElement(inElementHandle: ScriptTypedElementHandle, inWorldType: String):
      Boolean

  @JsName("CanEditElement")
  public open fun canEditElement(inElementHandle: ScriptTypedElementHandle): Boolean

  @JsName("CanDuplicateElement")
  public open fun canDuplicateElement(inElementHandle: ScriptTypedElementHandle): Boolean

  @JsName("CanDeleteElement")
  public open fun canDeleteElement(inElementHandle: ScriptTypedElementHandle): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TypedElementWorldInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TypedElementWorldInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TypedElementWorldInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TypedElementWorldInterface

    @JsName("C")
    public fun copy(other: UObject): TypedElementWorldInterface

    @JsName("C")
    public fun copy(other: Any): TypedElementWorldInterface
  }
}

public open external class UserDefinedEnum(
  outer: UObject,
) : Enum {
  @JsName("UniqueNameIndex")
  public open var uniqueNameIndex: Any

  @JsName("EnumDescription")
  public open var enumDescription: String

  @JsName("DisplayNameMap")
  public open var displayNameMap: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UserDefinedEnum

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UserDefinedEnum

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UserDefinedEnum

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UserDefinedEnum

    @JsName("C")
    public fun copy(other: UObject): UserDefinedEnum

    @JsName("C")
    public fun copy(other: Any): UserDefinedEnum
  }
}

@JsName("ERenderFocusRule")
public external object RenderFocusRule {
  public var Always: String

  public var NonPointer: String

  public var NavigationOnly: String

  public var Never: String

  @JsName("ERenderFocusRule_MAX")
  public var Max: String
}

@JsName("EUIScalingRule")
public external object UIScalingRule {
  public var ShortestSide: String

  public var LongestSide: String

  public var Horizontal: String

  public var Vertical: String

  public var ScaleToFit: String

  public var Custom: String

  @JsName("EUIScalingRule_MAX")
  public var Max: String
}

public open external class UserInterfaceSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("RenderFocusRule")
  public open var renderFocusRule: String

  @JsName("HardwareCursors")
  public open var hardwareCursors: Any

  @JsName("SoftwareCursors")
  public open var softwareCursors: Any

  @JsName("DefaultCursor")
  public open var defaultCursor: SoftClassPath

  @JsName("TextEditBeamCursor")
  public open var textEditBeamCursor: SoftClassPath

  @JsName("CrosshairsCursor")
  public open var crosshairsCursor: SoftClassPath

  @JsName("HandCursor")
  public open var handCursor: SoftClassPath

  @JsName("GrabHandCursor")
  public open var grabHandCursor: SoftClassPath

  @JsName("GrabHandClosedCursor")
  public open var grabHandClosedCursor: SoftClassPath

  @JsName("SlashedCircleCursor")
  public open var slashedCircleCursor: SoftClassPath

  @JsName("ApplicationScale")
  public open var applicationScale: Number

  @JsName("UIScaleRule")
  public open var uiScaleRule: String

  @JsName("CustomScalingRuleClass")
  public open var customScalingRuleClass: SoftClassPath

  @JsName("UIScaleCurve")
  public open var uiScaleCurve: RuntimeFloatCurve

  @JsName("bAllowHighDPIInGameMode")
  public open var allowHighDpiInGameMode: Boolean

  @JsName("DesignScreenSize")
  public open var designScreenSize: IntPoint

  @JsName("bLoadWidgetsOnDedicatedServer")
  public open var loadWidgetsOnDedicatedServer: Boolean

  @JsName("CursorClasses")
  public open var cursorClasses: Array<UObject>

  @JsName("CustomScalingRuleClassInstance")
  public open var customScalingRuleClassInstance: UnrealEngineClass

  @JsName("CustomScalingRule")
  public open var customScalingRule: DpiCustomScalingRule

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UserInterfaceSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UserInterfaceSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UserInterfaceSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UserInterfaceSettings

    @JsName("C")
    public fun copy(other: UObject): UserInterfaceSettings

    @JsName("C")
    public fun copy(other: Any): UserInterfaceSettings
  }
}

@JsName("EVectorFieldConstructionOp")
public external object VectorFieldConstructionOp {
  @JsName("VFCO_Extrude")
  public var Extrude: String

  @JsName("VFCO_Revolve")
  public var Revolve: String

  @JsName("VFCO_MAX")
  public var Max: String
}

public open external class VectorFieldStatic(
  outer: UObject,
) : VectorField {
  @JsName("SizeX")
  public open var sizeX: Number

  @JsName("SizeY")
  public open var sizeY: Number

  @JsName("SizeZ")
  public open var sizeZ: Number

  @JsName("bAllowCPUAccess")
  public open var allowCpuAccess: Boolean

  @JsName("SourceFilePath")
  public open var sourceFilePath: String

  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VectorFieldStatic

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VectorFieldStatic

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VectorFieldStatic

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VectorFieldStatic

    @JsName("C")
    public fun copy(other: UObject): VectorFieldStatic

    @JsName("C")
    public fun copy(other: Any): VectorFieldStatic
  }
}

public open external class VectorFieldAnimated(
  outer: UObject,
) : VectorField {
  @JsName("Texture")
  public open var texture: Texture2d

  @JsName("ConstructionOp")
  public open var constructionOp: String

  @JsName("VolumeSizeX")
  public open var volumeSizeX: Number

  @JsName("VolumeSizeY")
  public open var volumeSizeY: Number

  @JsName("VolumeSizeZ")
  public open var volumeSizeZ: Number

  @JsName("SubImagesX")
  public open var subImagesX: Number

  @JsName("SubImagesY")
  public open var subImagesY: Number

  @JsName("FrameCount")
  public open var frameCount: Number

  @JsName("FramesPerSecond")
  public open var framesPerSecond: Number

  @JsName("bLoop")
  public open var loop: Boolean

  @JsName("NoiseField")
  public open var noiseField: VectorFieldStatic

  @JsName("NoiseScale")
  public open var noiseScale: Number

  @JsName("NoiseMax")
  public open var noiseMax: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VectorFieldAnimated

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VectorFieldAnimated

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VectorFieldAnimated

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VectorFieldAnimated

    @JsName("C")
    public fun copy(other: UObject): VectorFieldAnimated

    @JsName("C")
    public fun copy(other: Any): VectorFieldAnimated
  }
}

public open external class VectorFieldComponent(
  outer: UObject,
) : PrimitiveComponent {
  @JsName("VectorField")
  public open var vectorField: VectorField

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("Tightness")
  public open var tightness: Number

  @JsName("bPreviewVectorField")
  public open var previewVectorField: Boolean

  @JsName("SetIntensity")
  public open fun setIntensity(newIntensity: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VectorFieldComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VectorFieldComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VectorFieldComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VectorFieldComponent

    @JsName("C")
    public fun copy(other: UObject): VectorFieldComponent

    @JsName("C")
    public fun copy(other: Any): VectorFieldComponent
  }
}

public open external class VectorFieldVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("VectorFieldComponent")
  public open var vectorFieldComponent: VectorFieldComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VectorFieldVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VectorFieldVolume

    @JsName("C")
    public fun copy(other: UObject): VectorFieldVolume

    @JsName("C")
    public fun copy(other: Any): VectorFieldVolume
  }
}

public open external class ViewportStatsSubsystem(
  outer: UObject,
) : WorldSubsystem {
  @JsName("RemoveDisplayDelegate")
  public open fun removeDisplayDelegate(indexToRemove: Number): Unit

  @JsName("AddTimedDisplay")
  public open fun addTimedDisplay(
    text: String,
    color: LinearColor,
    duration: Number,
    displayOffset: Vector2d,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportStatsSubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportStatsSubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportStatsSubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportStatsSubsystem

    @JsName("C")
    public fun copy(other: UObject): ViewportStatsSubsystem

    @JsName("C")
    public fun copy(other: Any): ViewportStatsSubsystem
  }
}

public open external class VirtualTexture(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VirtualTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VirtualTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VirtualTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VirtualTexture

    @JsName("C")
    public fun copy(other: UObject): VirtualTexture

    @JsName("C")
    public fun copy(other: Any): VirtualTexture
  }
}

public open external class LightMapVirtualTexture(
  outer: UObject,
) : VirtualTexture {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LightMapVirtualTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LightMapVirtualTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LightMapVirtualTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LightMapVirtualTexture

    @JsName("C")
    public fun copy(other: UObject): LightMapVirtualTexture

    @JsName("C")
    public fun copy(other: Any): LightMapVirtualTexture
  }
}

public open external class VirtualTextureSpacePoolConfig {
  @JsName("MinTileSize")
  public open var minTileSize: Number

  @JsName("MaxTileSize")
  public open var maxTileSize: Number

  @JsName("Formats")
  public open var formats: Array<String>

  @JsName("SizeInMegabyte")
  public open var sizeInMegabyte: Number

  @JsName("bEnableResidencyMipMapBias")
  public open var enableResidencyMipMapBias: Boolean

  @JsName("bAllowSizeScale")
  public open var allowSizeScale: Boolean

  @JsName("ScalabilityGroup")
  public open var scalabilityGroup: Any

  @JsName("MinScaledSizeInMegabyte")
  public open var minScaledSizeInMegabyte: Number

  @JsName("MaxScaledSizeInMegabyte")
  public open var maxScaledSizeInMegabyte: Number

  public open fun clone(): VirtualTextureSpacePoolConfig

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): VirtualTextureSpacePoolConfig

    @JsName("C")
    public fun copy(other: Any): VirtualTextureSpacePoolConfig
  }
}

public open external class VirtualTexturePoolConfig(
  outer: UObject,
) : UObject {
  @JsName("DefaultSizeInMegabyte")
  public open var defaultSizeInMegabyte: Number

  @JsName("Pools")
  public open var pools: Array<VirtualTextureSpacePoolConfig>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VirtualTexturePoolConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VirtualTexturePoolConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VirtualTexturePoolConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VirtualTexturePoolConfig

    @JsName("C")
    public fun copy(other: UObject): VirtualTexturePoolConfig

    @JsName("C")
    public fun copy(other: Any): VirtualTexturePoolConfig
  }
}

public open external class VisualLoggerAutomationTests(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VisualLoggerAutomationTests

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VisualLoggerAutomationTests

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerAutomationTests

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerAutomationTests

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerAutomationTests

    @JsName("C")
    public fun copy(other: Any): VisualLoggerAutomationTests
  }
}

public open external class VisualLoggerDebugSnapshotInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VisualLoggerDebugSnapshotInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VisualLoggerDebugSnapshotInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerDebugSnapshotInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerDebugSnapshotInterface

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerDebugSnapshotInterface

    @JsName("C")
    public fun copy(other: Any): VisualLoggerDebugSnapshotInterface
  }
}

public open external class VisualLoggerFilterVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerFilterVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerFilterVolume

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerFilterVolume

    @JsName("C")
    public fun copy(other: Any): VisualLoggerFilterVolume
  }
}

public open external class VisualLoggerKismetLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VisualLoggerKismetLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VisualLoggerKismetLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerKismetLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerKismetLibrary

    @JsName("RedirectVislog")
    public fun redirectVislog(sourceOwner: UObject, destinationOwner: UObject): Unit

    @JsName("LogText")
    public fun logText(
      worldContextObject: UObject,
      text: String,
      logCategory: String,
      addToMessageLog: Boolean,
    ): Unit

    @JsName("LogSegment")
    public fun logSegment(
      worldContextObject: UObject,
      segmentStart: Vector,
      segmentEnd: Vector,
      text: String,
      objectColor: LinearColor,
      thickness: Number,
      categoryName: String,
      addToMessageLog: Boolean,
    ): Unit

    @JsName("LogLocation")
    public fun logLocation(
      worldContextObject: UObject,
      location: Vector,
      text: String,
      objectColor: LinearColor,
      radius: Number,
      logCategory: String,
      addToMessageLog: Boolean,
    ): Unit

    @JsName("LogBox")
    public fun logBox(
      worldContextObject: UObject,
      boxShape: Box,
      text: String,
      objectColor: LinearColor,
      logCategory: String,
      addToMessageLog: Boolean,
    ): Unit

    @JsName("EnableRecording")
    public fun enableRecording(enabled: Boolean): Unit

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerKismetLibrary

    @JsName("C")
    public fun copy(other: Any): VisualLoggerKismetLibrary
  }
}

public open external class VoiceChannel(
  outer: UObject,
) : Channel {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VoiceChannel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VoiceChannel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VoiceChannel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VoiceChannel

    @JsName("C")
    public fun copy(other: UObject): VoiceChannel

    @JsName("C")
    public fun copy(other: Any): VoiceChannel
  }
}

public open external class VoiceSettings {
  @JsName("ComponentToAttachTo")
  public open var componentToAttachTo: SceneComponent

  @JsName("AttenuationSettings")
  public open var attenuationSettings: SoundAttenuation

  @JsName("SourceEffectChain")
  public open var sourceEffectChain: SoundEffectSourcePresetChain

  public open fun clone(): VoiceSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): VoiceSettings

    @JsName("C")
    public fun copy(other: Any): VoiceSettings
  }
}

@JsName("VOIPTalker")
public open external class VoipTalker(
  outer: UObject,
) : ActorComponent {
  @JsName("Settings")
  public open var settings: VoiceSettings

  @JsName("RegisterWithPlayerState")
  public open fun registerWithPlayerState(owningState: PlayerState): Unit

  @JsName("GetVoiceLevel")
  public open fun getVoiceLevel(): Number

  @JsName("BPOnTalkingEnd")
  public open fun bpOnTalkingEnd(): Unit

  @JsName("BPOnTalkingBegin")
  public open fun bpOnTalkingBegin(audioComponent: AudioComponent): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VoipTalker

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VoipTalker

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VoipTalker

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VoipTalker

    @JsName("CreateTalkerForPlayer")
    public fun createTalkerForPlayer(owningState: PlayerState): VoipTalker

    @JsName("C")
    public fun copy(other: UObject): VoipTalker

    @JsName("C")
    public fun copy(other: Any): VoipTalker
  }
}

@JsName("VOIPStatics")
public open external class VoipStatics(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VoipStatics

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VoipStatics

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VoipStatics

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VoipStatics

    @JsName("SetMicThreshold")
    public fun setMicThreshold(inThreshold: Number): Unit

    @JsName("C")
    public fun copy(other: UObject): VoipStatics

    @JsName("C")
    public fun copy(other: Any): VoipStatics
  }
}

public open external class VolumetricCloudComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("LayerBottomAltitude")
  public open var layerBottomAltitude: Number

  @JsName("LayerHeight")
  public open var layerHeight: Number

  @JsName("TracingStartMaxDistance")
  public open var tracingStartMaxDistance: Number

  @JsName("TracingMaxDistance")
  public open var tracingMaxDistance: Number

  @JsName("PlanetRadius")
  public open var planetRadius: Number

  @JsName("GroundAlbedo")
  public open var groundAlbedo: Color

  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("bUsePerSampleAtmosphericLightTransmittance")
  public open var usePerSampleAtmosphericLightTransmittance: Boolean

  @JsName("SkyLightCloudBottomOcclusion")
  public open var skyLightCloudBottomOcclusion: Number

  @JsName("ViewSampleCountScale")
  public open var viewSampleCountScale: Number

  @JsName("ReflectionViewSampleCountScale")
  public open var reflectionViewSampleCountScale: Number

  @JsName("ReflectionSampleCountScale")
  public open var reflectionSampleCountScale: Number

  @JsName("ShadowViewSampleCountScale")
  public open var shadowViewSampleCountScale: Number

  @JsName("ShadowReflectionViewSampleCountScale")
  public open var shadowReflectionViewSampleCountScale: Number

  @JsName("ShadowReflectionSampleCountScale")
  public open var shadowReflectionSampleCountScale: Number

  @JsName("ShadowTracingDistance")
  public open var shadowTracingDistance: Number

  @JsName("StopTracingTransmittanceThreshold")
  public open var stopTracingTransmittanceThreshold: Number

  @JsName("SetViewSampleCountScale")
  public open fun setViewSampleCountScale(newValue: Number): Unit

  @JsName("SetTracingStartMaxDistance")
  public open fun setTracingStartMaxDistance(newValue: Number): Unit

  @JsName("SetTracingMaxDistance")
  public open fun setTracingMaxDistance(newValue: Number): Unit

  @JsName("SetStopTracingTransmittanceThreshold")
  public open fun setStopTracingTransmittanceThreshold(newValue: Number): Unit

  @JsName("SetSkyLightCloudBottomOcclusion")
  public open fun setSkyLightCloudBottomOcclusion(newValue: Number): Unit

  @JsName("SetShadowViewSampleCountScale")
  public open fun setShadowViewSampleCountScale(newValue: Number): Unit

  @JsName("SetShadowTracingDistance")
  public open fun setShadowTracingDistance(newValue: Number): Unit

  @JsName("SetShadowReflectionViewSampleCountScale")
  public open fun setShadowReflectionViewSampleCountScale(newValue: Number): Unit

  @JsName("SetShadowReflectionSampleCountScale")
  public open fun setShadowReflectionSampleCountScale(newValue: Number): Unit

  @JsName("SetReflectionViewSampleCountScale")
  public open fun setReflectionViewSampleCountScale(newValue: Number): Unit

  @JsName("SetReflectionSampleCountScale")
  public open fun setReflectionSampleCountScale(newValue: Number): Unit

  @JsName("SetPlanetRadius")
  public open fun setPlanetRadius(newValue: Number): Unit

  @JsName("SetMaterial")
  public open fun setMaterial(newValue: MaterialInterface): Unit

  @JsName("SetLayerHeight")
  public open fun setLayerHeight(newValue: Number): Unit

  @JsName("SetLayerBottomAltitude")
  public open fun setLayerBottomAltitude(newValue: Number): Unit

  @JsName("SetGroundAlbedo")
  public open fun setGroundAlbedo(newValue: Color): Unit

  @JsName("SetbUsePerSampleAtmosphericLightTransmittance")
  public open fun setbUsePerSampleAtmosphericLightTransmittance(newValue: Boolean): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VolumetricCloudComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VolumetricCloudComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VolumetricCloudComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VolumetricCloudComponent

    @JsName("C")
    public fun copy(other: UObject): VolumetricCloudComponent

    @JsName("C")
    public fun copy(other: Any): VolumetricCloudComponent
  }
}

public open external class VolumetricCloud(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Info {
  @JsName("VolumetricCloudComponent")
  public open var volumetricCloudComponent: VolumetricCloudComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VolumetricCloud

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VolumetricCloud

    @JsName("C")
    public fun copy(other: UObject): VolumetricCloud

    @JsName("C")
    public fun copy(other: Any): VolumetricCloud
  }
}

public open external class VolumetricLightmapDensityVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  @JsName("AllowedMipLevelRange")
  public open var allowedMipLevelRange: Int32Interval

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VolumetricLightmapDensityVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VolumetricLightmapDensityVolume

    @JsName("C")
    public fun copy(other: UObject): VolumetricLightmapDensityVolume

    @JsName("C")
    public fun copy(other: Any): VolumetricLightmapDensityVolume
  }
}

@JsName("EWindSourceType")
public external object WindSourceType {
  public var Directional: String

  public var Point: String

  @JsName("EWindSourceType_MAX")
  public var Max: String
}

public open external class WindDirectionalSourceComponent(
  outer: UObject,
) : SceneComponent {
  @JsName("Strength")
  public open var strength: Number

  @JsName("Speed")
  public open var speed: Number

  @JsName("MinGustAmount")
  public open var minGustAmount: Number

  @JsName("MaxGustAmount")
  public open var maxGustAmount: Number

  @JsName("Radius")
  public open var radius: Number

  @JsName("bPointWind")
  public open var pointWind: Boolean

  @JsName("SetWindType")
  public open fun setWindType(inNewType: String): Unit

  @JsName("SetStrength")
  public open fun setStrength(inNewStrength: Number): Unit

  @JsName("SetSpeed")
  public open fun setSpeed(inNewSpeed: Number): Unit

  @JsName("SetRadius")
  public open fun setRadius(inNewRadius: Number): Unit

  @JsName("SetMinimumGustAmount")
  public open fun setMinimumGustAmount(inNewMinGust: Number): Unit

  @JsName("SetMaximumGustAmount")
  public open fun setMaximumGustAmount(inNewMaxGust: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WindDirectionalSourceComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WindDirectionalSourceComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WindDirectionalSourceComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WindDirectionalSourceComponent

    @JsName("C")
    public fun copy(other: UObject): WindDirectionalSourceComponent

    @JsName("C")
    public fun copy(other: Any): WindDirectionalSourceComponent
  }
}

public open external class WindDirectionalSource(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Info {
  @JsName("Component")
  public open var component: WindDirectionalSourceComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WindDirectionalSource

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WindDirectionalSource

    @JsName("C")
    public fun copy(other: UObject): WindDirectionalSource

    @JsName("C")
    public fun copy(other: Any): WindDirectionalSource
  }
}

public open external class WorldPartitionEditorCell(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionEditorCell

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionEditorCell

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionEditorCell

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionEditorCell

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionEditorCell

    @JsName("C")
    public fun copy(other: Any): WorldPartitionEditorCell
  }
}

public open external class WorldPartitionEditorPerProjectUserSettings(
  outer: UObject,
) : UObject {
  @JsName("bHideEditorDataLayers")
  public open var hideEditorDataLayers: Boolean

  @JsName("bHideRuntimeDataLayers")
  public open var hideRuntimeDataLayers: Boolean

  @JsName("bHideDataLayerActors")
  public open var hideDataLayerActors: Boolean

  @JsName("bHideUnloadedActors")
  public open var hideUnloadedActors: Boolean

  @JsName("bShowOnlySelectedActors")
  public open var showOnlySelectedActors: Boolean

  @JsName("bHighlightSelectedDataLayers")
  public open var highlightSelectedDataLayers: Boolean

  @JsName("bDisableLoadingOfLastLoadedCells")
  public open var disableLoadingOfLastLoadedCells: Boolean

  @JsName("bBugItGoLoadCells")
  public open var bugItGoLoadCells: Boolean

  @JsName("bShowCellCoords")
  public open var showCellCoords: Boolean

  @JsName("PerWorldEditorSettings")
  public open var perWorldEditorSettings: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionEditorPerProjectUserSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        WorldPartitionEditorPerProjectUserSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionEditorPerProjectUserSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionEditorPerProjectUserSettings

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionEditorPerProjectUserSettings

    @JsName("C")
    public fun copy(other: Any): WorldPartitionEditorPerProjectUserSettings
  }
}

public open external class WorldPartitionEditorSpatialHash(
  outer: UObject,
) : WorldPartitionEditorHash {
  @JsName("CellSize")
  public open var cellSize: Number

  @JsName("WantedCellSize")
  public open var wantedCellSize: Number

  @JsName("Cells")
  public open var cells: Any

  @JsName("AlwaysLoadedCell")
  public open var alwaysLoadedCell: WorldPartitionEditorCell

  @JsName("WorldImage")
  public open var worldImage: SoftObjectPath

  @JsName("WorldImageTopLeftW")
  public open var worldImageTopLeftW: Vector2d

  @JsName("WorldImageBottomRightW")
  public open var worldImageBottomRightW: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionEditorSpatialHash

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionEditorSpatialHash

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionEditorSpatialHash

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionEditorSpatialHash

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionEditorSpatialHash

    @JsName("C")
    public fun copy(other: Any): WorldPartitionEditorSpatialHash
  }
}

public open external class WorldPartitionLevelStreamingDynamic(
  outer: UObject,
) : LevelStreamingDynamic {
  @JsName("RuntimeLevel")
  public open var runtimeLevel: Level

  @JsName("bShouldBeAlwaysLoaded")
  public open var shouldBeAlwaysLoaded: Boolean

  @JsName("UnsavedActorsContainer")
  public open var unsavedActorsContainer: ActorContainer

  @JsName("StreamingCell")
  public open var streamingCell: Any

  @JsName("OuterWorldPartition")
  public open var outerWorldPartition: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionLevelStreamingDynamic

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionLevelStreamingDynamic

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionLevelStreamingDynamic

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionLevelStreamingDynamic

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionLevelStreamingDynamic

    @JsName("C")
    public fun copy(other: Any): WorldPartitionLevelStreamingDynamic
  }
}

public open external class WorldPartitionLevelStreamingPolicy(
  outer: UObject,
) : WorldPartitionStreamingPolicy {
  @JsName("ActorToCellRemapping")
  public open var actorToCellRemapping: Any

  @JsName("SubObjectsToCellRemapping")
  public open var subObjectsToCellRemapping: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionLevelStreamingPolicy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionLevelStreamingPolicy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionLevelStreamingPolicy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionLevelStreamingPolicy

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionLevelStreamingPolicy

    @JsName("C")
    public fun copy(other: Any): WorldPartitionLevelStreamingPolicy
  }
}

public open external class WorldPartitionMiniMap(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Info {
  @JsName("MiniMapWorldBounds")
  public open var miniMapWorldBounds: Box

  @JsName("UVOffset")
  public open var uvOffset: Box2d

  @JsName("MiniMapTexture")
  public open var miniMapTexture: Texture2d

  @JsName("ExcludedDataLayers")
  public open var excludedDataLayers: Any

  @JsName("MiniMapTileSize")
  public open var miniMapTileSize: Number

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionMiniMap

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionMiniMap

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionMiniMap

    @JsName("C")
    public fun copy(other: Any): WorldPartitionMiniMap
  }
}

public open external class WorldPartitionReplay(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("StreamingSourceNames")
  public open var streamingSourceNames: Array<String>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionReplay

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionReplay

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionReplay

    @JsName("C")
    public fun copy(other: Any): WorldPartitionReplay
  }
}

public open external class WorldPartitionRuntimeSpatialHashCell(
  outer: UObject,
) : WorldPartitionRuntimeCell {
  public open var position: Vector

  @JsName("Extent")
  public open var extent: Number

  @JsName("Level")
  public open var level: Number

  @JsName("UnsavedActorsContainer")
  public open var unsavedActorsContainer: ActorContainer

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionRuntimeSpatialHashCell

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionRuntimeSpatialHashCell

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionRuntimeSpatialHashCell

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionRuntimeSpatialHashCell

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionRuntimeSpatialHashCell

    @JsName("C")
    public fun copy(other: Any): WorldPartitionRuntimeSpatialHashCell
  }
}

public open external class WorldPartitionRuntimeCellObjectMapping {
  @JsName("Package")
  public open var `package`: String

  @JsName("Path")
  public open var path: String

  @JsName("ContainerID")
  public open var containerId: ActorContainerId

  @JsName("ContainerTransform")
  public open var containerTransform: Transform

  @JsName("ContainerPackage")
  public open var containerPackage: String

  @JsName("LoadedPath")
  public open var loadedPath: String

  public open fun clone(): WorldPartitionRuntimeCellObjectMapping

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WorldPartitionRuntimeCellObjectMapping

    @JsName("C")
    public fun copy(other: Any): WorldPartitionRuntimeCellObjectMapping
  }
}

public open external class WorldPartitionRuntimeLevelStreamingCell(
  outer: UObject,
) : WorldPartitionRuntimeSpatialHashCell {
  @JsName("Packages")
  public open var packages: Array<WorldPartitionRuntimeCellObjectMapping>

  @JsName("ActorFolders")
  public open var actorFolders: Any

  @JsName("LevelStreaming")
  public open var levelStreaming: WorldPartitionLevelStreamingDynamic

  @JsName("OnLevelShown")
  public open fun onLevelShown(): Unit

  @JsName("OnLevelHidden")
  public open fun onLevelHidden(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionRuntimeLevelStreamingCell

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionRuntimeLevelStreamingCell

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionRuntimeLevelStreamingCell

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionRuntimeLevelStreamingCell

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionRuntimeLevelStreamingCell

    @JsName("C")
    public fun copy(other: Any): WorldPartitionRuntimeLevelStreamingCell
  }
}

public open external class SpatialHashRuntimeGrid {
  @JsName("GridName")
  public open var gridName: String

  @JsName("CellSize")
  public open var cellSize: Number

  @JsName("LoadingRange")
  public open var loadingRange: Number

  @JsName("bBlockOnSlowStreaming")
  public open var blockOnSlowStreaming: Boolean

  @JsName("Priority")
  public open var priority: Number

  @JsName("DebugColor")
  public open var debugColor: LinearColor

  @JsName("bClientOnlyVisible")
  public open var clientOnlyVisible: Boolean

  @JsName("HLODLayer")
  public open var hlodLayer: HlodLayer

  public open fun clone(): SpatialHashRuntimeGrid

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpatialHashRuntimeGrid

    @JsName("C")
    public fun copy(other: Any): SpatialHashRuntimeGrid
  }
}

public open external class SpatialHashRuntimeGridInfo(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Info {
  @JsName("GridSettings")
  public open var gridSettings: SpatialHashRuntimeGrid

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpatialHashRuntimeGridInfo

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpatialHashRuntimeGridInfo

    @JsName("C")
    public fun copy(other: UObject): SpatialHashRuntimeGridInfo

    @JsName("C")
    public fun copy(other: Any): SpatialHashRuntimeGridInfo
  }
}

public open external class WorldPartitionRuntimeSpatialHashGridPreviewer {
  @JsName("Material")
  public open var material: Material

  @JsName("Mid")
  public open var mid: MaterialInstanceDynamic

  @JsName("Volume")
  public open var volume: PostProcessVolume

  public open fun clone(): WorldPartitionRuntimeSpatialHashGridPreviewer

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WorldPartitionRuntimeSpatialHashGridPreviewer

    @JsName("C")
    public fun copy(other: Any): WorldPartitionRuntimeSpatialHashGridPreviewer
  }
}

public open external class SpatialHashStreamingGridLayerCell {
  @JsName("GridCells")
  public open var gridCells: Array<WorldPartitionRuntimeSpatialHashCell>

  public open fun clone(): SpatialHashStreamingGridLayerCell

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpatialHashStreamingGridLayerCell

    @JsName("C")
    public fun copy(other: Any): SpatialHashStreamingGridLayerCell
  }
}

public open external class SpatialHashStreamingGridLevel {
  @JsName("LayerCells")
  public open var layerCells: Array<SpatialHashStreamingGridLayerCell>

  @JsName("LayerCellsMapping")
  public open var layerCellsMapping: Any

  public open fun clone(): SpatialHashStreamingGridLevel

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpatialHashStreamingGridLevel

    @JsName("C")
    public fun copy(other: Any): SpatialHashStreamingGridLevel
  }
}

public open external class SpatialHashStreamingGrid {
  @JsName("GridName")
  public open var gridName: String

  @JsName("Origin")
  public open var origin: Vector

  @JsName("CellSize")
  public open var cellSize: Number

  @JsName("LoadingRange")
  public open var loadingRange: Number

  @JsName("bBlockOnSlowStreaming")
  public open var blockOnSlowStreaming: Boolean

  @JsName("DebugColor")
  public open var debugColor: LinearColor

  @JsName("GridLevels")
  public open var gridLevels: Array<SpatialHashStreamingGridLevel>

  @JsName("WorldBounds")
  public open var worldBounds: Box

  @JsName("bClientOnlyVisible")
  public open var clientOnlyVisible: Boolean

  @JsName("HLODLayer")
  public open var hlodLayer: HlodLayer

  public open fun clone(): SpatialHashStreamingGrid

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpatialHashStreamingGrid

    @JsName("C")
    public fun copy(other: Any): SpatialHashStreamingGrid
  }
}

public open external class WorldPartitionRuntimeSpatialHash(
  outer: UObject,
) : WorldPartitionRuntimeHash {
  @JsName("Grids")
  public open var grids: Array<SpatialHashRuntimeGrid>

  @JsName("bPreviewGrids")
  public open var previewGrids: Boolean

  @JsName("GridPreviewer")
  public open var gridPreviewer: WorldPartitionRuntimeSpatialHashGridPreviewer

  @JsName("StreamingGrids")
  public open var streamingGrids: Array<SpatialHashStreamingGrid>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionRuntimeSpatialHash

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionRuntimeSpatialHash

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionRuntimeSpatialHash

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionRuntimeSpatialHash

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionRuntimeSpatialHash

    @JsName("C")
    public fun copy(other: Any): WorldPartitionRuntimeSpatialHash
  }
}

public open external class StreamingSourceShape {
  @JsName("bUseGridLoadingRange")
  public open var useGridLoadingRange: Boolean

  @JsName("Radius")
  public open var radius: Number

  @JsName("bIsSector")
  public open var isSector: Boolean

  @JsName("SectorAngle")
  public open var sectorAngle: Number

  @JsName("Location")
  public open var location: Vector

  @JsName("Rotation")
  public open var rotation: Rotator

  public open fun clone(): StreamingSourceShape

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): StreamingSourceShape

    @JsName("C")
    public fun copy(other: Any): StreamingSourceShape
  }
}

@JsName("EStreamingSourcePriority")
public external object StreamingSourcePriority {
  public var Highest: String

  public var High: String

  public var Normal: String

  public var Low: String

  public var Lowest: String

  public var Default: String

  @JsName("EStreamingSourcePriority_MAX")
  public var Max: String
}

@JsName("EStreamingSourceTargetState")
public external object StreamingSourceTargetState {
  public var Loaded: String

  public var Activated: String

  @JsName("EStreamingSourceTargetState_MAX")
  public var Max: String
}

public open external class WorldPartitionStreamingSourceComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("DefaultVisualizerLoadingRange")
  public open var defaultVisualizerLoadingRange: Number

  @JsName("TargetGrid")
  public open var targetGrid: String

  @JsName("DebugColor")
  public open var debugColor: Color

  @JsName("TargetHLODLayer")
  public open var targetHlodLayer: HlodLayer

  @JsName("Shapes")
  public open var shapes: Array<StreamingSourceShape>

  @JsName("Priority")
  public open var priority: String

  @JsName("bStreamingSourceEnabled")
  public open var streamingSourceEnabled: Boolean

  @JsName("TargetState")
  public open var targetState: String

  @JsName("IsStreamingSourceEnabled")
  public open fun isStreamingSourceEnabled(): Boolean

  @JsName("IsStreamingCompleted")
  public open fun isStreamingCompleted(): Boolean

  @JsName("EnableStreamingSource")
  public open fun enableStreamingSource(): Unit

  @JsName("DisableStreamingSource")
  public open fun disableStreamingSource(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionStreamingSourceComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionStreamingSourceComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionStreamingSourceComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionStreamingSourceComponent

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionStreamingSourceComponent

    @JsName("C")
    public fun copy(other: Any): WorldPartitionStreamingSourceComponent
  }
}

@JsName("EWorldPartitionRuntimeCellState")
public external object WorldPartitionRuntimeCellState {
  public var Unloaded: String

  public var Loaded: String

  public var Activated: String

  @JsName("EWorldPartitionRuntimeCellState_MAX")
  public var Max: String
}

public open external class WorldPartitionStreamingQuerySource {
  @JsName("Location")
  public open var location: Vector

  @JsName("Radius")
  public open var radius: Number

  @JsName("bUseGridLoadingRange")
  public open var useGridLoadingRange: Boolean

  @JsName("DataLayers")
  public open var dataLayers: Array<String>

  @JsName("bDataLayersOnly")
  public open var dataLayersOnly: Boolean

  @JsName("bSpatialQuery")
  public open var spatialQuery: Boolean

  public open fun clone(): WorldPartitionStreamingQuerySource

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WorldPartitionStreamingQuerySource

    @JsName("C")
    public fun copy(other: Any): WorldPartitionStreamingQuerySource
  }
}

public open external class WorldPartitionSubsystem(
  outer: UObject,
) : TickableWorldSubsystem {
  @JsName("IsStreamingCompleted")
  public open fun isStreamingCompleted(
    queryState: String,
    querySources: Array<WorldPartitionStreamingQuerySource>,
    exactState: Boolean,
  ): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionSubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionSubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionSubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionSubsystem

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionSubsystem

    @JsName("C")
    public fun copy(other: Any): WorldPartitionSubsystem
  }
}

public open external class WorldPartitionVolume(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Volume {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionVolume

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionVolume

    @JsName("C")
    public fun copy(other: Any): WorldPartitionVolume
  }
}

@JsName("HierarchicalLODSetup")
public open external class HierarchicalLodSetup(
  outer: UObject,
) : UObject {
  @JsName("HierarchicalLODSetup")
  public open var hierarchicalLodSetup: Array<HierarchicalSimplification>

  @JsName("OverrideBaseMaterial")
  public open var overrideBaseMaterial: MaterialInterface

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): HierarchicalLodSetup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): HierarchicalLodSetup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): HierarchicalLodSetup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): HierarchicalLodSetup

    @JsName("C")
    public fun copy(other: UObject): HierarchicalLodSetup

    @JsName("C")
    public fun copy(other: Any): HierarchicalLodSetup
  }
}

public open external class MoviePlayerSettings(
  outer: UObject,
) : UObject {
  @JsName("bWaitForMoviesToComplete")
  public open var waitForMoviesToComplete: Boolean

  @JsName("bMoviesAreSkippable")
  public open var moviesAreSkippable: Boolean

  @JsName("StartupMovies")
  public open var startupMovies: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MoviePlayerSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MoviePlayerSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MoviePlayerSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MoviePlayerSettings

    @JsName("C")
    public fun copy(other: UObject): MoviePlayerSettings

    @JsName("C")
    public fun copy(other: Any): MoviePlayerSettings
  }
}

@JsName("SHAHashData")
public open external class ShaHashData {
  @JsName("Hash")
  public open var hash: Number

  public open fun clone(): ShaHashData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ShaHashData

    @JsName("C")
    public fun copy(other: Any): ShaHashData
  }
}

public open external class ChunkPartData {
  @JsName("Guid")
  public open var guid: Guid

  @JsName("Offset")
  public open var offset: Any

  @JsName("Size")
  public open var size: Any

  public open fun clone(): ChunkPartData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChunkPartData

    @JsName("C")
    public fun copy(other: Any): ChunkPartData
  }
}

public open external class FileManifestData {
  @JsName("Filename")
  public open var filename: String

  @JsName("FileHash")
  public open var fileHash: ShaHashData

  @JsName("FileChunkParts")
  public open var fileChunkParts: Array<ChunkPartData>

  @JsName("InstallTags")
  public open var installTags: Array<String>

  @JsName("bIsUnixExecutable")
  public open var isUnixExecutable: Boolean

  @JsName("SymlinkTarget")
  public open var symlinkTarget: String

  @JsName("bIsReadOnly")
  public open var isReadOnly: Boolean

  @JsName("bIsCompressed")
  public open var isCompressed: Boolean

  public open fun clone(): FileManifestData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FileManifestData

    @JsName("C")
    public fun copy(other: Any): FileManifestData
  }
}

public open external class ChunkInfoData {
  @JsName("Guid")
  public open var guid: Guid

  @JsName("Hash")
  public open var hash: Any

  @JsName("ShaHash")
  public open var shaHash: ShaHashData

  @JsName("FileSize")
  public open var fileSize: Any

  @JsName("GroupNumber")
  public open var groupNumber: Number

  public open fun clone(): ChunkInfoData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChunkInfoData

    @JsName("C")
    public fun copy(other: Any): ChunkInfoData
  }
}

public open external class CustomFieldData {
  @JsName("Key")
  public open var key: String

  @JsName("Value")
  public open var value: String

  public open fun clone(): CustomFieldData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CustomFieldData

    @JsName("C")
    public fun copy(other: Any): CustomFieldData
  }
}

public open external class BuildPatchManifest(
  outer: UObject,
) : UObject {
  @JsName("ManifestFileVersion")
  public open var manifestFileVersion: Number

  @JsName("bIsFileData")
  public open var isFileData: Boolean

  @JsName("AppID")
  public open var appId: Any

  @JsName("AppName")
  public open var appName: String

  @JsName("BuildVersion")
  public open var buildVersion: String

  @JsName("LaunchExe")
  public open var launchExe: String

  @JsName("LaunchCommand")
  public open var launchCommand: String

  @JsName("PrereqIds")
  public open var prereqIds: Any

  @JsName("PrereqName")
  public open var prereqName: String

  @JsName("PrereqPath")
  public open var prereqPath: String

  @JsName("PrereqArgs")
  public open var prereqArgs: String

  @JsName("FileManifestList")
  public open var fileManifestList: Array<FileManifestData>

  @JsName("ChunkList")
  public open var chunkList: Array<ChunkInfoData>

  @JsName("CustomFields")
  public open var customFields: Array<CustomFieldData>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BuildPatchManifest

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BuildPatchManifest

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BuildPatchManifest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BuildPatchManifest

    @JsName("C")
    public fun copy(other: UObject): BuildPatchManifest

    @JsName("C")
    public fun copy(other: Any): BuildPatchManifest
  }
}

public open external class SoundFactory(
  outer: UObject,
) : Factory {
  @JsName("bAutoCreateCue")
  public open var autoCreateCue: Boolean

  @JsName("bIncludeAttenuationNode")
  public open var includeAttenuationNode: Boolean

  @JsName("bIncludeLoopingNode")
  public open var includeLoopingNode: Boolean

  @JsName("bIncludeModulatorNode")
  public open var includeModulatorNode: Boolean

  @JsName("CueVolume")
  public open var cueVolume: Number

  @JsName("CuePackageSuffix")
  public open var cuePackageSuffix: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundFactory

    @JsName("C")
    public fun copy(other: UObject): SoundFactory

    @JsName("C")
    public fun copy(other: Any): SoundFactory
  }
}

public open external class ReimportSoundFactory(
  outer: UObject,
) : SoundFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReimportSoundFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReimportSoundFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReimportSoundFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReimportSoundFactory

    @JsName("C")
    public fun copy(other: UObject): ReimportSoundFactory

    @JsName("C")
    public fun copy(other: Any): ReimportSoundFactory
  }
}

@JsName("EClusterConnectionTypeEnum")
public external object ClusterConnectionTypeEnum {
  @JsName("Chaos_PointImplicit")
  public var PointImplicit: String

  @JsName("Chaos_DelaunayTriangulation")
  public var DelaunayTriangulation: String

  @JsName("Chaos_MinimalSpanningSubsetDelaunayTriangulation")
  public var MinimalSpanningSubsetDelaunayTriangulation: String

  @JsName("Chaos_PointImplicitAugmentedWithMinimalDelaunay")
  public var PointImplicitAugmentedWithMinimalDelaunay: String

  @JsName("Chaos_None")
  public var None: String

  @JsName("Chaos_EClsuterCreationParameters_Max")
  public var EClsuterCreationParametersMax: String

  @JsName("Chaos_MAX")
  public var Max: String
}

public open external class ChaosDebugSubstepControl {
  @JsName("bPause")
  public open var pause: Boolean

  @JsName("bSubstep")
  public open var substep: Boolean

  @JsName("bStep")
  public open var step: Boolean

  public open fun clone(): ChaosDebugSubstepControl

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChaosDebugSubstepControl

    @JsName("C")
    public fun copy(other: Any): ChaosDebugSubstepControl
  }
}

public open external class ChaosEventListenerComponent(
  outer: UObject,
) : ActorComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosEventListenerComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosEventListenerComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosEventListenerComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosEventListenerComponent

    @JsName("C")
    public fun copy(other: UObject): ChaosEventListenerComponent

    @JsName("C")
    public fun copy(other: Any): ChaosEventListenerComponent
  }
}

public open external class ChaosGameplayEventDispatcher(
  outer: UObject,
) : ChaosEventListenerComponent {
  @JsName("CollisionEventRegistrations")
  public open var collisionEventRegistrations: Any

  @JsName("BreakEventRegistrations")
  public open var breakEventRegistrations: Any

  @JsName("RemovalEventRegistrations")
  public open var removalEventRegistrations: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosGameplayEventDispatcher

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosGameplayEventDispatcher

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosGameplayEventDispatcher

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosGameplayEventDispatcher

    @JsName("C")
    public fun copy(other: UObject): ChaosGameplayEventDispatcher

    @JsName("C")
    public fun copy(other: Any): ChaosGameplayEventDispatcher
  }
}

public open external class ChaosSolverActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("Properties")
  public open var properties: ChaosSolverConfiguration

  @JsName("TimeStepMultiplier")
  public open var timeStepMultiplier: Number

  @JsName("CollisionIterations")
  public open var collisionIterations: Number

  @JsName("PushOutIterations")
  public open var pushOutIterations: Number

  @JsName("PushOutPairIterations")
  public open var pushOutPairIterations: Number

  @JsName("ClusterConnectionFactor")
  public open var clusterConnectionFactor: Number

  @JsName("ClusterUnionConnectionType")
  public open var clusterUnionConnectionType: String

  @JsName("DoGenerateCollisionData")
  public open var doGenerateCollisionData: Boolean

  @JsName("CollisionFilterSettings")
  public open var collisionFilterSettings: SolverCollisionFilterSettings

  @JsName("DoGenerateBreakingData")
  public open var doGenerateBreakingData: Boolean

  @JsName("BreakingFilterSettings")
  public open var breakingFilterSettings: SolverBreakingFilterSettings

  @JsName("DoGenerateTrailingData")
  public open var doGenerateTrailingData: Boolean

  @JsName("TrailingFilterSettings")
  public open var trailingFilterSettings: SolverTrailingFilterSettings

  @JsName("MassScale")
  public open var massScale: Number

  @JsName("bGenerateContactGraph")
  public open var generateContactGraph: Boolean

  @JsName("bHasFloor")
  public open var hasFloor: Boolean

  @JsName("FloorHeight")
  public open var floorHeight: Number

  @JsName("ChaosDebugSubstepControl")
  public open var chaosDebugSubstepControl: ChaosDebugSubstepControl

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("GameplayEventDispatcherComponent")
  public open var gameplayEventDispatcherComponent: ChaosGameplayEventDispatcher

  @JsName("SetSolverActive")
  public open fun setSolverActive(active: Boolean): Unit

  @JsName("SetAsCurrentWorldSolver")
  public open fun setAsCurrentWorldSolver(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosSolverActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosSolverActor

    @JsName("C")
    public fun copy(other: UObject): ChaosSolverActor

    @JsName("C")
    public fun copy(other: Any): ChaosSolverActor
  }
}

public open external class LinuxTargetSettings(
  outer: UObject,
) : UObject {
  @JsName("SpatializationPlugin")
  public open var spatializationPlugin: String

  @JsName("ReverbPlugin")
  public open var reverbPlugin: String

  @JsName("OcclusionPlugin")
  public open var occlusionPlugin: String

  @JsName("SoundCueCookQualityIndex")
  public open var soundCueCookQualityIndex: Number

  @JsName("TargetedRHIs")
  public open var targetedRhIs: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LinuxTargetSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LinuxTargetSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LinuxTargetSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LinuxTargetSettings

    @JsName("C")
    public fun copy(other: UObject): LinuxTargetSettings

    @JsName("C")
    public fun copy(other: Any): LinuxTargetSettings
  }
}

public open external class VirtualizationFilterSettings(
  outer: UObject,
) : UObject {
  @JsName("ExcludePackagePaths")
  public open var excludePackagePaths: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VirtualizationFilterSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VirtualizationFilterSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VirtualizationFilterSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VirtualizationFilterSettings

    @JsName("C")
    public fun copy(other: UObject): VirtualizationFilterSettings

    @JsName("C")
    public fun copy(other: Any): VirtualizationFilterSettings
  }
}

public open external class AudioBusFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioBusFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioBusFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioBusFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioBusFactory

    @JsName("C")
    public fun copy(other: UObject): AudioBusFactory

    @JsName("C")
    public fun copy(other: Any): AudioBusFactory
  }
}

public open external class AudioEditorSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bPinSoundCueInAssetMenu")
  public open var pinSoundCueInAssetMenu: Boolean

  @JsName("bPinSoundCueTemplateInAssetMenu")
  public open var pinSoundCueTemplateInAssetMenu: Boolean

  @JsName("bPinSoundAttenuationInAssetMenu")
  public open var pinSoundAttenuationInAssetMenu: Boolean

  @JsName("bPinSoundConcurrencyInAssetMenu")
  public open var pinSoundConcurrencyInAssetMenu: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioEditorSettings

    @JsName("C")
    public fun copy(other: UObject): AudioEditorSettings

    @JsName("C")
    public fun copy(other: Any): AudioEditorSettings
  }
}

public open external class DialogueVoiceFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DialogueVoiceFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DialogueVoiceFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DialogueVoiceFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DialogueVoiceFactory

    @JsName("C")
    public fun copy(other: UObject): DialogueVoiceFactory

    @JsName("C")
    public fun copy(other: Any): DialogueVoiceFactory
  }
}

public open external class DialogueWaveFactory(
  outer: UObject,
) : Factory {
  @JsName("InitialSoundWave")
  public open var initialSoundWave: SoundWave

  @JsName("InitialSpeakerVoice")
  public open var initialSpeakerVoice: DialogueVoice

  @JsName("HasSetInitialTargetVoice")
  public open var hasSetInitialTargetVoice: Boolean

  @JsName("InitialTargetVoices")
  public open var initialTargetVoices: Array<DialogueVoice>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DialogueWaveFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DialogueWaveFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DialogueWaveFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DialogueWaveFactory

    @JsName("C")
    public fun copy(other: UObject): DialogueWaveFactory

    @JsName("C")
    public fun copy(other: Any): DialogueWaveFactory
  }
}

public open external class ReverbEffectFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReverbEffectFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReverbEffectFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReverbEffectFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReverbEffectFactory

    @JsName("C")
    public fun copy(other: UObject): ReverbEffectFactory

    @JsName("C")
    public fun copy(other: Any): ReverbEffectFactory
  }
}

public open external class SoundAttenuationFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundAttenuationFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundAttenuationFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundAttenuationFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundAttenuationFactory

    @JsName("C")
    public fun copy(other: UObject): SoundAttenuationFactory

    @JsName("C")
    public fun copy(other: Any): SoundAttenuationFactory
  }
}

public open external class SoundClassFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundClassFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundClassFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundClassFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundClassFactory

    @JsName("C")
    public fun copy(other: UObject): SoundClassFactory

    @JsName("C")
    public fun copy(other: Any): SoundClassFactory
  }
}

public open external class SoundClassGraph(
  outer: UObject,
) : EdGraph {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundClassGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundClassGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundClassGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundClassGraph

    @JsName("C")
    public fun copy(other: UObject): SoundClassGraph

    @JsName("C")
    public fun copy(other: Any): SoundClassGraph
  }
}

public open external class SoundClassGraphNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("SoundClass")
  public open var soundClass: SoundClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundClassGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundClassGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundClassGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundClassGraphNode

    @JsName("C")
    public fun copy(other: UObject): SoundClassGraphNode

    @JsName("C")
    public fun copy(other: Any): SoundClassGraphNode
  }
}

public open external class SoundClassGraphSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundClassGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundClassGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundClassGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundClassGraphSchema

    @JsName("C")
    public fun copy(other: UObject): SoundClassGraphSchema

    @JsName("C")
    public fun copy(other: Any): SoundClassGraphSchema
  }
}

public open external class SoundEffectSourcePresetClassTemplate(
  outer: UObject,
) : ClassTemplate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundEffectSourcePresetClassTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundEffectSourcePresetClassTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundEffectSourcePresetClassTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundEffectSourcePresetClassTemplate

    @JsName("C")
    public fun copy(other: UObject): SoundEffectSourcePresetClassTemplate

    @JsName("C")
    public fun copy(other: Any): SoundEffectSourcePresetClassTemplate
  }
}

public open external class SoundEffectSubmixPresetClassTemplate(
  outer: UObject,
) : ClassTemplate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundEffectSubmixPresetClassTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundEffectSubmixPresetClassTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundEffectSubmixPresetClassTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundEffectSubmixPresetClassTemplate

    @JsName("C")
    public fun copy(other: UObject): SoundEffectSubmixPresetClassTemplate

    @JsName("C")
    public fun copy(other: Any): SoundEffectSubmixPresetClassTemplate
  }
}

public open external class SynthComponentClassTemplate(
  outer: UObject,
) : ClassTemplate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SynthComponentClassTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SynthComponentClassTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SynthComponentClassTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SynthComponentClassTemplate

    @JsName("C")
    public fun copy(other: UObject): SynthComponentClassTemplate

    @JsName("C")
    public fun copy(other: Any): SynthComponentClassTemplate
  }
}

public open external class SoundConcurrencyFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundConcurrencyFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundConcurrencyFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundConcurrencyFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundConcurrencyFactory

    @JsName("C")
    public fun copy(other: UObject): SoundConcurrencyFactory

    @JsName("C")
    public fun copy(other: Any): SoundConcurrencyFactory
  }
}

public open external class SoundCueFactoryNew(
  outer: UObject,
) : Factory {
  @JsName("InitialSoundWave")
  public open var initialSoundWave: SoundWave

  @JsName("InitialSoundWaves")
  public open var initialSoundWaves: Array<Any>

  @JsName("InitialDialogueWave")
  public open var initialDialogueWave: DialogueWave

  @JsName("InitialDialogueWaves")
  public open var initialDialogueWaves: Array<Any>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueFactoryNew

    @JsName("C")
    public fun copy(other: UObject): SoundCueFactoryNew

    @JsName("C")
    public fun copy(other: Any): SoundCueFactoryNew
  }
}

public open external class SoundCueGraph(
  outer: UObject,
) : EdGraph {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueGraph

    @JsName("C")
    public fun copy(other: UObject): SoundCueGraph

    @JsName("C")
    public fun copy(other: Any): SoundCueGraph
  }
}

@JsName("SoundCueGraphNode_Base")
public open external class SoundCueGraphNodeBase(
  outer: UObject,
) : EdGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueGraphNodeBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueGraphNodeBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueGraphNodeBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueGraphNodeBase

    @JsName("C")
    public fun copy(other: UObject): SoundCueGraphNodeBase

    @JsName("C")
    public fun copy(other: Any): SoundCueGraphNodeBase
  }
}

public open external class SoundCueGraphNode(
  outer: UObject,
) : SoundCueGraphNodeBase {
  @JsName("SoundNode")
  public open var soundNode: SoundNode

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueGraphNode

    @JsName("C")
    public fun copy(other: UObject): SoundCueGraphNode

    @JsName("C")
    public fun copy(other: Any): SoundCueGraphNode
  }
}

@JsName("SoundCueGraphNode_Root")
public open external class SoundCueGraphNodeRoot(
  outer: UObject,
) : SoundCueGraphNodeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueGraphNodeRoot

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueGraphNodeRoot

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueGraphNodeRoot

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueGraphNodeRoot

    @JsName("C")
    public fun copy(other: UObject): SoundCueGraphNodeRoot

    @JsName("C")
    public fun copy(other: Any): SoundCueGraphNodeRoot
  }
}

public open external class SoundCueGraphSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundCueGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundCueGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundCueGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundCueGraphSchema

    @JsName("C")
    public fun copy(other: UObject): SoundCueGraphSchema

    @JsName("C")
    public fun copy(other: Any): SoundCueGraphSchema
  }
}

public open external class SoundMixFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundMixFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundMixFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundMixFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundMixFactory

    @JsName("C")
    public fun copy(other: UObject): SoundMixFactory

    @JsName("C")
    public fun copy(other: Any): SoundMixFactory
  }
}

public open external class SoundSourceBusFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSourceBusFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSourceBusFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSourceBusFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSourceBusFactory

    @JsName("C")
    public fun copy(other: UObject): SoundSourceBusFactory

    @JsName("C")
    public fun copy(other: Any): SoundSourceBusFactory
  }
}

public open external class SoundSourceEffectFactory(
  outer: UObject,
) : Factory {
  @JsName("SoundEffectSourcepresetClass")
  public open var soundEffectSourcepresetClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSourceEffectFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSourceEffectFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSourceEffectFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSourceEffectFactory

    @JsName("C")
    public fun copy(other: UObject): SoundSourceEffectFactory

    @JsName("C")
    public fun copy(other: Any): SoundSourceEffectFactory
  }
}

public open external class SoundSourceEffectChainFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSourceEffectChainFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSourceEffectChainFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSourceEffectChainFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSourceEffectChainFactory

    @JsName("C")
    public fun copy(other: UObject): SoundSourceEffectChainFactory

    @JsName("C")
    public fun copy(other: Any): SoundSourceEffectChainFactory
  }
}

public open external class SoundSubmixEffectFactory(
  outer: UObject,
) : Factory {
  @JsName("SoundEffectSubmixPresetClass")
  public open var soundEffectSubmixPresetClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixEffectFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixEffectFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixEffectFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixEffectFactory

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixEffectFactory

    @JsName("C")
    public fun copy(other: Any): SoundSubmixEffectFactory
  }
}

public open external class SoundSubmixFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixFactory

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixFactory

    @JsName("C")
    public fun copy(other: Any): SoundSubmixFactory
  }
}

public open external class SoundfieldSubmixFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundfieldSubmixFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundfieldSubmixFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundfieldSubmixFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundfieldSubmixFactory

    @JsName("C")
    public fun copy(other: UObject): SoundfieldSubmixFactory

    @JsName("C")
    public fun copy(other: Any): SoundfieldSubmixFactory
  }
}

public open external class EndpointSubmixFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EndpointSubmixFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EndpointSubmixFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EndpointSubmixFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EndpointSubmixFactory

    @JsName("C")
    public fun copy(other: UObject): EndpointSubmixFactory

    @JsName("C")
    public fun copy(other: Any): EndpointSubmixFactory
  }
}

public open external class SoundfieldEndpointSubmixFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundfieldEndpointSubmixFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundfieldEndpointSubmixFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundfieldEndpointSubmixFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundfieldEndpointSubmixFactory

    @JsName("C")
    public fun copy(other: UObject): SoundfieldEndpointSubmixFactory

    @JsName("C")
    public fun copy(other: Any): SoundfieldEndpointSubmixFactory
  }
}

public open external class SoundSubmixGraph(
  outer: UObject,
) : EdGraph {
  @JsName("RootSoundSubmix")
  public open var rootSoundSubmix: SoundSubmixBase

  @JsName("StaleRoots")
  public open var staleRoots: Array<SoundSubmixBase>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixGraph

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixGraph

    @JsName("C")
    public fun copy(other: Any): SoundSubmixGraph
  }
}

public open external class SoundSubmixGraphNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("SoundSubmix")
  public open var soundSubmix: SoundSubmixBase

  @JsName("SubmixNodeUserWidget")
  public open var submixNodeUserWidget: UserWidget

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixGraphNode

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixGraphNode

    @JsName("C")
    public fun copy(other: Any): SoundSubmixGraphNode
  }
}

public open external class SoundSubmixGraphSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SoundSubmixGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SoundSubmixGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SoundSubmixGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SoundSubmixGraphSchema

    @JsName("C")
    public fun copy(other: UObject): SoundSubmixGraphSchema

    @JsName("C")
    public fun copy(other: Any): SoundSubmixGraphSchema
  }
}

public open external class AnimationModifier(
  outer: UObject,
) : UObject {
  @JsName("RevisionGuid")
  public open var revisionGuid: Guid

  @JsName("AppliedGuid")
  public open var appliedGuid: Guid

  @JsName("StoredNativeRevision")
  public open var storedNativeRevision: Number

  @JsName("PreviouslyAppliedModifier")
  public open var previouslyAppliedModifier: AnimationModifier

  @JsName("OnRevert")
  public open fun onRevert(animationSequence: AnimSequence): Unit

  @JsName("OnApply")
  public open fun onApply(animationSequence: AnimSequence): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationModifier

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationModifier

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationModifier

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationModifier

    @JsName("C")
    public fun copy(other: UObject): AnimationModifier

    @JsName("C")
    public fun copy(other: Any): AnimationModifier
  }
}

public open external class AnimationModifiersAssetUserData(
  outer: UObject,
) : AssetUserData {
  @JsName("AnimationModifierInstances")
  public open var animationModifierInstances: Array<AnimationModifier>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationModifiersAssetUserData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationModifiersAssetUserData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationModifiersAssetUserData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationModifiersAssetUserData

    @JsName("C")
    public fun copy(other: UObject): AnimationModifiersAssetUserData

    @JsName("C")
    public fun copy(other: Any): AnimationModifiersAssetUserData
  }
}

public open external class AnimationModifierSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("DefaultAnimationModifiers")
  public open var defaultAnimationModifiers: Array<UnrealEngineClass>

  @JsName("bApplyAnimationModifiersOnImport")
  public open var applyAnimationModifiersOnImport: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationModifierSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationModifierSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationModifierSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationModifierSettings

    @JsName("C")
    public fun copy(other: UObject): AnimationModifierSettings

    @JsName("C")
    public fun copy(other: Any): AnimationModifierSettings
  }
}

public open external class VariantDependency {
  @JsName("VariantSet")
  public open var variantSet: VariantSet

  @JsName("Variant")
  public open var variant: Variant

  @JsName("bEnabled")
  public open var enabled: Boolean

  public open fun clone(): VariantDependency

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): VariantDependency

    @JsName("C")
    public fun copy(other: Any): VariantDependency
  }
}

public open external class CapturedPropSegment {
  @JsName("PropertyName")
  public open var propertyName: String

  @JsName("PropertyIndex")
  public open var propertyIndex: Number

  @JsName("ComponentName")
  public open var componentName: String

  public open fun clone(): CapturedPropSegment

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CapturedPropSegment

    @JsName("C")
    public fun copy(other: Any): CapturedPropSegment
  }
}

@JsName("EPropertyValueCategory")
public external object PropertyValueCategory {
  public var Undefined: String

  public var Generic: String

  public var RelativeLocation: String

  public var RelativeRotation: String

  @JsName("RelativeScale3D")
  public var RelativeScale3d: String

  public var Visibility: String

  public var Material: String

  public var Color: String

  public var Option: String

  @JsName("EPropertyValueCategory_MAX")
  public var Max: String
}

public open external class PropertyValue(
  outer: UObject,
) : UObject {
  @JsName("Properties")
  public open var properties: Array<Any>

  @JsName("PropertyIndices")
  public open var propertyIndices: Array<Number>

  @JsName("CapturedPropSegments")
  public open var capturedPropSegments: Array<CapturedPropSegment>

  @JsName("FullDisplayString")
  public open var fullDisplayString: String

  @JsName("PropertySetterName")
  public open var propertySetterName: String

  @JsName("PropertySetterParameterDefaults")
  public open var propertySetterParameterDefaults: Any

  @JsName("bHasRecordedData")
  public open var hasRecordedData: Boolean

  @JsName("LeafPropertyClass")
  public open var leafPropertyClass: UnrealEngineClass

  @JsName("ValueBytes")
  public open var valueBytes: Array<Number>

  @JsName("PropCategory")
  public open var propCategory: String

  @JsName("DisplayOrder")
  public open var displayOrder: Any

  @JsName("HasRecordedData")
  public open fun hasRecordedData(): Boolean

  @JsName("GetPropertyTooltip")
  public open fun getPropertyTooltip(): String

  @JsName("GetFullDisplayString")
  public open fun getFullDisplayString(): String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValue

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValue

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValue

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValue

    @JsName("C")
    public fun copy(other: UObject): PropertyValue

    @JsName("C")
    public fun copy(other: Any): PropertyValue
  }
}

public open external class FunctionCaller {
  @JsName("FunctionName")
  public open var functionName: String

  @JsName("FunctionEntry")
  public open var functionEntry: Any

  @JsName("DisplayOrder")
  public open var displayOrder: Any

  public open fun clone(): FunctionCaller

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FunctionCaller

    @JsName("C")
    public fun copy(other: Any): FunctionCaller
  }
}

public open external class VariantObjectBinding(
  outer: UObject,
) : UObject {
  @JsName("CachedActorLabel")
  public open var cachedActorLabel: String

  @JsName("ObjectPtr")
  public open var objectPtr: SoftObjectPath

  @JsName("LazyObjectPtr")
  public open var lazyObjectPtr: Any

  @JsName("CapturedProperties")
  public open var capturedProperties: Array<PropertyValue>

  @JsName("FunctionCallers")
  public open var functionCallers: Array<FunctionCaller>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VariantObjectBinding

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VariantObjectBinding

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VariantObjectBinding

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VariantObjectBinding

    @JsName("C")
    public fun copy(other: UObject): VariantObjectBinding

    @JsName("C")
    public fun copy(other: Any): VariantObjectBinding
  }
}

@JsName("T$808")
public external interface DependencyProvider {
  @JsName("Dependency")
  public var dependency: VariantDependency
}

@JsName("T$809")
public external interface Object809 {
  @JsName("Dependency")
  public var dependency: VariantDependency

  @JsName("$")
  public var value: Number
}

public open external class Variant(
  outer: UObject,
) : UObject {
  @JsName("Dependencies")
  public open var dependencies: Array<VariantDependency>

  @JsName("DisplayText")
  public open var displayText: String

  @JsName("ObjectBindings")
  public open var objectBindings: Array<VariantObjectBinding>

  @JsName("Thumbnail")
  public open var thumbnail: Texture2d

  @JsName("SwitchOn")
  public open fun switchOn(): Unit

  @JsName("SetThumbnailFromTexture")
  public open fun setThumbnailFromTexture(newThumbnail: Texture2d): Unit

  @JsName("SetThumbnailFromFile")
  public open fun setThumbnailFromFile(filePath: String): Unit

  @JsName("SetThumbnailFromEditorViewport")
  public open fun setThumbnailFromEditorViewport(): Unit

  @JsName("SetThumbnailFromCamera")
  public open fun setThumbnailFromCamera(
    worldContextObject: UObject,
    cameraTransform: Transform,
    fovDegrees: Number,
    minZ: Number,
    gamma: Number,
  ): Unit

  @JsName("SetDisplayText")
  public open fun setDisplayText(newDisplayText: String): Unit

  @JsName("SetDependency")
  public open fun setDependency(index: Number, dependency: VariantDependency): DependencyProvider

  @JsName("IsActive")
  public open fun isActive(): Boolean

  @JsName("GetThumbnail")
  public open fun getThumbnail(): Texture2d

  @JsName("GetParent")
  public open fun getParent(): VariantSet

  @JsName("GetNumDependencies")
  public open fun getNumDependencies(): Number

  @JsName("GetNumActors")
  public open fun getNumActors(): Number

  @JsName("GetDisplayText")
  public open fun getDisplayText(): String

  @JsName("GetDependents")
  public open fun getDependents(levelVariantSets: LevelVariantSets,
      onlyEnabledDependencies: Boolean): Array<Variant>

  @JsName("GetDependency")
  public open fun getDependency(index: Number): VariantDependency

  @JsName("GetActor")
  public open fun getActor(actorIndex: Number): Actor

  @JsName("DeleteDependency")
  public open fun deleteDependency(index: Number): Unit

  @JsName("AddDependency")
  public open fun addDependency(dependency: VariantDependency): Object809

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): Variant

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): Variant

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Variant

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Variant

    @JsName("C")
    public fun copy(other: UObject): Variant

    @JsName("C")
    public fun copy(other: Any): Variant
  }
}

public open external class VariantSet(
  outer: UObject,
) : UObject {
  @JsName("DisplayText")
  public open var displayText: String

  @JsName("bExpanded")
  public open var expanded: Boolean

  @JsName("Variants")
  public open var variants: Array<Variant>

  @JsName("Thumbnail")
  public open var thumbnail: Texture2d

  @JsName("SetThumbnailFromTexture")
  public open fun setThumbnailFromTexture(newThumbnail: Texture2d): Unit

  @JsName("SetThumbnailFromFile")
  public open fun setThumbnailFromFile(filePath: String): Unit

  @JsName("SetThumbnailFromEditorViewport")
  public open fun setThumbnailFromEditorViewport(): Unit

  @JsName("SetThumbnailFromCamera")
  public open fun setThumbnailFromCamera(
    worldContextObject: UObject,
    cameraTransform: Transform,
    fovDegrees: Number,
    minZ: Number,
    gamma: Number,
  ): Unit

  @JsName("SetDisplayText")
  public open fun setDisplayText(newDisplayText: String): Unit

  @JsName("GetVariantByName")
  public open fun getVariantByName(variantName: String): Variant

  @JsName("GetVariant")
  public open fun getVariant(variantIndex: Number): Variant

  @JsName("GetThumbnail")
  public open fun getThumbnail(): Texture2d

  @JsName("GetParent")
  public open fun getParent(): LevelVariantSets

  @JsName("GetNumVariants")
  public open fun getNumVariants(): Number

  @JsName("GetDisplayText")
  public open fun getDisplayText(): String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VariantSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VariantSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VariantSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VariantSet

    @JsName("C")
    public fun copy(other: UObject): VariantSet

    @JsName("C")
    public fun copy(other: Any): VariantSet
  }
}

public open external class LevelVariantSets(
  outer: UObject,
) : UObject {
  @JsName("DirectorBlueprint")
  public open var directorBlueprint: UObject

  @JsName("DirectorClass")
  public open var directorClass: UnrealEngineClass

  @JsName("VariantSets")
  public open var variantSets: Array<VariantSet>

  @JsName("GetVariantSetByName")
  public open fun getVariantSetByName(variantSetName: String): VariantSet

  @JsName("GetVariantSet")
  public open fun getVariantSet(variantSetIndex: Number): VariantSet

  @JsName("GetNumVariantSets")
  public open fun getNumVariantSets(): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelVariantSets

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelVariantSets

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelVariantSets

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelVariantSets

    @JsName("C")
    public fun copy(other: UObject): LevelVariantSets

    @JsName("C")
    public fun copy(other: Any): LevelVariantSets
  }
}

public open external class LevelVariantSetsActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("LevelVariantSets")
  public open var levelVariantSets: SoftObjectPath

  @JsName("DirectorInstances")
  public open var directorInstances: Any

  @JsName("SwitchOnVariantByName")
  public open fun switchOnVariantByName(variantSetName: String, variantName: String): Boolean

  @JsName("SwitchOnVariantByIndex")
  public open fun switchOnVariantByIndex(variantSetIndex: Number, variantIndex: Number): Boolean

  @JsName("SetLevelVariantSets")
  public open fun setLevelVariantSets(inVariantSets: LevelVariantSets): Unit

  @JsName("GetLevelVariantSets")
  public open fun getLevelVariantSets(load: Boolean): LevelVariantSets

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelVariantSetsActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelVariantSetsActor

    @JsName("C")
    public fun copy(other: UObject): LevelVariantSetsActor

    @JsName("C")
    public fun copy(other: Any): LevelVariantSetsActor
  }
}

public open external class LevelVariantSetsFunctionDirector(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelVariantSetsFunctionDirector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelVariantSetsFunctionDirector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelVariantSetsFunctionDirector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelVariantSetsFunctionDirector

    @JsName("C")
    public fun copy(other: UObject): LevelVariantSetsFunctionDirector

    @JsName("C")
    public fun copy(other: Any): LevelVariantSetsFunctionDirector
  }
}

public open external class PropertyValueTransform(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueTransform

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueTransform

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueTransform

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueTransform

    @JsName("C")
    public fun copy(other: UObject): PropertyValueTransform

    @JsName("C")
    public fun copy(other: Any): PropertyValueTransform
  }
}

public open external class PropertyValueVisibility(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueVisibility

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueVisibility

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueVisibility

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueVisibility

    @JsName("C")
    public fun copy(other: UObject): PropertyValueVisibility

    @JsName("C")
    public fun copy(other: Any): PropertyValueVisibility
  }
}

public open external class PropertyValueColor(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueColor

    @JsName("C")
    public fun copy(other: UObject): PropertyValueColor

    @JsName("C")
    public fun copy(other: Any): PropertyValueColor
  }
}

public open external class PropertyValueMaterial(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueMaterial

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueMaterial

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueMaterial

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueMaterial

    @JsName("C")
    public fun copy(other: UObject): PropertyValueMaterial

    @JsName("C")
    public fun copy(other: Any): PropertyValueMaterial
  }
}

public open external class PropertyValueOption(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueOption

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueOption

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueOption

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueOption

    @JsName("C")
    public fun copy(other: UObject): PropertyValueOption

    @JsName("C")
    public fun copy(other: Any): PropertyValueOption
  }
}

public open external class PropertyValueSoftObject(
  outer: UObject,
) : PropertyValue {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyValueSoftObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyValueSoftObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyValueSoftObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyValueSoftObject

    @JsName("C")
    public fun copy(other: UObject): PropertyValueSoftObject

    @JsName("C")
    public fun copy(other: Any): PropertyValueSoftObject
  }
}

public open external class SwitchActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("SceneComponent")
  public open var sceneComponent: SceneComponent

  @JsName("LastSelectedOption")
  public open var lastSelectedOption: Number

  @JsName("SelectOption")
  public open fun selectOption(optionIndex: Number): Unit

  @JsName("GetSelectedOption")
  public open fun getSelectedOption(): Number

  @JsName("GetOptions")
  public open fun getOptions(): Array<Actor>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SwitchActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SwitchActor

    @JsName("C")
    public fun copy(other: UObject): SwitchActor

    @JsName("C")
    public fun copy(other: Any): SwitchActor
  }
}

public open external class DatasmithObjectTemplate(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithObjectTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithObjectTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithObjectTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithObjectTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithObjectTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithObjectTemplate
  }
}

public open external class DatasmithActorTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("Layers")
  public open var layers: Any

  @JsName("Tags")
  public open var tags: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithActorTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithActorTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithActorTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithActorTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithActorTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithActorTemplate
  }
}

public open external class DatasmithAdditionalData(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithAdditionalData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithAdditionalData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithAdditionalData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithAdditionalData

    @JsName("C")
    public fun copy(other: UObject): DatasmithAdditionalData

    @JsName("C")
    public fun copy(other: Any): DatasmithAdditionalData
  }
}

@JsName("EDatasmithAreaLightActorType")
public external object DatasmithAreaLightActorType {
  public var Point: String

  public var Spot: String

  public var Rect: String

  @JsName("EDatasmithAreaLightActorType_MAX")
  public var Max: String
}

@JsName("EDatasmithAreaLightActorShape")
public external object DatasmithAreaLightActorShape {
  public var Rectangle: String

  public var Disc: String

  public var Sphere: String

  public var Cylinder: String

  public var None: String

  @JsName("EDatasmithAreaLightActorShape_MAX")
  public var Max: String
}

public open external class DatasmithAreaLightActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("Mobility")
  public open var mobility: String

  @JsName("LightType")
  public open var lightType: String

  @JsName("LightShape")
  public open var lightShape: String

  @JsName("Dimensions")
  public open var dimensions: Vector2d

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("IntensityUnits")
  public open var intensityUnits: String

  @JsName("Color")
  public open var color: LinearColor

  @JsName("Temperature")
  public open var temperature: Number

  @JsName("IESTexture")
  public open var iesTexture: TextureLightProfile

  @JsName("bUseIESBrightness")
  public open var useIesBrightness: Boolean

  @JsName("IESBrightnessScale")
  public open var iesBrightnessScale: Number

  @JsName("Rotation")
  public open var rotation: Rotator

  @JsName("SourceRadius")
  public open var sourceRadius: Number

  @JsName("SourceLength")
  public open var sourceLength: Number

  @JsName("AttenuationRadius")
  public open var attenuationRadius: Number

  @JsName("SpotlightInnerAngle")
  public open var spotlightInnerAngle: Number

  @JsName("SpotlightOuterAngle")
  public open var spotlightOuterAngle: Number

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithAreaLightActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithAreaLightActor

    @JsName("C")
    public fun copy(other: UObject): DatasmithAreaLightActor

    @JsName("C")
    public fun copy(other: Any): DatasmithAreaLightActor
  }
}

public open external class DatasmithAreaLightActorTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("LightType")
  public open var lightType: String

  @JsName("LightShape")
  public open var lightShape: String

  @JsName("Dimensions")
  public open var dimensions: Vector2d

  @JsName("Color")
  public open var color: LinearColor

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("IntensityUnits")
  public open var intensityUnits: String

  @JsName("Temperature")
  public open var temperature: Number

  @JsName("IESTexture")
  public open var iesTexture: TextureLightProfile

  @JsName("bUseIESBrightness")
  public open var useIesBrightness: Boolean

  @JsName("IESBrightnessScale")
  public open var iesBrightnessScale: Number

  @JsName("Rotation")
  public open var rotation: Rotator

  @JsName("SourceRadius")
  public open var sourceRadius: Number

  @JsName("SourceLength")
  public open var sourceLength: Number

  @JsName("AttenuationRadius")
  public open var attenuationRadius: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithAreaLightActorTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithAreaLightActorTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithAreaLightActorTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithAreaLightActorTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithAreaLightActorTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithAreaLightActorTemplate
  }
}

public open external class DatasmithAssetImportOptions {
  @JsName("PackagePath")
  public open var packagePath: String

  public open fun clone(): DatasmithAssetImportOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithAssetImportOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithAssetImportOptions
  }
}

public open external class DatasmithImportInfo {
  @JsName("SourceUri")
  public open var sourceUri: String

  @JsName("SourceHash")
  public open var sourceHash: String

  public open fun clone(): DatasmithImportInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithImportInfo

    @JsName("C")
    public fun copy(other: Any): DatasmithImportInfo
  }
}

public open external class DatasmithAssetImportData(
  outer: UObject,
) : AssetImportData {
  @JsName("AssetImportOptions")
  public open var assetImportOptions: DatasmithAssetImportOptions

  @JsName("AdditionalData")
  public open var additionalData: Array<DatasmithAdditionalData>

  @JsName("DatasmithImportInfo")
  public open var datasmithImportInfo: DatasmithImportInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithAssetImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithAssetImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithAssetImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithAssetImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithAssetImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithAssetImportData
  }
}

@JsName("EDatasmithImportLightmapMin")
public external object DatasmithImportLightmapMin {
  @JsName("LIGHTMAP_16")
  public var Sixteen: String

  @JsName("LIGHTMAP_32")
  public var ThirtyTwo: String

  @JsName("LIGHTMAP_64")
  public var SixtyFour: String

  @JsName("LIGHTMAP_128")
  public var OneTwentyEight: String

  @JsName("LIGHTMAP_256")
  public var TwoFiftySix: String

  @JsName("LIGHTMAP_512")
  public var FiveTwelve: String

  @JsName("LIGHTMAP_MAX")
  public var Max: String
}

@JsName("EDatasmithImportLightmapMax")
public external object DatasmithImportLightmapMax {
  @JsName("LIGHTMAP_64")
  public var SixtyFour: String

  @JsName("LIGHTMAP_128")
  public var OneTwentyEight: String

  @JsName("LIGHTMAP_256")
  public var TwoFiftySix: String

  @JsName("LIGHTMAP_512")
  public var FiveTwelve: String

  @JsName("LIGHTMAP_1024")
  public var TenTwentyFour: String

  @JsName("LIGHTMAP_2048")
  public var TwentyFortyEight: String

  @JsName("LIGHTMAP_4096")
  public var FortyNinetySix: String

  @JsName("LIGHTMAP_MAX")
  public var Max: String
}

public open external class DatasmithStaticMeshImportOptions {
  @JsName("MinLightmapResolution")
  public open var minLightmapResolution: String

  @JsName("MaxLightmapResolution")
  public open var maxLightmapResolution: String

  @JsName("bGenerateLightmapUVs")
  public open var generateLightmapUVs: Boolean

  @JsName("bRemoveDegenerates")
  public open var removeDegenerates: Boolean

  public open fun clone(): DatasmithStaticMeshImportOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshImportOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshImportOptions
  }
}

public open external class DatasmithStaticMeshImportData(
  outer: UObject,
) : DatasmithAssetImportData {
  @JsName("ImportOptions")
  public open var importOptions: DatasmithStaticMeshImportOptions

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshImportData
  }
}

@JsName("EDatasmithCADStitchingTechnique")
public external object DatasmithCADStitchingTechnique {
  @JsName("StitchingNone")
  public var None: String

  @JsName("StitchingHeal")
  public var Heal: String

  @JsName("StitchingSew")
  public var Sew: String

  @JsName("EDatasmithCADStitchingTechnique_MAX")
  public var Max: String
}

public open external class DatasmithTessellationOptions {
  @JsName("ChordTolerance")
  public open var chordTolerance: Number

  @JsName("MaxEdgeLength")
  public open var maxEdgeLength: Number

  @JsName("NormalTolerance")
  public open var normalTolerance: Number

  @JsName("StitchingTechnique")
  public open var stitchingTechnique: String

  public open fun clone(): DatasmithTessellationOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithTessellationOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithTessellationOptions
  }
}

@JsName("DatasmithStaticMeshCADImportData")
public open external class DatasmithStaticMeshCadImportData(
  outer: UObject,
) : DatasmithStaticMeshImportData {
  @JsName("TessellationOptions")
  public open var tessellationOptions: DatasmithTessellationOptions

  @JsName("ModelUnit")
  public open var modelUnit: Any

  @JsName("ModelTolerance")
  public open var modelTolerance: Any

  @JsName("ResourcePath")
  public open var resourcePath: String

  @JsName("ResourceFilename")
  public open var resourceFilename: String

  @JsName("AuxiliaryFilenames")
  public open var auxiliaryFilenames: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshCadImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshCadImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshCadImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshCadImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshCadImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshCadImportData
  }
}

@JsName("EDatasmithImportScene")
public external object DatasmithImportScene {
  public var NewLevel: String

  public var CurrentLevel: String

  public var AssetsOnly: String

  @JsName("EDatasmithImportScene_MAX")
  public var Max: String
}

public open external class DatasmithImportBaseOptions {
  @JsName("SceneHandling")
  public open var sceneHandling: String

  @JsName("bIncludeGeometry")
  public open var includeGeometry: Boolean

  @JsName("bIncludeMaterial")
  public open var includeMaterial: Boolean

  @JsName("bIncludeLight")
  public open var includeLight: Boolean

  @JsName("bIncludeCamera")
  public open var includeCamera: Boolean

  @JsName("bIncludeAnimation")
  public open var includeAnimation: Boolean

  @JsName("AssetOptions")
  public open var assetOptions: DatasmithAssetImportOptions

  @JsName("StaticMeshOptions")
  public open var staticMeshOptions: DatasmithStaticMeshImportOptions

  public open fun clone(): DatasmithImportBaseOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithImportBaseOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithImportBaseOptions
  }
}

public open external class DatasmithSceneImportData(
  outer: UObject,
) : AssetImportData {
  @JsName("BaseOptions")
  public open var baseOptions: DatasmithImportBaseOptions

  @JsName("DatasmithImportInfo")
  public open var datasmithImportInfo: DatasmithImportInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithSceneImportData
  }
}

public open external class DatasmithOptionsBase(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithOptionsBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithOptionsBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithOptionsBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithOptionsBase

    @JsName("C")
    public fun copy(other: UObject): DatasmithOptionsBase

    @JsName("C")
    public fun copy(other: Any): DatasmithOptionsBase
  }
}

public open external class DatasmithTranslatedSceneImportData(
  outer: UObject,
) : DatasmithSceneImportData {
  @JsName("AdditionalOptions")
  public open var additionalOptions: Array<DatasmithOptionsBase>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithTranslatedSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithTranslatedSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithTranslatedSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithTranslatedSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithTranslatedSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithTranslatedSceneImportData
  }
}

@JsName("DatasmithCADImportSceneData")
public open external class DatasmithCadImportSceneData(
  outer: UObject,
) : DatasmithSceneImportData {
  @JsName("TessellationOptions")
  public open var tessellationOptions: DatasmithTessellationOptions

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithCadImportSceneData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithCadImportSceneData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithCadImportSceneData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithCadImportSceneData

    @JsName("C")
    public fun copy(other: UObject): DatasmithCadImportSceneData

    @JsName("C")
    public fun copy(other: Any): DatasmithCadImportSceneData
  }
}

@JsName("DatasmithMDLSceneImportData")
public open external class DatasmithMdlSceneImportData(
  outer: UObject,
) : DatasmithSceneImportData {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithMdlSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithMdlSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithMdlSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithMdlSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithMdlSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithMdlSceneImportData
  }
}

@JsName("DatasmithGLTFSceneImportData")
public open external class DatasmithGltfSceneImportData(
  outer: UObject,
) : DatasmithSceneImportData {
  @JsName("Generator")
  public open var generator: String

  @JsName("Version")
  public open var version: Number

  @JsName("Author")
  public open var author: String

  @JsName("License")
  public open var license: String

  @JsName("Source")
  public open var source: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithGltfSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithGltfSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithGltfSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithGltfSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithGltfSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithGltfSceneImportData
  }
}

@JsName("DatasmithStaticMeshGLTFImportData")
public open external class DatasmithStaticMeshGltfImportData(
  outer: UObject,
) : DatasmithStaticMeshImportData {
  @JsName("SourceMeshName")
  public open var sourceMeshName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshGltfImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshGltfImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshGltfImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshGltfImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshGltfImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshGltfImportData
  }
}

@JsName("DatasmithFBXSceneImportData")
public open external class DatasmithFbxSceneImportData(
  outer: UObject,
) : DatasmithSceneImportData {
  @JsName("bGenerateLightmapUVs")
  public open var generateLightmapUVs: Boolean

  @JsName("TexturesDir")
  public open var texturesDir: String

  @JsName("IntermediateSerialization")
  public open var intermediateSerialization: Number

  @JsName("bColorizeMaterials")
  public open var colorizeMaterials: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithFbxSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithFbxSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithFbxSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithFbxSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithFbxSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithFbxSceneImportData
  }
}

public open external class DatasmithDeltaGenAssetImportData(
  outer: UObject,
) : DatasmithAssetImportData {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithDeltaGenAssetImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithDeltaGenAssetImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithDeltaGenAssetImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithDeltaGenAssetImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithDeltaGenAssetImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithDeltaGenAssetImportData
  }
}

public open external class DatasmithDeltaGenSceneImportData(
  outer: UObject,
) : DatasmithFbxSceneImportData {
  @JsName("bMergeNodes")
  public open var mergeNodes: Boolean

  @JsName("bOptimizeDuplicatedNodes")
  public open var optimizeDuplicatedNodes: Boolean

  @JsName("bRemoveInvisibleNodes")
  public open var removeInvisibleNodes: Boolean

  @JsName("bSimplifyNodeHierarchy")
  public open var simplifyNodeHierarchy: Boolean

  @JsName("bImportVar")
  public open var importVar: Boolean

  @JsName("VarPath")
  public open var varPath: String

  @JsName("bImportPos")
  public open var importPos: Boolean

  @JsName("PosPath")
  public open var posPath: String

  @JsName("bImportTml")
  public open var importTml: Boolean

  @JsName("TmlPath")
  public open var tmlPath: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithDeltaGenSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithDeltaGenSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithDeltaGenSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithDeltaGenSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithDeltaGenSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithDeltaGenSceneImportData
  }
}

@JsName("DatasmithVREDAssetImportData")
public open external class DatasmithVredAssetImportData(
  outer: UObject,
) : DatasmithAssetImportData {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithVredAssetImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithVredAssetImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithVredAssetImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithVredAssetImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithVredAssetImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithVredAssetImportData
  }
}

@JsName("DatasmithVREDSceneImportData")
public open external class DatasmithVredSceneImportData(
  outer: UObject,
) : DatasmithFbxSceneImportData {
  @JsName("bMergeNodes")
  public open var mergeNodes: Boolean

  @JsName("bOptimizeDuplicatedNodes")
  public open var optimizeDuplicatedNodes: Boolean

  @JsName("bImportMats")
  public open var importMats: Boolean

  @JsName("MatsPath")
  public open var matsPath: String

  @JsName("bImportVar")
  public open var importVar: Boolean

  @JsName("bCleanVar")
  public open var cleanVar: Boolean

  @JsName("VarPath")
  public open var varPath: String

  @JsName("bImportLightInfo")
  public open var importLightInfo: Boolean

  @JsName("LightInfoPath")
  public open var lightInfoPath: String

  @JsName("bImportClipInfo")
  public open var importClipInfo: Boolean

  @JsName("ClipInfoPath")
  public open var clipInfoPath: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithVredSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithVredSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithVredSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithVredSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithVredSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithVredSceneImportData
  }
}

@JsName("DatasmithIFCSceneImportData")
public open external class DatasmithIfcSceneImportData(
  outer: UObject,
) : DatasmithSceneImportData {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithIfcSceneImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithIfcSceneImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithIfcSceneImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithIfcSceneImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithIfcSceneImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithIfcSceneImportData
  }
}

@JsName("DatasmithStaticMeshIFCImportData")
public open external class DatasmithStaticMeshIfcImportData(
  outer: UObject,
) : DatasmithStaticMeshImportData {
  @JsName("SourceGlobalId")
  public open var sourceGlobalId: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshIfcImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshIfcImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshIfcImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshIfcImportData

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshIfcImportData

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshIfcImportData
  }
}

public open external class DatasmithCameraLookatTrackingSettingsTemplate {
  @JsName("bEnableLookAtTracking")
  public open var enableLookAtTracking: Boolean

  @JsName("bAllowRoll")
  public open var allowRoll: Boolean

  @JsName("ActorToTrack")
  public open var actorToTrack: Actor

  public open fun clone(): DatasmithCameraLookatTrackingSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithCameraLookatTrackingSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCameraLookatTrackingSettingsTemplate
  }
}

public open external class DatasmithCineCameraActorTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("LookatTrackingSettings")
  public open var lookatTrackingSettings: DatasmithCameraLookatTrackingSettingsTemplate

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithCineCameraActorTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithCineCameraActorTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithCineCameraActorTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithCineCameraActorTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithCineCameraActorTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCineCameraActorTemplate
  }
}

public open external class DatasmithCameraFilmbackSettingsTemplate {
  @JsName("SensorWidth")
  public open var sensorWidth: Number

  @JsName("SensorHeight")
  public open var sensorHeight: Number

  public open fun clone(): DatasmithCameraFilmbackSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithCameraFilmbackSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCameraFilmbackSettingsTemplate
  }
}

public open external class DatasmithCameraLensSettingsTemplate {
  @JsName("MaxFStop")
  public open var maxFStop: Number

  public open fun clone(): DatasmithCameraLensSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithCameraLensSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCameraLensSettingsTemplate
  }
}

public open external class DatasmithCameraFocusSettingsTemplate {
  @JsName("FocusMethod")
  public open var focusMethod: String

  @JsName("ManualFocusDistance")
  public open var manualFocusDistance: Number

  public open fun clone(): DatasmithCameraFocusSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithCameraFocusSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCameraFocusSettingsTemplate
  }
}

public open external class DatasmithPostProcessSettingsTemplate {
  @JsName("bOverride_WhiteTemp")
  public open var overrideWhiteTemp: Boolean

  @JsName("bOverride_ColorSaturation")
  public open var overrideColorSaturation: Boolean

  @JsName("bOverride_VignetteIntensity")
  public open var overrideVignetteIntensity: Boolean

  @JsName("bOverride_AutoExposureMethod")
  public open var overrideAutoExposureMethod: Boolean

  @JsName("bOverride_CameraISO")
  public open var overrideCameraIso: Boolean

  @JsName("bOverride_CameraShutterSpeed")
  public open var overrideCameraShutterSpeed: Boolean

  @JsName("bOverride_DepthOfFieldFstop")
  public open var overrideDepthOfFieldFstop: Boolean

  @JsName("WhiteTemp")
  public open var whiteTemp: Number

  @JsName("VignetteIntensity")
  public open var vignetteIntensity: Number

  @JsName("ColorSaturation")
  public open var colorSaturation: Vector4

  @JsName("AutoExposureMethod")
  public open var autoExposureMethod: String

  @JsName("CameraISO")
  public open var cameraIso: Number

  @JsName("CameraShutterSpeed")
  public open var cameraShutterSpeed: Number

  @JsName("DepthOfFieldFstop")
  public open var depthOfFieldFstop: Number

  public open fun clone(): DatasmithPostProcessSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithPostProcessSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithPostProcessSettingsTemplate
  }
}

public open external class DatasmithCineCameraComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("FilmbackSettings")
  public open var filmbackSettings: DatasmithCameraFilmbackSettingsTemplate

  @JsName("LensSettings")
  public open var lensSettings: DatasmithCameraLensSettingsTemplate

  @JsName("FocusSettings")
  public open var focusSettings: DatasmithCameraFocusSettingsTemplate

  @JsName("CurrentFocalLength")
  public open var currentFocalLength: Number

  @JsName("CurrentAperture")
  public open var currentAperture: Number

  @JsName("PostProcessSettings")
  public open var postProcessSettings: DatasmithPostProcessSettingsTemplate

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithCineCameraComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithCineCameraComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithCineCameraComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithCineCameraComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithCineCameraComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithCineCameraComponentTemplate
  }
}

@JsName("T$810")
public external interface Object810 {
  @JsName("OutKeys")
  public var outKeys: Array<String>

  @JsName("OutValues")
  public var outValues: Array<String>
}

@JsName("T$811")
public external interface Object811 {
  @JsName("OutObjects")
  public var outObjects: Array<UObject>

  @JsName("OutValues")
  public var outValues: Array<String>
}

@JsName("T$812")
public external interface OutUserDataProvider {
  @JsName("OutUserData")
  public var outUserData: Array<DatasmithAssetUserData>
}

public open external class DatasmithContentBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithContentBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithContentBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithContentBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithContentBlueprintLibrary

    @JsName("GetDatasmithUserDataValueForKey")
    public fun getDatasmithUserDataValueForKey(uObject: UObject, key: String): String

    @JsName("GetDatasmithUserDataKeysAndValuesForValue")
    public fun getDatasmithUserDataKeysAndValuesForValue(
      uObject: UObject,
      stringToMatch: String,
      outKeys: Array<String>,
      outValues: Array<String>,
    ): Object810

    @JsName("GetDatasmithUserData")
    public fun getDatasmithUserData(uObject: UObject): DatasmithAssetUserData

    @JsName("GetAllObjectsAndValuesForKey")
    public fun getAllObjectsAndValuesForKey(
      key: String,
      objectClass: UnrealEngineClass,
      outObjects: Array<UObject>,
      outValues: Array<String>,
    ): Object811

    @JsName("GetAllDatasmithUserData")
    public fun getAllDatasmithUserData(objectClass: UnrealEngineClass,
        outUserData: Array<DatasmithAssetUserData>): OutUserDataProvider

    @JsName("C")
    public fun copy(other: UObject): DatasmithContentBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): DatasmithContentBlueprintLibrary
  }
}

public open external class DatasmithCustomActionBase(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithCustomActionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithCustomActionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithCustomActionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithCustomActionBase

    @JsName("C")
    public fun copy(other: UObject): DatasmithCustomActionBase

    @JsName("C")
    public fun copy(other: Any): DatasmithCustomActionBase
  }
}

public open external class DatasmithDecalComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("SortOrder")
  public open var sortOrder: Number

  @JsName("DecalSize")
  public open var decalSize: Vector

  @JsName("Material")
  public open var material: MaterialInterface

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithDecalComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithDecalComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithDecalComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithDecalComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithDecalComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithDecalComponentTemplate
  }
}

public open external class DatasmithImportedSequencesActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("ImportedSequences")
  public open var importedSequences: Array<LevelSequence>

  @JsName("PlayLevelSequence")
  public open fun playLevelSequence(sequenceToPlay: LevelSequence): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithImportedSequencesActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithImportedSequencesActor

    @JsName("C")
    public fun copy(other: UObject): DatasmithImportedSequencesActor

    @JsName("C")
    public fun copy(other: Any): DatasmithImportedSequencesActor
  }
}

public open external class DatasmithCommonTessellationOptions(
  outer: UObject,
) : DatasmithOptionsBase {
  @JsName("Options")
  public open var options: DatasmithTessellationOptions

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithCommonTessellationOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithCommonTessellationOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithCommonTessellationOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithCommonTessellationOptions

    @JsName("C")
    public fun copy(other: UObject): DatasmithCommonTessellationOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithCommonTessellationOptions
  }
}

@JsName("EDatasmithImportSearchPackagePolicy")
public external object DatasmithImportSearchPackagePolicy {
  public var Current: String

  public var All: String

  @JsName("EDatasmithImportSearchPackagePolicy_MAX")
  public var Max: String
}

@JsName("EDatasmithImportAssetConflictPolicy")
public external object DatasmithImportAssetConflictPolicy {
  public var Replace: String

  public var Update: String

  public var Use: String

  public var Ignore: String

  @JsName("EDatasmithImportAssetConflictPolicy_MAX")
  public var Max: String
}

@JsName("EDatasmithImportActorPolicy")
public external object DatasmithImportActorPolicy {
  public var Update: String

  public var Full: String

  public var Ignore: String

  @JsName("EDatasmithImportActorPolicy_MAX")
  public var Max: String
}

@JsName("EDatasmithImportMaterialQuality")
public external object DatasmithImportMaterialQuality {
  @JsName("UseNoFresnelCurves")
  public var NoFresnelCurves: String

  @JsName("UseSimplifierFresnelCurves")
  public var SimplifierFresnelCurves: String

  @JsName("UseRealFresnelCurves")
  public var RealFresnelCurves: String

  @JsName("EDatasmithImportMaterialQuality_MAX")
  public var Max: String
}

public open external class DatasmithReimportOptions {
  @JsName("bUpdateActors")
  public open var updateActors: Boolean

  @JsName("bRespawnDeletedActors")
  public open var respawnDeletedActors: Boolean

  public open fun clone(): DatasmithReimportOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithReimportOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithReimportOptions
  }
}

public open external class DatasmithImportOptions(
  outer: UObject,
) : DatasmithOptionsBase {
  @JsName("SearchPackagePolicy")
  public open var searchPackagePolicy: String

  @JsName("MaterialConflictPolicy")
  public open var materialConflictPolicy: String

  @JsName("TextureConflictPolicy")
  public open var textureConflictPolicy: String

  @JsName("StaticMeshActorImportPolicy")
  public open var staticMeshActorImportPolicy: String

  @JsName("LightImportPolicy")
  public open var lightImportPolicy: String

  @JsName("CameraImportPolicy")
  public open var cameraImportPolicy: String

  @JsName("OtherActorImportPolicy")
  public open var otherActorImportPolicy: String

  @JsName("MaterialQuality")
  public open var materialQuality: String

  @JsName("BaseOptions")
  public open var baseOptions: DatasmithImportBaseOptions

  @JsName("ReimportOptions")
  public open var reimportOptions: DatasmithReimportOptions

  @JsName("Filename")
  public open var filename: String

  @JsName("FilePath")
  public open var filePath: String

  @JsName("SourceUri")
  public open var sourceUri: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithImportOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithImportOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithImportOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithImportOptions

    @JsName("C")
    public fun copy(other: UObject): DatasmithImportOptions

    @JsName("C")
    public fun copy(other: Any): DatasmithImportOptions
  }
}

public open external class DatasmithLandscapeTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("LandscapeMaterial")
  public open var landscapeMaterial: MaterialInterface

  @JsName("StaticLightingLOD")
  public open var staticLightingLod: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithLandscapeTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithLandscapeTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithLandscapeTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithLandscapeTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithLandscapeTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithLandscapeTemplate
  }
}

public open external class DatasmithLightComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("bVisible")
  public open var visible: Boolean

  @JsName("CastShadows")
  public open var castShadows: Boolean

  @JsName("bUseTemperature")
  public open var useTemperature: Boolean

  @JsName("bUseIESBrightness")
  public open var useIesBrightness: Boolean

  @JsName("Intensity")
  public open var intensity: Number

  @JsName("Temperature")
  public open var temperature: Number

  @JsName("IESBrightnessScale")
  public open var iesBrightnessScale: Number

  @JsName("LightColor")
  public open var lightColor: LinearColor

  @JsName("LightFunctionMaterial")
  public open var lightFunctionMaterial: MaterialInterface

  @JsName("IESTexture")
  public open var iesTexture: TextureLightProfile

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithLightComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithLightComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithLightComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithLightComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithLightComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithLightComponentTemplate
  }
}

public open external class DatasmithStaticParameterSetTemplate {
  @JsName("StaticSwitchParameters")
  public open var staticSwitchParameters: Any

  public open fun clone(): DatasmithStaticParameterSetTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticParameterSetTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticParameterSetTemplate
  }
}

public open external class DatasmithMaterialInstanceTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("ParentMaterial")
  public open var parentMaterial: MaterialInterface

  @JsName("ScalarParameterValues")
  public open var scalarParameterValues: Any

  @JsName("VectorParameterValues")
  public open var vectorParameterValues: Any

  @JsName("TextureParameterValues")
  public open var textureParameterValues: Any

  @JsName("StaticParameters")
  public open var staticParameters: DatasmithStaticParameterSetTemplate

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithMaterialInstanceTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithMaterialInstanceTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithMaterialInstanceTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithMaterialInstanceTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithMaterialInstanceTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithMaterialInstanceTemplate
  }
}

public open external class DatasmithPointLightComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("IntensityUnits")
  public open var intensityUnits: String

  @JsName("SourceRadius")
  public open var sourceRadius: Number

  @JsName("SourceLength")
  public open var sourceLength: Number

  @JsName("AttenuationRadius")
  public open var attenuationRadius: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithPointLightComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithPointLightComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithPointLightComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithPointLightComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithPointLightComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithPointLightComponentTemplate
  }
}

public open external class DatasmithPostProcessVolumeTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("Settings")
  public open var settings: DatasmithPostProcessSettingsTemplate

  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("bUnbound")
  public open var unbound: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithPostProcessVolumeTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithPostProcessVolumeTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithPostProcessVolumeTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithPostProcessVolumeTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithPostProcessVolumeTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithPostProcessVolumeTemplate
  }
}

public open external class DatasmithScene(
  outer: UObject,
) : UObject {
  @JsName("AssetImportData")
  public open var assetImportData: DatasmithSceneImportData

  @JsName("BulkDataVersion")
  public open var bulkDataVersion: Number

  @JsName("StaticMeshes")
  public open var staticMeshes: Any

  @JsName("Textures")
  public open var textures: Any

  @JsName("MaterialFunctions")
  public open var materialFunctions: Any

  @JsName("Materials")
  public open var materials: Any

  @JsName("LevelSequences")
  public open var levelSequences: Any

  @JsName("LevelVariantSets")
  public open var levelVariantSets: Any

  @JsName("AssetUserData")
  public open var assetUserData: Array<AssetUserData>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithScene

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithScene

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithScene

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithScene

    @JsName("C")
    public fun copy(other: UObject): DatasmithScene

    @JsName("C")
    public fun copy(other: Any): DatasmithScene
  }
}

public open external class DatasmithSceneActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("Scene")
  public open var scene: DatasmithScene

  @JsName("RelatedActors")
  public open var relatedActors: Any

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithSceneActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithSceneActor

    @JsName("C")
    public fun copy(other: UObject): DatasmithSceneActor

    @JsName("C")
    public fun copy(other: Any): DatasmithSceneActor
  }
}

public open external class DatasmithSceneComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("RelativeTransform")
  public open var relativeTransform: Transform

  @JsName("Mobility")
  public open var mobility: String

  @JsName("AttachParent")
  public open var attachParent: SceneComponent

  @JsName("bVisible")
  public open var visible: Boolean

  @JsName("Tags")
  public open var tags: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithSceneComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithSceneComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithSceneComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithSceneComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithSceneComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithSceneComponentTemplate
  }
}

public open external class DatasmithSkyLightComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("SourceType")
  public open var sourceType: String

  @JsName("CubemapResolution")
  public open var cubemapResolution: Number

  @JsName("Cubemap")
  public open var cubemap: TextureCube

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithSkyLightComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithSkyLightComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithSkyLightComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithSkyLightComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithSkyLightComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithSkyLightComponentTemplate
  }
}

public open external class DatasmithSpotLightComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("InnerConeAngle")
  public open var innerConeAngle: Number

  @JsName("OuterConeAngle")
  public open var outerConeAngle: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithSpotLightComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithSpotLightComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithSpotLightComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithSpotLightComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithSpotLightComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithSpotLightComponentTemplate
  }
}

public open external class DatasmithStaticMeshComponentTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("StaticMesh")
  public open var staticMesh: StaticMesh

  @JsName("OverrideMaterials")
  public open var overrideMaterials: Array<MaterialInterface>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshComponentTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshComponentTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshComponentTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshComponentTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshComponentTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshComponentTemplate
  }
}

public open external class DatasmithMeshSectionInfoMapTemplate {
  @JsName("Map")
  public open var map: Any

  public open fun clone(): DatasmithMeshSectionInfoMapTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithMeshSectionInfoMapTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithMeshSectionInfoMapTemplate
  }
}

public open external class DatasmithMeshBuildSettingsTemplate {
  @JsName("bUseMikkTSpace")
  public open var useMikkTSpace: Boolean

  @JsName("bRecomputeNormals")
  public open var recomputeNormals: Boolean

  @JsName("bRecomputeTangents")
  public open var recomputeTangents: Boolean

  @JsName("bRemoveDegenerates")
  public open var removeDegenerates: Boolean

  @JsName("bUseHighPrecisionTangentBasis")
  public open var useHighPrecisionTangentBasis: Boolean

  @JsName("bUseFullPrecisionUVs")
  public open var useFullPrecisionUVs: Boolean

  @JsName("bGenerateLightmapUVs")
  public open var generateLightmapUVs: Boolean

  @JsName("MinLightmapResolution")
  public open var minLightmapResolution: Number

  @JsName("SrcLightmapIndex")
  public open var srcLightmapIndex: Number

  @JsName("DstLightmapIndex")
  public open var dstLightmapIndex: Number

  public open fun clone(): DatasmithMeshBuildSettingsTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithMeshBuildSettingsTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithMeshBuildSettingsTemplate
  }
}

public open external class DatasmithStaticMaterialTemplate {
  @JsName("MaterialSlotName")
  public open var materialSlotName: String

  @JsName("MaterialInterface")
  public open var materialInterface: MaterialInterface

  public open fun clone(): DatasmithStaticMaterialTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMaterialTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMaterialTemplate
  }
}

public open external class DatasmithStaticMeshTemplate(
  outer: UObject,
) : DatasmithObjectTemplate {
  @JsName("SectionInfoMap")
  public open var sectionInfoMap: DatasmithMeshSectionInfoMapTemplate

  @JsName("LightMapCoordinateIndex")
  public open var lightMapCoordinateIndex: Number

  @JsName("LightMapResolution")
  public open var lightMapResolution: Number

  @JsName("BuildSettings")
  public open var buildSettings: Array<DatasmithMeshBuildSettingsTemplate>

  @JsName("StaticMaterials")
  public open var staticMaterials: Array<DatasmithStaticMaterialTemplate>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DatasmithStaticMeshTemplate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DatasmithStaticMeshTemplate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DatasmithStaticMeshTemplate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DatasmithStaticMeshTemplate

    @JsName("C")
    public fun copy(other: UObject): DatasmithStaticMeshTemplate

    @JsName("C")
    public fun copy(other: Any): DatasmithStaticMeshTemplate
  }
}

@JsName("EClothMassMode")
public external object ClothMassMode {
  public var UniformMass: String

  public var TotalMass: String

  public var Density: String

  public var MaxClothMassMode: String

  @JsName("EClothMassMode_MAX")
  public var Max: String
}

public open external class ChaosClothWeightedValue {
  @JsName("Low")
  public open var low: Number

  @JsName("High")
  public open var high: Number

  public open fun clone(): ChaosClothWeightedValue

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChaosClothWeightedValue

    @JsName("C")
    public fun copy(other: Any): ChaosClothWeightedValue
  }
}

@JsName("EChaosClothTetherMode")
public external object ChaosClothTetherMode {
  public var FastTetherFastLength: String

  public var AccurateTetherFastLength: String

  public var AccurateTetherAccurateLength: String

  public var MaxChaosClothTetherMode: String

  @JsName("EChaosClothTetherMode_MAX")
  public var Max: String
}

public open external class ChaosClothConfig(
  outer: UObject,
) : ClothConfigCommon {
  @JsName("MassMode")
  public open var massMode: String

  @JsName("UniformMass")
  public open var uniformMass: Number

  @JsName("TotalMass")
  public open var totalMass: Number

  @JsName("Density")
  public open var density: Number

  @JsName("MinPerParticleMass")
  public open var minPerParticleMass: Number

  @JsName("EdgeStiffnessWeighted")
  public open var edgeStiffnessWeighted: ChaosClothWeightedValue

  @JsName("BendingStiffnessWeighted")
  public open var bendingStiffnessWeighted: ChaosClothWeightedValue

  @JsName("bUseBendingElements")
  public open var useBendingElements: Boolean

  @JsName("AreaStiffnessWeighted")
  public open var areaStiffnessWeighted: ChaosClothWeightedValue

  @JsName("VolumeStiffness")
  public open var volumeStiffness: Number

  @JsName("TetherStiffness")
  public open var tetherStiffness: ChaosClothWeightedValue

  @JsName("TetherScale")
  public open var tetherScale: ChaosClothWeightedValue

  @JsName("bUseGeodesicDistance")
  public open var useGeodesicDistance: Boolean

  @JsName("ShapeTargetStiffness")
  public open var shapeTargetStiffness: Number

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("FrictionCoefficient")
  public open var frictionCoefficient: Number

  @JsName("bUseCCD")
  public open var useCcd: Boolean

  @JsName("bUseSelfCollisions")
  public open var useSelfCollisions: Boolean

  @JsName("SelfCollisionThickness")
  public open var selfCollisionThickness: Number

  @JsName("bUseLegacyBackstop")
  public open var useLegacyBackstop: Boolean

  @JsName("DampingCoefficient")
  public open var dampingCoefficient: Number

  @JsName("LocalDampingCoefficient")
  public open var localDampingCoefficient: Number

  @JsName("bUsePointBasedWindModel")
  public open var usePointBasedWindModel: Boolean

  @JsName("Drag")
  public open var drag: ChaosClothWeightedValue

  @JsName("Lift")
  public open var lift: ChaosClothWeightedValue

  @JsName("bUseGravityOverride")
  public open var useGravityOverride: Boolean

  @JsName("GravityScale")
  public open var gravityScale: Number

  @JsName("Gravity")
  public open var gravity: Vector

  @JsName("AnimDriveStiffness")
  public open var animDriveStiffness: ChaosClothWeightedValue

  @JsName("AnimDriveDamping")
  public open var animDriveDamping: ChaosClothWeightedValue

  @JsName("LinearVelocityScale")
  public open var linearVelocityScale: Vector

  @JsName("AngularVelocityScale")
  public open var angularVelocityScale: Number

  @JsName("FictitiousAngularScale")
  public open var fictitiousAngularScale: Number

  @JsName("bUseTetrahedralConstraints")
  public open var useTetrahedralConstraints: Boolean

  @JsName("bUseThinShellVolumeConstraints")
  public open var useThinShellVolumeConstraints: Boolean

  @JsName("bUseContinuousCollisionDetection")
  public open var useContinuousCollisionDetection: Boolean

  @JsName("EdgeStiffness")
  public open var edgeStiffness: Number

  @JsName("BendingStiffness")
  public open var bendingStiffness: Number

  @JsName("AreaStiffness")
  public open var areaStiffness: Number

  @JsName("TetherMode")
  public open var tetherMode: String

  @JsName("LimitScale")
  public open var limitScale: Number

  @JsName("DragCoefficient")
  public open var dragCoefficient: Number

  @JsName("LiftCoefficient")
  public open var liftCoefficient: Number

  @JsName("AnimDriveSpringStiffness")
  public open var animDriveSpringStiffness: Number

  @JsName("StrainLimitingStiffness")
  public open var strainLimitingStiffness: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosClothConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosClothConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosClothConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosClothConfig

    @JsName("C")
    public fun copy(other: UObject): ChaosClothConfig

    @JsName("C")
    public fun copy(other: Any): ChaosClothConfig
  }
}

public open external class ChaosClothSharedSimConfig(
  outer: UObject,
) : ClothSharedConfigCommon {
  @JsName("IterationCount")
  public open var iterationCount: Number

  @JsName("MaxIterationCount")
  public open var maxIterationCount: Number

  @JsName("SubdivisionCount")
  public open var subdivisionCount: Number

  @JsName("SelfCollisionThickness")
  public open var selfCollisionThickness: Number

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("bUseDampingOverride")
  public open var useDampingOverride: Boolean

  @JsName("Damping")
  public open var damping: Number

  @JsName("bUseGravityOverride")
  public open var useGravityOverride: Boolean

  @JsName("GravityScale")
  public open var gravityScale: Number

  @JsName("Gravity")
  public open var gravity: Vector

  @JsName("bUseLocalSpaceSimulation")
  public open var useLocalSpaceSimulation: Boolean

  @JsName("bUseXPBDConstraints")
  public open var useXpbdConstraints: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosClothSharedSimConfig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosClothSharedSimConfig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosClothSharedSimConfig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosClothSharedSimConfig

    @JsName("C")
    public fun copy(other: UObject): ChaosClothSharedSimConfig

    @JsName("C")
    public fun copy(other: Any): ChaosClothSharedSimConfig
  }
}

public open external class ChaosClothingSimulationFactory(
  outer: UObject,
) : ClothingSimulationFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosClothingSimulationFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosClothingSimulationFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosClothingSimulationFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosClothingSimulationFactory

    @JsName("C")
    public fun copy(other: UObject): ChaosClothingSimulationFactory

    @JsName("C")
    public fun copy(other: Any): ChaosClothingSimulationFactory
  }
}

public open external class ChaosClothingInteractor(
  outer: UObject,
) : ClothingInteractor {
  @JsName("SetWind")
  public open fun setWind(
    drag: Vector2d,
    lift: Vector2d,
    airDensity: Number,
    windVelocity: Vector,
  ): Unit

  @JsName("SetVelocityScale")
  public open fun setVelocityScale(
    linearVelocityScale: Vector,
    angularVelocityScale: Number,
    fictitiousAngularScale: Number,
  ): Unit

  @JsName("SetMaterialLinear")
  public open fun setMaterialLinear(
    edgeStiffness: Number,
    bendingStiffness: Number,
    areaStiffness: Number,
  ): Unit

  @JsName("SetMaterial")
  public open fun setMaterial(
    edgeStiffness: Vector2d,
    bendingStiffness: Vector2d,
    areaStiffness: Vector2d,
  ): Unit

  @JsName("SetLongRangeAttachmentLinear")
  public open fun setLongRangeAttachmentLinear(tetherStiffness: Number, tetherScale: Number): Unit

  @JsName("SetLongRangeAttachment")
  public open fun setLongRangeAttachment(tetherStiffness: Vector2d, tetherScale: Vector2d): Unit

  @JsName("SetGravity")
  public open fun setGravity(
    gravityScale: Number,
    isGravityOverridden: Boolean,
    gravityOverride: Vector,
  ): Unit

  @JsName("SetDamping")
  public open fun setDamping(dampingCoefficient: Number): Unit

  @JsName("SetCollision")
  public open fun setCollision(
    collisionThickness: Number,
    frictionCoefficient: Number,
    useCcd: Boolean,
    selfCollisionThickness: Number,
  ): Unit

  @JsName("SetBackstop")
  public open fun setBackstop(enabled: Boolean): Unit

  @JsName("SetAnimDriveLinear")
  public open fun setAnimDriveLinear(animDriveStiffness: Number): Unit

  @JsName("SetAnimDrive")
  public open fun setAnimDrive(animDriveStiffness: Vector2d, animDriveDamping: Vector2d): Unit

  @JsName("SetAerodynamics")
  public open fun setAerodynamics(
    dragCoefficient: Number,
    liftCoefficient: Number,
    windVelocity: Vector,
  ): Unit

  @JsName("ResetAndTeleport")
  public open fun resetAndTeleport(reset: Boolean, teleport: Boolean): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosClothingInteractor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosClothingInteractor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosClothingInteractor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosClothingInteractor

    @JsName("C")
    public fun copy(other: UObject): ChaosClothingInteractor

    @JsName("C")
    public fun copy(other: Any): ChaosClothingInteractor
  }
}

public open external class ChaosClothingSimulationInteractor(
  outer: UObject,
) : ClothingSimulationInteractor {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosClothingSimulationInteractor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosClothingSimulationInteractor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosClothingSimulationInteractor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosClothingSimulationInteractor

    @JsName("C")
    public fun copy(other: UObject): ChaosClothingSimulationInteractor

    @JsName("C")
    public fun copy(other: Any): ChaosClothingSimulationInteractor
  }
}

public open external class WmfMediaSettings(
  outer: UObject,
) : UObject {
  @JsName("AllowNonStandardCodecs")
  public open var allowNonStandardCodecs: Boolean

  @JsName("LowLatency")
  public open var lowLatency: Boolean

  @JsName("NativeAudioOut")
  public open var nativeAudioOut: Boolean

  @JsName("HardwareAcceleratedVideoDecoding")
  public open var hardwareAcceleratedVideoDecoding: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WmfMediaSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WmfMediaSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WmfMediaSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WmfMediaSettings

    @JsName("C")
    public fun copy(other: UObject): WmfMediaSettings

    @JsName("C")
    public fun copy(other: Any): WmfMediaSettings
  }
}

public open external class NamedInterface {
  @JsName("InterfaceName")
  public open var interfaceName: String

  @JsName("InterfaceObject")
  public open var interfaceObject: UObject

  public open fun clone(): NamedInterface

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NamedInterface

    @JsName("C")
    public fun copy(other: Any): NamedInterface
  }
}

public open external class NamedInterfaceDef {
  @JsName("InterfaceName")
  public open var interfaceName: String

  @JsName("InterfaceClassName")
  public open var interfaceClassName: String

  public open fun clone(): NamedInterfaceDef

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NamedInterfaceDef

    @JsName("C")
    public fun copy(other: Any): NamedInterfaceDef
  }
}

public open external class NamedInterfaces(
  outer: UObject,
) : UObject {
  @JsName("NamedInterfaces")
  public open var namedInterfaces: Array<NamedInterface>

  @JsName("NamedInterfaceDefs")
  public open var namedInterfaceDefs: Array<NamedInterfaceDef>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NamedInterfaces

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NamedInterfaces

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NamedInterfaces

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NamedInterfaces

    @JsName("C")
    public fun copy(other: UObject): NamedInterfaces

    @JsName("C")
    public fun copy(other: Any): NamedInterfaces
  }
}

public open external class TurnBasedMatchInterface(
  outer: UObject,
) : Interface {
  @JsName("OnMatchReceivedTurn")
  public open fun onMatchReceivedTurn(match: String, didBecomeActive: Boolean): Unit

  @JsName("OnMatchEnded")
  public open fun onMatchEnded(match: String): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TurnBasedMatchInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TurnBasedMatchInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TurnBasedMatchInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TurnBasedMatchInterface

    @JsName("C")
    public fun copy(other: UObject): TurnBasedMatchInterface

    @JsName("C")
    public fun copy(other: Any): TurnBasedMatchInterface
  }
}

public open external class AchievementBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AchievementBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AchievementBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AchievementBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AchievementBlueprintLibrary

    @JsName("GetCachedAchievementProgress")
    public fun getCachedAchievementProgress(
      worldContextObject: UObject,
      playerController: PlayerController,
      achievementId: String,
      foundId: Boolean,
      progress: Number,
    ): Object319

    @JsName("GetCachedAchievementDescription")
    public fun getCachedAchievementDescription(
      worldContextObject: UObject,
      playerController: PlayerController,
      achievementId: String,
      foundId: Boolean,
      title: String,
      lockedDescription: String,
      unlockedDescription: String,
      hidden: Boolean,
    ): Object318

    @JsName("C")
    public fun copy(other: UObject): AchievementBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): AchievementBlueprintLibrary
  }
}

public open external class AchievementQueryCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AchievementQueryCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AchievementQueryCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AchievementQueryCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AchievementQueryCallbackProxy

    @JsName("CacheAchievements")
    public fun cacheAchievements(worldContextObject: UObject, playerController: PlayerController):
        AchievementQueryCallbackProxy

    @JsName("CacheAchievementDescriptions")
    public fun cacheAchievementDescriptions(worldContextObject: UObject,
        playerController: PlayerController): AchievementQueryCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): AchievementQueryCallbackProxy

    @JsName("C")
    public fun copy(other: Any): AchievementQueryCallbackProxy
  }
}

public open external class AchievementWriteCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(
    WrittenAchievementName: String,
    WrittenProgress: Number,
    WrittenUserTag: Number,
  ) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(
    WrittenAchievementName: String,
    WrittenProgress: Number,
    WrittenUserTag: Number,
  ) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AchievementWriteCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AchievementWriteCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AchievementWriteCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AchievementWriteCallbackProxy

    @JsName("WriteAchievementProgress")
    public fun writeAchievementProgress(
      worldContextObject: UObject,
      playerController: PlayerController,
      achievementName: String,
      progress: Number,
      userTag: Number,
    ): AchievementWriteCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): AchievementWriteCallbackProxy

    @JsName("C")
    public fun copy(other: Any): AchievementWriteCallbackProxy
  }
}

public open external class ConnectionCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(ErrorCode: Number) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ConnectionCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ConnectionCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ConnectionCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ConnectionCallbackProxy

    @JsName("ConnectToService")
    public fun connectToService(worldContextObject: UObject, playerController: PlayerController):
        ConnectionCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): ConnectionCallbackProxy

    @JsName("C")
    public fun copy(other: Any): ConnectionCallbackProxy
  }
}

public open external class CreateSessionCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CreateSessionCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CreateSessionCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CreateSessionCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CreateSessionCallbackProxy

    @JsName("CreateSession")
    public fun createSession(
      worldContextObject: UObject,
      playerController: PlayerController,
      publicConnections: Number,
      useLan: Boolean,
    ): CreateSessionCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): CreateSessionCallbackProxy

    @JsName("C")
    public fun copy(other: Any): CreateSessionCallbackProxy
  }
}

public open external class DestroySessionCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DestroySessionCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DestroySessionCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DestroySessionCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DestroySessionCallbackProxy

    @JsName("DestroySession")
    public fun destroySession(worldContextObject: UObject, playerController: PlayerController):
        DestroySessionCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): DestroySessionCallbackProxy

    @JsName("C")
    public fun copy(other: Any): DestroySessionCallbackProxy
  }
}

public open external class EndMatchCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EndMatchCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EndMatchCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EndMatchCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EndMatchCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): EndMatchCallbackProxy

    @JsName("C")
    public fun copy(other: Any): EndMatchCallbackProxy
  }
}

public open external class EndTurnCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EndTurnCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EndTurnCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EndTurnCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EndTurnCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): EndTurnCallbackProxy

    @JsName("C")
    public fun copy(other: Any): EndTurnCallbackProxy
  }
}

public open external class BlueprintSessionResult {
  public open fun clone(): BlueprintSessionResult

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): BlueprintSessionResult

    @JsName("C")
    public fun copy(other: Any): BlueprintSessionResult
  }
}

public open external class FindSessionsCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess:
      UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure:
      UnrealEngineMulticastDelegate<(Results: Array<BlueprintSessionResult>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FindSessionsCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FindSessionsCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FindSessionsCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FindSessionsCallbackProxy

    @JsName("GetServerName")
    public fun getServerName(result: BlueprintSessionResult): String

    @JsName("GetPingInMs")
    public fun getPingInMs(result: BlueprintSessionResult): Number

    @JsName("GetMaxPlayers")
    public fun getMaxPlayers(result: BlueprintSessionResult): Number

    @JsName("GetCurrentPlayers")
    public fun getCurrentPlayers(result: BlueprintSessionResult): Number

    @JsName("FindSessions")
    public fun findSessions(
      worldContextObject: UObject,
      playerController: PlayerController,
      maxResults: Number,
      useLan: Boolean,
    ): FindSessionsCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): FindSessionsCallbackProxy

    @JsName("C")
    public fun copy(other: Any): FindSessionsCallbackProxy
  }
}

public open external class FindTurnBasedMatchCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(MatchID: String) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FindTurnBasedMatchCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FindTurnBasedMatchCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FindTurnBasedMatchCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FindTurnBasedMatchCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): FindTurnBasedMatchCallbackProxy

    @JsName("C")
    public fun copy(other: Any): FindTurnBasedMatchCallbackProxy
  }
}

@JsName("EInAppPurchaseState")
public external object InAppPurchaseState {
  public var Unknown: String

  public var Success: String

  public var Failed: String

  public var Cancelled: String

  public var Invalid: String

  public var NotAllowed: String

  public var Restored: String

  public var AlreadyOwned: String

  @JsName("EInAppPurchaseState_MAX")
  public var Max: String
}

public open external class InAppPurchaseProductInfo {
  @JsName("Identifier")
  public open var identifier: String

  @JsName("TransactionIdentifier")
  public open var transactionIdentifier: String

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("DisplayDescription")
  public open var displayDescription: String

  @JsName("DisplayPrice")
  public open var displayPrice: String

  @JsName("RawPrice")
  public open var rawPrice: Number

  @JsName("CurrencyCode")
  public open var currencyCode: String

  @JsName("CurrencySymbol")
  public open var currencySymbol: String

  @JsName("DecimalSeparator")
  public open var decimalSeparator: String

  @JsName("GroupingSeparator")
  public open var groupingSeparator: String

  @JsName("ReceiptData")
  public open var receiptData: String

  public open fun clone(): InAppPurchaseProductInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseProductInfo

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseProductInfo
  }
}

public open external class InAppPurchaseProductRequest {
  @JsName("ProductIdentifier")
  public open var productIdentifier: String

  @JsName("bIsConsumable")
  public open var isConsumable: Boolean

  public open fun clone(): InAppPurchaseProductRequest

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseProductRequest

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseProductRequest
  }
}

public open external class InAppPurchaseCallbackProxy(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseReceipts: InAppPurchaseProductInfo) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseReceipts: InAppPurchaseProductInfo) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseCallbackProxy

    @JsName("CreateProxyObjectForInAppPurchase")
    public fun createProxyObjectForInAppPurchase(playerController: PlayerController,
        productRequest: InAppPurchaseProductRequest): InAppPurchaseCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseCallbackProxy

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseCallbackProxy
  }
}

@JsName("EInAppPurchaseStatus")
public external object InAppPurchaseStatus {
  public var Invalid: String

  public var Failed: String

  public var Deferred: String

  public var Canceled: String

  public var Purchased: String

  public var Restored: String

  @JsName("EInAppPurchaseStatus_MAX")
  public var Max: String
}

public open external class InAppPurchaseReceiptInfo2 {
  @JsName("ItemName")
  public open var itemName: String

  @JsName("ItemId")
  public open var itemId: String

  @JsName("ValidationInfo")
  public open var validationInfo: String

  public open fun clone(): InAppPurchaseReceiptInfo2

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseReceiptInfo2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseReceiptInfo2
  }
}

public open external class InAppPurchaseProductRequest2 {
  @JsName("ProductIdentifier")
  public open var productIdentifier: String

  @JsName("bIsConsumable")
  public open var isConsumable: Boolean

  public open fun clone(): InAppPurchaseProductRequest2

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseProductRequest2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseProductRequest2
  }
}

public open external class InAppPurchaseCallbackProxy2(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseReceipts: Array<InAppPurchaseReceiptInfo2>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseReceipts: Array<InAppPurchaseReceiptInfo2>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseCallbackProxy2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseCallbackProxy2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseCallbackProxy2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseCallbackProxy2

    @JsName("CreateProxyObjectForInAppPurchaseUnprocessedPurchases")
    public
        fun createProxyObjectForInAppPurchaseUnprocessedPurchases(playerController: PlayerController):
        InAppPurchaseCallbackProxy2

    @JsName("CreateProxyObjectForInAppPurchaseQueryOwned")
    public fun createProxyObjectForInAppPurchaseQueryOwned(playerController: PlayerController):
        InAppPurchaseCallbackProxy2

    @JsName("CreateProxyObjectForInAppPurchase")
    public fun createProxyObjectForInAppPurchase(playerController: PlayerController,
        productRequest: InAppPurchaseProductRequest2): InAppPurchaseCallbackProxy2

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseCallbackProxy2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseCallbackProxy2
  }
}

public open external class InAppPurchaseQueryCallbackProxy(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess:
      UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure:
      UnrealEngineMulticastDelegate<(InAppPurchaseInformation: Array<InAppPurchaseProductInfo>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseQueryCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseQueryCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseQueryCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseQueryCallbackProxy

    @JsName("CreateProxyObjectForInAppPurchaseQuery")
    public fun createProxyObjectForInAppPurchaseQuery(playerController: PlayerController,
        productIdentifiers: Array<String>): InAppPurchaseQueryCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseQueryCallbackProxy

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseQueryCallbackProxy
  }
}

@JsName("EOnlineProxyStoreOfferDiscountType")
public external object OnlineProxyStoreOfferDiscountType {
  public var NotOnSale: String

  public var Percentage: String

  public var DiscountAmount: String

  public var PayAmount: String

  @JsName("EOnlineProxyStoreOfferDiscountType_MAX")
  public var Max: String
}

public open external class OnlineProxyStoreOffer {
  @JsName("OfferId")
  public open var offerId: String

  @JsName("Title")
  public open var title: String

  @JsName("Description")
  public open var description: String

  @JsName("LongDescription")
  public open var longDescription: String

  @JsName("RegularPriceText")
  public open var regularPriceText: String

  @JsName("RegularPrice")
  public open var regularPrice: Number

  @JsName("PriceText")
  public open var priceText: String

  @JsName("NumericPrice")
  public open var numericPrice: Number

  @JsName("CurrencyCode")
  public open var currencyCode: String

  @JsName("ReleaseDate")
  public open var releaseDate: DateTime

  @JsName("ExpirationDate")
  public open var expirationDate: DateTime

  @JsName("DiscountType")
  public open var discountType: String

  @JsName("DynamicFields")
  public open var dynamicFields: Any

  public open fun clone(): OnlineProxyStoreOffer

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): OnlineProxyStoreOffer

    @JsName("C")
    public fun copy(other: Any): OnlineProxyStoreOffer
  }
}

public open external class InAppPurchaseQueryCallbackProxy2(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess:
      UnrealEngineMulticastDelegate<(InAppOfferInformation: Array<OnlineProxyStoreOffer>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure:
      UnrealEngineMulticastDelegate<(InAppOfferInformation: Array<OnlineProxyStoreOffer>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseQueryCallbackProxy2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseQueryCallbackProxy2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseQueryCallbackProxy2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseQueryCallbackProxy2

    @JsName("CreateProxyObjectForInAppPurchaseQuery")
    public fun createProxyObjectForInAppPurchaseQuery(playerController: PlayerController,
        productIdentifiers: Array<String>): InAppPurchaseQueryCallbackProxy2

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseQueryCallbackProxy2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseQueryCallbackProxy2
  }
}

public open external class InAppPurchaseRestoreInfo {
  @JsName("Identifier")
  public open var identifier: String

  @JsName("ReceiptData")
  public open var receiptData: String

  @JsName("TransactionIdentifier")
  public open var transactionIdentifier: String

  public open fun clone(): InAppPurchaseRestoreInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreInfo

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreInfo
  }
}

public open external class InAppPurchaseRestoreCallbackProxy(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(CompletionStatus: String,
      InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(CompletionStatus: String,
      InAppRestorePurchaseInformation: Array<InAppPurchaseRestoreInfo>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseRestoreCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseRestoreCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseRestoreCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseRestoreCallbackProxy

    @JsName("CreateProxyObjectForInAppPurchaseRestore")
    public
        fun createProxyObjectForInAppPurchaseRestore(consumableProductFlags: Array<InAppPurchaseProductRequest>,
        playerController: PlayerController): InAppPurchaseRestoreCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreCallbackProxy

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreCallbackProxy
  }
}

public open external class InAppPurchaseRestoreInfo2 {
  @JsName("ItemName")
  public open var itemName: String

  @JsName("ItemId")
  public open var itemId: String

  @JsName("ValidationInfo")
  public open var validationInfo: String

  public open fun clone(): InAppPurchaseRestoreInfo2

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreInfo2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreInfo2
  }
}

public open external class InAppPurchaseRestoreCallbackProxy2(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseRestoreInfo: Array<InAppPurchaseRestoreInfo2>) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(PurchaseStatus: String,
      InAppPurchaseRestoreInfo: Array<InAppPurchaseRestoreInfo2>) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseRestoreCallbackProxy2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseRestoreCallbackProxy2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseRestoreCallbackProxy2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseRestoreCallbackProxy2

    @JsName("CreateProxyObjectForInAppPurchaseRestore")
    public
        fun createProxyObjectForInAppPurchaseRestore(consumableProductFlags: Array<InAppPurchaseProductRequest2>,
        playerController: PlayerController): InAppPurchaseRestoreCallbackProxy2

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreCallbackProxy2

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreCallbackProxy2
  }
}

public open external class IpConnection(
  outer: UObject,
) : NetConnection {
  @JsName("SocketErrorDisconnectDelay")
  public open var socketErrorDisconnectDelay: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IpConnection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IpConnection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IpConnection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IpConnection

    @JsName("C")
    public fun copy(other: UObject): IpConnection

    @JsName("C")
    public fun copy(other: Any): IpConnection
  }
}

public open external class IpNetDriver(
  outer: UObject,
) : NetDriver {
  @JsName("LogPortUnreach")
  public open var logPortUnreach: Boolean

  @JsName("AllowPlayerPortUnreach")
  public open var allowPlayerPortUnreach: Boolean

  @JsName("MaxPortCountToTry")
  public open var maxPortCountToTry: Any

  @JsName("ServerDesiredSocketReceiveBufferBytes")
  public open var serverDesiredSocketReceiveBufferBytes: Any

  @JsName("ServerDesiredSocketSendBufferBytes")
  public open var serverDesiredSocketSendBufferBytes: Any

  @JsName("ClientDesiredSocketReceiveBufferBytes")
  public open var clientDesiredSocketReceiveBufferBytes: Any

  @JsName("ClientDesiredSocketSendBufferBytes")
  public open var clientDesiredSocketSendBufferBytes: Any

  @JsName("MaxSecondsInReceive")
  public open var maxSecondsInReceive: Any

  @JsName("NbPacketsBetweenReceiveTimeTest")
  public open var nbPacketsBetweenReceiveTimeTest: Number

  @JsName("ResolutionConnectionTimeout")
  public open var resolutionConnectionTimeout: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IpNetDriver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IpNetDriver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IpNetDriver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IpNetDriver

    @JsName("C")
    public fun copy(other: UObject): IpNetDriver

    @JsName("C")
    public fun copy(other: Any): IpNetDriver
  }
}

public open external class JoinSessionCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): JoinSessionCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): JoinSessionCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): JoinSessionCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): JoinSessionCallbackProxy

    @JsName("JoinSession")
    public fun joinSession(
      worldContextObject: UObject,
      playerController: PlayerController,
      searchResult: BlueprintSessionResult,
    ): JoinSessionCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): JoinSessionCallbackProxy

    @JsName("C")
    public fun copy(other: Any): JoinSessionCallbackProxy
  }
}

public open external class LeaderboardBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LeaderboardBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LeaderboardBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LeaderboardBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LeaderboardBlueprintLibrary

    @JsName("WriteLeaderboardInteger")
    public fun writeLeaderboardInteger(
      playerController: PlayerController,
      statName: String,
      statValue: Number,
    ): Boolean

    @JsName("C")
    public fun copy(other: UObject): LeaderboardBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): LeaderboardBlueprintLibrary
  }
}

public open external class LeaderboardFlushCallbackProxy(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(SessionName: String) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LeaderboardFlushCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LeaderboardFlushCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LeaderboardFlushCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LeaderboardFlushCallbackProxy

    @JsName("CreateProxyObjectForFlush")
    public fun createProxyObjectForFlush(playerController: PlayerController, sessionName: String):
        LeaderboardFlushCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): LeaderboardFlushCallbackProxy

    @JsName("C")
    public fun copy(other: Any): LeaderboardFlushCallbackProxy
  }
}

public open external class LeaderboardQueryCallbackProxy(
  outer: UObject,
) : UObject {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<(LeaderboardValue: Number) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LeaderboardQueryCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LeaderboardQueryCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LeaderboardQueryCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LeaderboardQueryCallbackProxy

    @JsName("CreateProxyObjectForIntQuery")
    public fun createProxyObjectForIntQuery(playerController: PlayerController, statName: String):
        LeaderboardQueryCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): LeaderboardQueryCallbackProxy

    @JsName("C")
    public fun copy(other: Any): LeaderboardQueryCallbackProxy
  }
}

public open external class LogoutCallbackProxy(
  outer: UObject,
) : BlueprintAsyncActionBase {
  @JsName("OnSuccess")
  public open var onSuccess:
      UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

  @JsName("OnFailure")
  public open var onFailure:
      UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LogoutCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LogoutCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LogoutCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LogoutCallbackProxy

    @JsName("Logout")
    public fun logout(worldContextObject: UObject, playerController: PlayerController):
        LogoutCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): LogoutCallbackProxy

    @JsName("C")
    public fun copy(other: Any): LogoutCallbackProxy
  }
}

public open external class OnlineBeacon(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("BeaconConnectionInitialTimeout")
  public open var beaconConnectionInitialTimeout: Number

  @JsName("BeaconConnectionTimeout")
  public open var beaconConnectionTimeout: Number

  @JsName("NetDriver")
  public open var netDriver: NetDriver

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineBeacon

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineBeacon

    @JsName("C")
    public fun copy(other: UObject): OnlineBeacon

    @JsName("C")
    public fun copy(other: Any): OnlineBeacon
  }
}

public open external class OnlineBeaconHostObject(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("BeaconTypeName")
  public open var beaconTypeName: String

  @JsName("ClientBeaconActorClass")
  public open var clientBeaconActorClass: UnrealEngineClass

  @JsName("ClientActors")
  public open var clientActors: Array<OnlineBeaconClient>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineBeaconHostObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineBeaconHostObject

    @JsName("C")
    public fun copy(other: UObject): OnlineBeaconHostObject

    @JsName("C")
    public fun copy(other: Any): OnlineBeaconHostObject
  }
}

@JsName("EBeaconConnectionState")
public external object BeaconConnectionState {
  public var Invalid: String

  public var Closed: String

  public var Pending: String

  public var Open: String

  @JsName("EBeaconConnectionState_MAX")
  public var Max: String
}

public open external class OnlineBeaconClient(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeacon {
  @JsName("BeaconOwner")
  public open var beaconOwner: OnlineBeaconHostObject

  @JsName("BeaconConnection")
  public open var beaconConnection: NetConnection

  @JsName("ConnectionState")
  public open var connectionState: String

  @JsName("ClientOnConnected")
  public open fun clientOnConnected(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineBeaconClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineBeaconClient

    @JsName("C")
    public fun copy(other: UObject): OnlineBeaconClient

    @JsName("C")
    public fun copy(other: Any): OnlineBeaconClient
  }
}

public open external class OnlineBeaconHost(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeacon {
  @JsName("ListenPort")
  public open var listenPort: Number

  @JsName("bAuthRequired")
  public open var authRequired: Boolean

  @JsName("MaxAuthTokenSize")
  public open var maxAuthTokenSize: Any

  @JsName("ClientActors")
  public open var clientActors: Array<OnlineBeaconClient>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineBeaconHost

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineBeaconHost

    @JsName("C")
    public fun copy(other: UObject): OnlineBeaconHost

    @JsName("C")
    public fun copy(other: Any): OnlineBeaconHost
  }
}

public open external class OnlineEngineInterfaceImpl(
  outer: UObject,
) : OnlineEngineInterface {
  @JsName("MappedUniqueNetIdTypes")
  public open var mappedUniqueNetIdTypes: Any

  @JsName("CompatibleUniqueNetIdTypes")
  public open var compatibleUniqueNetIdTypes: Array<String>

  @JsName("VoiceSubsystemNameOverride")
  public open var voiceSubsystemNameOverride: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineEngineInterfaceImpl

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineEngineInterfaceImpl

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineEngineInterfaceImpl

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineEngineInterfaceImpl

    @JsName("C")
    public fun copy(other: UObject): OnlineEngineInterfaceImpl

    @JsName("C")
    public fun copy(other: Any): OnlineEngineInterfaceImpl
  }
}

@JsName("PIELoginSettingsInternal")
public open external class PieLoginSettingsInternal {
  public open var ID: String

  @JsName("Token")
  public open var token: String

  @JsName("Type")
  public open var type: String

  @JsName("TokenBytes")
  public open var tokenBytes: Array<Number>

  public open fun clone(): PieLoginSettingsInternal

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PieLoginSettingsInternal

    @JsName("C")
    public fun copy(other: Any): PieLoginSettingsInternal
  }
}

@JsName("OnlinePIESettings")
public open external class OnlinePieSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bOnlinePIEEnabled")
  public open var onlinePieEnabled: Boolean

  @JsName("Logins")
  public open var logins: Array<PieLoginSettingsInternal>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlinePieSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlinePieSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlinePieSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlinePieSettings

    @JsName("C")
    public fun copy(other: UObject): OnlinePieSettings

    @JsName("C")
    public fun copy(other: Any): OnlinePieSettings
  }
}

public open external class OnlineServicesEngineInterfaceImpl(
  outer: UObject,
) : OnlineEngineInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineServicesEngineInterfaceImpl

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineServicesEngineInterfaceImpl

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineServicesEngineInterfaceImpl

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineServicesEngineInterfaceImpl

    @JsName("C")
    public fun copy(other: UObject): OnlineServicesEngineInterfaceImpl

    @JsName("C")
    public fun copy(other: Any): OnlineServicesEngineInterfaceImpl
  }
}

public open external class OnlineSessionClient(
  outer: UObject,
) : OnlineSession {
  @JsName("bIsFromInvite")
  public open var isFromInvite: Boolean

  @JsName("bHandlingDisconnect")
  public open var handlingDisconnect: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineSessionClient

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineSessionClient

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineSessionClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineSessionClient

    @JsName("C")
    public fun copy(other: UObject): OnlineSessionClient

    @JsName("C")
    public fun copy(other: Any): OnlineSessionClient
  }
}

public open external class PlayerReservation {
  @JsName("UniqueId")
  public open var uniqueId: UniqueNetIdRepl

  @JsName("ValidationStr")
  public open var validationStr: String

  @JsName("Platform")
  public open var platform: String

  @JsName("bAllowCrossplay")
  public open var allowCrossplay: Boolean

  @JsName("ElapsedTime")
  public open var elapsedTime: Number

  public open fun clone(): PlayerReservation

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PlayerReservation

    @JsName("C")
    public fun copy(other: Any): PlayerReservation
  }
}

public open external class PartyReservation {
  @JsName("TeamNum")
  public open var teamNum: Number

  @JsName("PartyLeader")
  public open var partyLeader: UniqueNetIdRepl

  @JsName("PartyMembers")
  public open var partyMembers: Array<PlayerReservation>

  @JsName("RemovedPartyMembers")
  public open var removedPartyMembers: Array<PlayerReservation>

  public open fun clone(): PartyReservation

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PartyReservation

    @JsName("C")
    public fun copy(other: Any): PartyReservation
  }
}

@JsName("EClientRequestType")
public external object ClientRequestType {
  public var NonePending: String

  public var ExistingSessionReservation: String

  public var ReservationUpdate: String

  public var EmptyServerReservation: String

  public var Reconnect: String

  public var Abandon: String

  public var ReservationRemoveMembers: String

  public var AddOrUpdateReservation: String

  @JsName("EClientRequestType_MAX")
  public var Max: String
}

@JsName("EPartyReservationResult")
public external object PartyReservationResult {
  public var NoResult: String

  public var RequestPending: String

  public var GeneralError: String

  public var PartyLimitReached: String

  public var IncorrectPlayerCount: String

  public var RequestTimedOut: String

  public var ReservationDuplicate: String

  public var ReservationNotFound: String

  public var ReservationAccepted: String

  public var ReservationDenied: String

  @JsName("ReservationDenied_CrossPlayRestriction")
  public var ReservationDeniedCrossPlayRestriction: String

  @JsName("ReservationDenied_Banned")
  public var ReservationDeniedBanned: String

  public var ReservationRequestCanceled: String

  public var ReservationInvalid: String

  public var BadSessionId: String

  @JsName("ReservationDenied_ContainsExistingPlayers")
  public var ReservationDeniedContainsExistingPlayers: String

  @JsName("EPartyReservationResult_MAX")
  public var Max: String
}

public open external class PartyBeaconClient(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconClient {
  @JsName("DestSessionId")
  public open var destSessionId: String

  @JsName("PendingReservation")
  public open var pendingReservation: PartyReservation

  @JsName("RequestType")
  public open var requestType: String

  @JsName("bPendingReservationSent")
  public open var pendingReservationSent: Boolean

  @JsName("bCancelReservation")
  public open var cancelReservation: Boolean

  @JsName("ServerUpdateReservationRequest")
  public open fun serverUpdateReservationRequest(sessionId: String,
      reservationUpdate: PartyReservation): Unit

  @JsName("ServerReservationRequest")
  public open fun serverReservationRequest(sessionId: String, reservation: PartyReservation): Unit

  @JsName("ServerRemoveMemberFromReservationRequest")
  public open fun serverRemoveMemberFromReservationRequest(sessionId: String,
      reservationUpdate: PartyReservation): Unit

  @JsName("ServerCancelReservationRequest")
  public open fun serverCancelReservationRequest(partyLeader: UniqueNetIdRepl): Unit

  @JsName("ServerAddOrUpdateReservationRequest")
  public open fun serverAddOrUpdateReservationRequest(sessionId: String,
      reservation: PartyReservation): Unit

  @JsName("ClientSendReservationUpdates")
  public open fun clientSendReservationUpdates(numRemainingReservations: Number): Unit

  @JsName("ClientSendReservationFull")
  public open fun clientSendReservationFull(): Unit

  @JsName("ClientReservationResponse")
  public open fun clientReservationResponse(reservationResponse: String): Unit

  @JsName("ClientCancelReservationResponse")
  public open fun clientCancelReservationResponse(reservationResponse: String): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PartyBeaconClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PartyBeaconClient

    @JsName("C")
    public fun copy(other: UObject): PartyBeaconClient

    @JsName("C")
    public fun copy(other: Any): PartyBeaconClient
  }
}

public open external class PartyBeaconCrossplayPlatformMapping {
  @JsName("PlatformName")
  public open var platformName: String

  @JsName("PlatformType")
  public open var platformType: String

  public open fun clone(): PartyBeaconCrossplayPlatformMapping

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PartyBeaconCrossplayPlatformMapping

    @JsName("C")
    public fun copy(other: Any): PartyBeaconCrossplayPlatformMapping
  }
}

public open external class PartyBeaconState(
  outer: UObject,
) : UObject {
  @JsName("SessionName")
  public open var sessionName: String

  @JsName("NumConsumedReservations")
  public open var numConsumedReservations: Number

  @JsName("MaxReservations")
  public open var maxReservations: Number

  @JsName("NumTeams")
  public open var numTeams: Number

  @JsName("NumPlayersPerTeam")
  public open var numPlayersPerTeam: Number

  @JsName("TeamAssignmentMethod")
  public open var teamAssignmentMethod: String

  @JsName("ReservedHostTeamNum")
  public open var reservedHostTeamNum: Number

  @JsName("ForceTeamNum")
  public open var forceTeamNum: Number

  @JsName("bRestrictCrossConsole")
  public open var restrictCrossConsole: Boolean

  @JsName("PlatformCrossplayRestrictions")
  public open var platformCrossplayRestrictions: Array<String>

  @JsName("PlatformTypeMapping")
  public open var platformTypeMapping: Array<PartyBeaconCrossplayPlatformMapping>

  @JsName("bEnableRemovalRequests")
  public open var enableRemovalRequests: Boolean

  @JsName("Reservations")
  public open var reservations: Array<PartyReservation>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PartyBeaconState

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PartyBeaconState

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PartyBeaconState

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PartyBeaconState

    @JsName("C")
    public fun copy(other: UObject): PartyBeaconState

    @JsName("C")
    public fun copy(other: Any): PartyBeaconState
  }
}

public open external class PartyBeaconHost(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconHostObject {
  @JsName("State")
  public open var state: PartyBeaconState

  @JsName("bLogoutOnSessionTimeout")
  public open var logoutOnSessionTimeout: Boolean

  @JsName("SessionTimeoutSecs")
  public open var sessionTimeoutSecs: Number

  @JsName("TravelSessionTimeoutSecs")
  public open var travelSessionTimeoutSecs: Number

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PartyBeaconHost

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PartyBeaconHost

    @JsName("C")
    public fun copy(other: UObject): PartyBeaconHost

    @JsName("C")
    public fun copy(other: Any): PartyBeaconHost
  }
}

@JsName("EMPMatchOutcome")
public external object MPMatchOutcome {
  public var None: String

  public var Quit: String

  public var Won: String

  public var Lost: String

  public var Tied: String

  public var TimeExpired: String

  public var First: String

  public var Second: String

  public var Third: String

  public var Fourth: String

  @JsName("EMPMatchOutcome_MAX")
  public var Max: String
}

public open external class QuitMatchCallbackProxy(
  outer: UObject,
) : OnlineBlueprintCallProxyBase {
  @JsName("OnSuccess")
  public open var onSuccess: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnFailure")
  public open var onFailure: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): QuitMatchCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): QuitMatchCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): QuitMatchCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): QuitMatchCallbackProxy

    @JsName("QuitMatch")
    public fun quitMatch(
      worldContextObject: UObject,
      playerController: PlayerController,
      matchId: String,
      outcome: String,
      turnTimeoutInSeconds: Number,
    ): QuitMatchCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): QuitMatchCallbackProxy

    @JsName("C")
    public fun copy(other: Any): QuitMatchCallbackProxy
  }
}

@JsName("ShowLoginUICallbackProxy")
public open external class ShowLoginUiCallbackProxy(
  outer: UObject,
) : BlueprintAsyncActionBase {
  @JsName("OnSuccess")
  public open var onSuccess:
      UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

  @JsName("OnFailure")
  public open var onFailure:
      UnrealEngineMulticastDelegate<(PlayerController: PlayerController) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ShowLoginUiCallbackProxy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ShowLoginUiCallbackProxy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ShowLoginUiCallbackProxy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ShowLoginUiCallbackProxy

    @JsName("ShowExternalLoginUI")
    public fun showExternalLoginUi(worldContextObject: UObject,
        inPlayerController: PlayerController): ShowLoginUiCallbackProxy

    @JsName("C")
    public fun copy(other: UObject): ShowLoginUiCallbackProxy

    @JsName("C")
    public fun copy(other: Any): ShowLoginUiCallbackProxy
  }
}

public open external class SpectatorReservation {
  @JsName("SpectatorId")
  public open var spectatorId: UniqueNetIdRepl

  @JsName("Spectator")
  public open var spectator: PlayerReservation

  public open fun clone(): SpectatorReservation

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpectatorReservation

    @JsName("C")
    public fun copy(other: Any): SpectatorReservation
  }
}

@JsName("ESpectatorClientRequestType")
public external object SpectatorClientRequestType {
  public var NonePending: String

  public var ExistingSessionReservation: String

  public var ReservationUpdate: String

  public var EmptyServerReservation: String

  public var Reconnect: String

  public var Abandon: String

  @JsName("ESpectatorClientRequestType_MAX")
  public var Max: String
}

@JsName("ESpectatorReservationResult")
public external object SpectatorReservationResult {
  public var NoResult: String

  public var RequestPending: String

  public var GeneralError: String

  public var SpectatorLimitReached: String

  public var IncorrectPlayerCount: String

  public var RequestTimedOut: String

  public var ReservationDuplicate: String

  public var ReservationNotFound: String

  public var ReservationAccepted: String

  public var ReservationDenied: String

  @JsName("ReservationDenied_CrossPlayRestriction")
  public var ReservationDeniedCrossPlayRestriction: String

  @JsName("ReservationDenied_Banned")
  public var ReservationDeniedBanned: String

  public var ReservationRequestCanceled: String

  public var ReservationInvalid: String

  public var BadSessionId: String

  @JsName("ReservationDenied_ContainsExistingPlayers")
  public var ReservationDeniedContainsExistingPlayers: String

  @JsName("ESpectatorReservationResult_MAX")
  public var Max: String
}

public open external class SpectatorBeaconClient(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconClient {
  @JsName("DestSessionId")
  public open var destSessionId: String

  @JsName("PendingReservation")
  public open var pendingReservation: SpectatorReservation

  @JsName("RequestType")
  public open var requestType: String

  @JsName("bPendingReservationSent")
  public open var pendingReservationSent: Boolean

  @JsName("bCancelReservation")
  public open var cancelReservation: Boolean

  @JsName("ServerReservationRequest")
  public open fun serverReservationRequest(sessionId: String, reservation: SpectatorReservation):
      Unit

  @JsName("ServerCancelReservationRequest")
  public open fun serverCancelReservationRequest(spectator: UniqueNetIdRepl): Unit

  @JsName("ClientSendReservationUpdates")
  public open fun clientSendReservationUpdates(numRemainingReservations: Number): Unit

  @JsName("ClientSendReservationFull")
  public open fun clientSendReservationFull(): Unit

  @JsName("ClientReservationResponse")
  public open fun clientReservationResponse(reservationResponse: String): Unit

  @JsName("ClientCancelReservationResponse")
  public open fun clientCancelReservationResponse(reservationResponse: String): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpectatorBeaconClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpectatorBeaconClient

    @JsName("C")
    public fun copy(other: UObject): SpectatorBeaconClient

    @JsName("C")
    public fun copy(other: Any): SpectatorBeaconClient
  }
}

public open external class SpectatorBeaconState(
  outer: UObject,
) : UObject {
  @JsName("SessionName")
  public open var sessionName: String

  @JsName("NumConsumedReservations")
  public open var numConsumedReservations: Number

  @JsName("MaxReservations")
  public open var maxReservations: Number

  @JsName("bRestrictCrossConsole")
  public open var restrictCrossConsole: Boolean

  @JsName("Reservations")
  public open var reservations: Array<SpectatorReservation>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SpectatorBeaconState

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SpectatorBeaconState

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpectatorBeaconState

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpectatorBeaconState

    @JsName("C")
    public fun copy(other: UObject): SpectatorBeaconState

    @JsName("C")
    public fun copy(other: Any): SpectatorBeaconState
  }
}

public open external class SpectatorBeaconHost(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconHostObject {
  @JsName("State")
  public open var state: SpectatorBeaconState

  @JsName("bLogoutOnSessionTimeout")
  public open var logoutOnSessionTimeout: Boolean

  @JsName("SessionTimeoutSecs")
  public open var sessionTimeoutSecs: Number

  @JsName("TravelSessionTimeoutSecs")
  public open var travelSessionTimeoutSecs: Number

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpectatorBeaconHost

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpectatorBeaconHost

    @JsName("C")
    public fun copy(other: UObject): SpectatorBeaconHost

    @JsName("C")
    public fun copy(other: Any): SpectatorBeaconHost
  }
}

public open external class TestBeaconClient(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconClient {
  @JsName("ServerPong")
  public open fun serverPong(): Unit

  @JsName("ClientPing")
  public open fun clientPing(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBeaconClient

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBeaconClient

    @JsName("C")
    public fun copy(other: UObject): TestBeaconClient

    @JsName("C")
    public fun copy(other: Any): TestBeaconClient
  }
}

public open external class TestBeaconHost(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : OnlineBeaconHostObject {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBeaconHost

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBeaconHost

    @JsName("C")
    public fun copy(other: UObject): TestBeaconHost

    @JsName("C")
    public fun copy(other: Any): TestBeaconHost
  }
}

public open external class TurnBasedBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TurnBasedBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TurnBasedBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TurnBasedBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TurnBasedBlueprintLibrary

    @JsName("RegisterTurnBasedMatchInterfaceObject")
    public fun registerTurnBasedMatchInterfaceObject(
      worldContextObject: UObject,
      playerController: PlayerController,
      uObject: UObject,
    ): Unit

    @JsName("GetPlayerDisplayName")
    public fun getPlayerDisplayName(
      worldContextObject: UObject,
      playerController: PlayerController,
      matchId: String,
      playerIndex: Number,
      playerDisplayName: String,
    ): PlayerDisplayNameProvider

    @JsName("GetMyPlayerIndex")
    public fun getMyPlayerIndex(
      worldContextObject: UObject,
      playerController: PlayerController,
      matchId: String,
      playerIndex: Number,
    ): PlayerIndexProvider

    @JsName("GetIsMyTurn")
    public fun getIsMyTurn(
      worldContextObject: UObject,
      playerController: PlayerController,
      matchId: String,
      isMyTurn: Boolean,
    ): IsMyTurnProvider

    @JsName("C")
    public fun copy(other: UObject): TurnBasedBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): TurnBasedBlueprintLibrary
  }
}

public open external class VoipListenerSynthComponent(
  outer: UObject,
) : SynthComponent {
  @JsName("IsIdling")
  public open fun isIdling(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VoipListenerSynthComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VoipListenerSynthComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VoipListenerSynthComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VoipListenerSynthComponent

    @JsName("C")
    public fun copy(other: UObject): VoipListenerSynthComponent

    @JsName("C")
    public fun copy(other: Any): VoipListenerSynthComponent
  }
}

@JsName("K2Node_InAppPurchase")
public open external class K2NodeInAppPurchase(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchase

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchase

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchase
  }
}

@JsName("K2Node_InAppPurchase2")
public open external class K2NodeInAppPurchase2(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchase2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchase2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchase2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchase2

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchase2

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchase2
  }
}

@JsName("K2Node_InAppPurchaseQuery")
public open external class K2NodeInAppPurchaseQuery(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseQuery

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseQuery

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseQuery

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseQuery

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseQuery

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseQuery
  }
}

@JsName("K2Node_InAppPurchaseQuery2")
public open external class K2NodeInAppPurchaseQuery2(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseQuery2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseQuery2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseQuery2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseQuery2

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseQuery2

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseQuery2
  }
}

@JsName("K2Node_InAppPurchaseQueryOwned2")
public open external class K2NodeInAppPurchaseQueryOwned2(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseQueryOwned2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseQueryOwned2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseQueryOwned2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseQueryOwned2

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseQueryOwned2

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseQueryOwned2
  }
}

@JsName("K2Node_InAppPurchaseRestore")
public open external class K2NodeInAppPurchaseRestore(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseRestore

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseRestore

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseRestore

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseRestore

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseRestore

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseRestore
  }
}

@JsName("K2Node_InAppPurchaseRestore2")
public open external class K2NodeInAppPurchaseRestore2(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseRestore2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseRestore2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseRestore2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseRestore2

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseRestore2

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseRestore2
  }
}

@JsName("K2Node_InAppPurchaseUnprocessed2")
public open external class K2NodeInAppPurchaseUnprocessed2(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeInAppPurchaseUnprocessed2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeInAppPurchaseUnprocessed2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeInAppPurchaseUnprocessed2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeInAppPurchaseUnprocessed2

    @JsName("C")
    public fun copy(other: UObject): K2NodeInAppPurchaseUnprocessed2

    @JsName("C")
    public fun copy(other: Any): K2NodeInAppPurchaseUnprocessed2
  }
}

@JsName("K2Node_LeaderboardFlush")
public open external class K2NodeLeaderboardFlush(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeLeaderboardFlush

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeLeaderboardFlush

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeLeaderboardFlush

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeLeaderboardFlush

    @JsName("C")
    public fun copy(other: UObject): K2NodeLeaderboardFlush

    @JsName("C")
    public fun copy(other: Any): K2NodeLeaderboardFlush
  }
}

@JsName("K2Node_LeaderboardQuery")
public open external class K2NodeLeaderboardQuery(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeLeaderboardQuery

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeLeaderboardQuery

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeLeaderboardQuery

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeLeaderboardQuery

    @JsName("C")
    public fun copy(other: UObject): K2NodeLeaderboardQuery

    @JsName("C")
    public fun copy(other: Any): K2NodeLeaderboardQuery
  }
}

public open external class MovieSceneNiagaraTrack(
  outer: UObject,
) : MovieSceneNameableTrack {
  @JsName("Sections")
  public open var sections: Array<MovieSceneSection>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraTrack
  }
}

public open external class MovieSceneNiagaraParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraTrack {
  @JsName("Parameter")
  public open var parameter: NiagaraVariable

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraParameterTrack
  }
}

public open external class MovieSceneNiagaraBoolParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraParameterTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraBoolParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraBoolParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraBoolParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraBoolParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraBoolParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraBoolParameterTrack
  }
}

public open external class MovieSceneNiagaraColorParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraParameterTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraColorParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraColorParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraColorParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraColorParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraColorParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraColorParameterTrack
  }
}

public open external class MovieSceneNiagaraFloatParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraParameterTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraFloatParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraFloatParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraFloatParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraFloatParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraFloatParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraFloatParameterTrack
  }
}

public open external class MovieSceneNiagaraIntegerParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraParameterTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraIntegerParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraIntegerParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraIntegerParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraIntegerParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraIntegerParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraIntegerParameterTrack
  }
}

@JsName("ENiagaraSystemSpawnSectionStartBehavior")
public external object NiagaraSystemSpawnSectionStartBehavior {
  public var Activate: String

  @JsName("ENiagaraSystemSpawnSectionStartBehavior_MAX")
  public var Max: String
}

@JsName("ENiagaraSystemSpawnSectionEvaluateBehavior")
public external object NiagaraSystemSpawnSectionEvaluateBehavior {
  public var ActivateIfInactive: String

  public var None: String

  @JsName("ENiagaraSystemSpawnSectionEvaluateBehavior_MAX")
  public var Max: String
}

@JsName("ENiagaraSystemSpawnSectionEndBehavior")
public external object NiagaraSystemSpawnSectionEndBehavior {
  public var SetSystemInactive: String

  public var Deactivate: String

  public var None: String

  @JsName("ENiagaraSystemSpawnSectionEndBehavior_MAX")
  public var Max: String
}

public open external class MovieSceneNiagaraSystemSpawnSection(
  outer: UObject,
) : MovieSceneSection {
  @JsName("SectionStartBehavior")
  public open var sectionStartBehavior: String

  @JsName("SectionEvaluateBehavior")
  public open var sectionEvaluateBehavior: String

  @JsName("SectionEndBehavior")
  public open var sectionEndBehavior: String

  @JsName("AgeUpdateMode")
  public open var ageUpdateMode: String

  @JsName("bAllowScalability")
  public open var allowScalability: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraSystemSpawnSection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraSystemSpawnSection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraSystemSpawnSection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraSystemSpawnSection

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraSystemSpawnSection

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraSystemSpawnSection
  }
}

public open external class MovieSceneNiagaraSystemTrack(
  outer: UObject,
) : MovieSceneNiagaraTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraSystemTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraSystemTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraSystemTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraSystemTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraSystemTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraSystemTrack
  }
}

public open external class MovieSceneNiagaraVectorParameterTrack(
  outer: UObject,
) : MovieSceneNiagaraParameterTrack {
  @JsName("ChannelsUsed")
  public open var channelsUsed: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraVectorParameterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraVectorParameterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraVectorParameterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraVectorParameterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraVectorParameterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraVectorParameterTrack
  }
}

public open external class NiagaraActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("NiagaraComponent")
  public open var niagaraComponent: NiagaraComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  @JsName("bDestroyOnSystemFinish")
  public open var destroyOnSystemFinish: Boolean

  @JsName("SetDestroyOnSystemFinish")
  public open fun setDestroyOnSystemFinish(shouldDestroyOnSystemFinish: Boolean): Unit

  @JsName("OnNiagaraSystemFinished")
  public open fun onNiagaraSystemFinished(finishedComponent: NiagaraComponent): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraActor

    @JsName("C")
    public fun copy(other: UObject): NiagaraActor

    @JsName("C")
    public fun copy(other: Any): NiagaraActor
  }
}

public open external class NiagaraComponentPool(
  outer: UObject,
) : UObject {
  @JsName("WorldParticleSystemPools")
  public open var worldParticleSystemPools: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraComponentPool

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraComponentPool

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraComponentPool

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraComponentPool

    @JsName("C")
    public fun copy(other: UObject): NiagaraComponentPool

    @JsName("C")
    public fun copy(other: Any): NiagaraComponentPool
  }
}

public open external class NiagaraComponentPropertyBinding {
  @JsName("AttributeBinding")
  public open var attributeBinding: NiagaraVariableAttributeBinding

  @JsName("PropertyName")
  public open var propertyName: String

  @JsName("PropertyType")
  public open var propertyType: NiagaraTypeDefinition

  @JsName("MetadataSetterName")
  public open var metadataSetterName: String

  @JsName("PropertySetterParameterDefaults")
  public open var propertySetterParameterDefaults: Any

  @JsName("WritableValue")
  public open var writableValue: NiagaraVariable

  public open fun clone(): NiagaraComponentPropertyBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraComponentPropertyBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraComponentPropertyBinding
  }
}

public open external class NiagaraComponentRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("ComponentType")
  public open var componentType: UnrealEngineClass

  @JsName("ComponentCountLimit")
  public open var componentCountLimit: Any

  @JsName("EnabledBinding")
  public open var enabledBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibilityTagBinding")
  public open var rendererVisibilityTagBinding: NiagaraVariableAttributeBinding

  @JsName("bAssignComponentsOnParticleID")
  public open var assignComponentsOnParticleId: Boolean

  @JsName("bOnlyCreateComponentsOnParticleSpawn")
  public open var onlyCreateComponentsOnParticleSpawn: Boolean

  @JsName("bOnlyActivateNewlyAquiredComponents")
  public open var onlyActivateNewlyAquiredComponents: Boolean

  @JsName("bVisualizeComponents")
  public open var visualizeComponents: Boolean

  @JsName("RendererVisibility")
  public open var rendererVisibility: Number

  @JsName("TemplateComponent")
  public open var templateComponent: SceneComponent

  @JsName("PropertyBindings")
  public open var propertyBindings: Array<NiagaraComponentPropertyBinding>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraComponentRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraComponentRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraComponentRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraComponentRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraComponentRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraComponentRendererProperties
  }
}

public open external class NiagaraComponentSettings(
  outer: UObject,
) : UObject {
  @JsName("SuppressActivationList")
  public open var suppressActivationList: Any

  @JsName("ForceAutoPooolingList")
  public open var forceAutoPooolingList: Any

  @JsName("SuppressEmitterList")
  public open var suppressEmitterList: Any

  @JsName("GPUEmitterAllowList")
  public open var gpuEmitterAllowList: Any

  @JsName("GpuDataInterfaceDenyList")
  public open var gpuDataInterfaceDenyList: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraComponentSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraComponentSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraComponentSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraComponentSettings

    @JsName("C")
    public fun copy(other: UObject): NiagaraComponentSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraComponentSettings
  }
}

public open external class NiagaraUserParameterBinding {
  @JsName("Parameter")
  public open var parameter: NiagaraVariable

  public open fun clone(): NiagaraUserParameterBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraUserParameterBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraUserParameterBinding
  }
}

@JsName("NiagaraDataInterface2DArrayTexture")
public open external class NiagaraDataInterface2dArrayTexture(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Texture")
  public open var texture: Texture2dArray

  @JsName("TextureUserParameter")
  public open var textureUserParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterface2dArrayTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterface2dArrayTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterface2dArrayTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterface2dArrayTexture

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterface2dArrayTexture

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterface2dArrayTexture
  }
}

public open external class NiagaraDataInterfaceActorComponent(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("bRequireCurrentFrameData")
  public open var requireCurrentFrameData: Boolean

  @JsName("SourceActor")
  public open var sourceActor: Any

  @JsName("ActorOrComponentParameter")
  public open var actorOrComponentParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceActorComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceActorComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceActorComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceActorComponent

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceActorComponent

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceActorComponent
  }
}

@JsName("NiagaraDataInterfaceRWBase")
public open external class NiagaraDataInterfaceRwBase(
  outer: UObject,
) : NiagaraDataInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRwBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRwBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRwBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRwBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRwBase

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRwBase
  }
}

@JsName("ENiagaraGpuSyncMode")
public external object NiagaraGpuSyncMode {
  public var None: String

  public var SyncCpuToGpu: String

  public var SyncGpuToCpu: String

  public var SyncBoth: String

  @JsName("ENiagaraGpuSyncMode_MAX")
  public var Max: String
}

public open external class NiagaraDataInterfaceArray(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("GpuSyncMode")
  public open var gpuSyncMode: String

  @JsName("MaxElements")
  public open var maxElements: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArray

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArray

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArray

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArray

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArray

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArray
  }
}

public open external class NiagaraDataInterfaceArrayFloat(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("FloatData")
  public open var floatData: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayFloat

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayFloat

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayFloat

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayFloat

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayFloat

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayFloat
  }
}

public open external class NiagaraDataInterfaceArrayFloat2(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("FloatData")
  public open var floatData: Array<Vector2d>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayFloat2

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayFloat2

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayFloat2

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayFloat2

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayFloat2

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayFloat2
  }
}

public open external class NiagaraDataInterfaceArrayFloat3(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("FloatData")
  public open var floatData: Array<Vector>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayFloat3

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayFloat3

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayFloat3

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayFloat3

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayFloat3

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayFloat3
  }
}

public open external class NiagaraPosition : Vector3f {
  public override fun clone(): NiagaraPosition

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraPosition

    @JsName("C")
    public fun copy(other: Any): NiagaraPosition
  }
}

public open external class NiagaraDataInterfaceArrayPosition(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("PositionData")
  public open var positionData: Array<NiagaraPosition>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayPosition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayPosition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayPosition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayPosition

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayPosition

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayPosition
  }
}

public open external class NiagaraDataInterfaceArrayFloat4(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("FloatData")
  public open var floatData: Array<Vector4>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayFloat4

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayFloat4

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayFloat4

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayFloat4

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayFloat4

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayFloat4
  }
}

public open external class NiagaraDataInterfaceArrayColor(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("ColorData")
  public open var colorData: Array<LinearColor>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayColor

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayColor

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayColor
  }
}

public open external class NiagaraDataInterfaceArrayQuat(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("QuatData")
  public open var quatData: Array<Quat>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayQuat

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayQuat

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayQuat

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayQuat

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayQuat

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayQuat
  }
}

public open external class NiagaraDataInterfaceArrayFunctionLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayFunctionLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayFunctionLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayFunctionLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayFunctionLibrary

    @JsName("SetNiagaraArrayVectorValue")
    public fun setNiagaraArrayVectorValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Vector,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayVector4Value")
    public fun setNiagaraArrayVector4Value(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Vector4,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayVector4")
    public fun setNiagaraArrayVector4(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Vector4>,
    ): Unit

    @JsName("SetNiagaraArrayVector2DValue")
    public fun setNiagaraArrayVector2dValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Vector2d,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayVector2D")
    public fun setNiagaraArrayVector2d(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Vector2d>,
    ): Unit

    @JsName("SetNiagaraArrayVector")
    public fun setNiagaraArrayVector(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Vector>,
    ): Unit

    @JsName("SetNiagaraArrayQuatValue")
    public fun setNiagaraArrayQuatValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Quat,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayQuat")
    public fun setNiagaraArrayQuat(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Quat>,
    ): Unit

    @JsName("SetNiagaraArrayPositionValue")
    public fun setNiagaraArrayPositionValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Vector,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayPosition")
    public fun setNiagaraArrayPosition(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Vector>,
    ): Unit

    @JsName("SetNiagaraArrayInt32Value")
    public fun setNiagaraArrayInt32Value(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Number,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayInt32")
    public fun setNiagaraArrayInt32(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Number>,
    ): Unit

    @JsName("SetNiagaraArrayFloatValue")
    public fun setNiagaraArrayFloatValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Number,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayFloat")
    public fun setNiagaraArrayFloat(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Number>,
    ): Unit

    @JsName("SetNiagaraArrayColorValue")
    public fun setNiagaraArrayColorValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: LinearColor,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayColor")
    public fun setNiagaraArrayColor(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<LinearColor>,
    ): Unit

    @JsName("SetNiagaraArrayBoolValue")
    public fun setNiagaraArrayBoolValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
      value: Boolean,
      sizeToFit: Boolean,
    ): Unit

    @JsName("SetNiagaraArrayBool")
    public fun setNiagaraArrayBool(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      arrayData: Array<Boolean>,
    ): Unit

    @JsName("GetNiagaraArrayVectorValue")
    public fun getNiagaraArrayVectorValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Vector

    @JsName("GetNiagaraArrayVector4Value")
    public fun getNiagaraArrayVector4Value(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Vector4

    @JsName("GetNiagaraArrayVector4")
    public fun getNiagaraArrayVector4(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Vector4>

    @JsName("GetNiagaraArrayVector2DValue")
    public fun getNiagaraArrayVector2dValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Vector2d

    @JsName("GetNiagaraArrayVector2D")
    public fun getNiagaraArrayVector2d(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Vector2d>

    @JsName("GetNiagaraArrayVector")
    public fun getNiagaraArrayVector(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Vector>

    @JsName("GetNiagaraArrayQuatValue")
    public fun getNiagaraArrayQuatValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Quat

    @JsName("GetNiagaraArrayQuat")
    public fun getNiagaraArrayQuat(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Quat>

    @JsName("GetNiagaraArrayPositionValue")
    public fun getNiagaraArrayPositionValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Vector

    @JsName("GetNiagaraArrayPosition")
    public fun getNiagaraArrayPosition(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Vector>

    @JsName("GetNiagaraArrayInt32Value")
    public fun getNiagaraArrayInt32Value(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Number

    @JsName("GetNiagaraArrayInt32")
    public fun getNiagaraArrayInt32(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Number>

    @JsName("GetNiagaraArrayFloatValue")
    public fun getNiagaraArrayFloatValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Number

    @JsName("GetNiagaraArrayFloat")
    public fun getNiagaraArrayFloat(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Number>

    @JsName("GetNiagaraArrayColorValue")
    public fun getNiagaraArrayColorValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): LinearColor

    @JsName("GetNiagaraArrayColor")
    public fun getNiagaraArrayColor(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<LinearColor>

    @JsName("GetNiagaraArrayBoolValue")
    public fun getNiagaraArrayBoolValue(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      index: Number,
    ): Boolean

    @JsName("GetNiagaraArrayBool")
    public fun getNiagaraArrayBool(niagaraSystem: NiagaraComponent, overrideName: String):
        Array<Boolean>

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayFunctionLibrary

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayFunctionLibrary
  }
}

public open external class NiagaraDataInterfaceArrayInt32(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("IntData")
  public open var intData: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayInt32

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayInt32

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayInt32

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayInt32

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayInt32

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayInt32
  }
}

public open external class NiagaraDataInterfaceArrayBool(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("BoolData")
  public open var boolData: Array<Boolean>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayBool

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayBool

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayBool

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayBool

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayBool

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayBool
  }
}

@JsName("NiagaraID")
public open external class NiagaraId {
  public open var index: Number

  @JsName("AcquireTag")
  public open var acquireTag: Number

  public open fun clone(): NiagaraId

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraId

    @JsName("C")
    public fun copy(other: Any): NiagaraId
  }
}

@JsName("NiagaraDataInterfaceArrayNiagaraID")
public open external class NiagaraDataInterfaceArrayNiagaraId(
  outer: UObject,
) : NiagaraDataInterfaceArray {
  @JsName("IntData")
  public open var intData: Array<NiagaraId>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceArrayNiagaraId

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceArrayNiagaraId

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceArrayNiagaraId

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceArrayNiagaraId

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceArrayNiagaraId

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceArrayNiagaraId
  }
}

@JsName("ENDICollisionQuery_AsyncGpuTraceProvider")
public external object NDICollisionQuery_AsyncGpuTraceProvider {
  public var Default: String

  public var HWRT: String

  public var GSDF: String

  public var None: String

  @JsName("ENDICollisionQuery_MAX")
  public var EndiCollisionQueryMax: String
}

public open external class NiagaraDataInterfaceAsyncGpuTrace(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("MaxTracesPerParticle")
  public open var maxTracesPerParticle: Number

  @JsName("MaxRetraces")
  public open var maxRetraces: Number

  @JsName("TraceProvider")
  public open var traceProvider: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceAsyncGpuTrace

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceAsyncGpuTrace

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceAsyncGpuTrace

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceAsyncGpuTrace

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceAsyncGpuTrace

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceAsyncGpuTrace
  }
}

public open external class NiagaraDataInterfaceAudioSubmix(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Submix")
  public open var submix: SoundSubmix

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceAudioSubmix

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceAudioSubmix

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceAudioSubmix

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceAudioSubmix

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceAudioSubmix

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceAudioSubmix
  }
}

public open external class NiagaraDataInterfaceAudioOscilloscope(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Submix")
  public open var submix: SoundSubmix

  @JsName("Resolution")
  public open var resolution: Number

  @JsName("ScopeInMilliseconds")
  public open var scopeInMilliseconds: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceAudioOscilloscope

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceAudioOscilloscope

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceAudioOscilloscope

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceAudioOscilloscope

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceAudioOscilloscope

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceAudioOscilloscope
  }
}

public open external class NiagaraDataInterfaceAudioPlayer(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("SoundToPlay")
  public open var soundToPlay: SoundBase

  @JsName("Attenuation")
  public open var attenuation: SoundAttenuation

  @JsName("Concurrency")
  public open var concurrency: SoundConcurrency

  @JsName("ParameterNames")
  public open var parameterNames: Array<String>

  @JsName("bLimitPlaysPerTick")
  public open var limitPlaysPerTick: Boolean

  @JsName("MaxPlaysPerTick")
  public open var maxPlaysPerTick: Number

  @JsName("bStopWhenComponentIsDestroyed")
  public open var stopWhenComponentIsDestroyed: Boolean

  @JsName("bOnlyActiveDuringGameplay")
  public open var onlyActiveDuringGameplay: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceAudioPlayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceAudioPlayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceAudioPlayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceAudioPlayer

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceAudioPlayer

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceAudioPlayer
  }
}

public open external class NiagaraDataInterfaceAudioSpectrum(
  outer: UObject,
) : NiagaraDataInterfaceAudioSubmix {
  @JsName("Resolution")
  public open var resolution: Number

  @JsName("MinimumFrequency")
  public open var minimumFrequency: Number

  @JsName("MaximumFrequency")
  public open var maximumFrequency: Number

  @JsName("NoiseFloorDb")
  public open var noiseFloorDb: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceAudioSpectrum

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceAudioSpectrum

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceAudioSpectrum

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceAudioSpectrum

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceAudioSpectrum

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceAudioSpectrum
  }
}

public open external class NiagaraDataInterfaceCamera(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("PlayerControllerIndex")
  public open var playerControllerIndex: Number

  @JsName("bRequireCurrentFrameData")
  public open var requireCurrentFrameData: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCamera

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCamera

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCamera

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCamera

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCamera

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCamera
  }
}

public open external class NiagaraDataInterfaceCollisionQuery(
  outer: UObject,
) : NiagaraDataInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCollisionQuery

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCollisionQuery

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCollisionQuery

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCollisionQuery

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCollisionQuery

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCollisionQuery
  }
}

public open external class NiagaraDataInterfaceCurveBase(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("ShaderLUT")
  public open var shaderLut: Array<Number>

  @JsName("LUTMinTime")
  public open var lutMinTime: Number

  @JsName("LUTMaxTime")
  public open var lutMaxTime: Number

  @JsName("LUTInvTimeRange")
  public open var lutInvTimeRange: Number

  @JsName("LUTNumSamplesMinusOne")
  public open var lutNumSamplesMinusOne: Number

  @JsName("bUseLUT")
  public open var useLut: Boolean

  @JsName("bExposeCurve")
  public open var exposeCurve: Boolean

  @JsName("bOptimizeLUT")
  public open var optimizeLut: Boolean

  @JsName("bOverrideOptimizeThreshold")
  public open var overrideOptimizeThreshold: Boolean

  @JsName("HasEditorData")
  public open var hasEditorData: Boolean

  @JsName("OptimizeThreshold")
  public open var optimizeThreshold: Number

  @JsName("ExposedName")
  public open var exposedName: String

  @JsName("ExposedTexture")
  public open var exposedTexture: Texture2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCurveBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCurveBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCurveBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCurveBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCurveBase

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCurveBase
  }
}

public open external class NiagaraDataInterfaceColorCurve(
  outer: UObject,
) : NiagaraDataInterfaceCurveBase {
  @JsName("RedCurve")
  public open var redCurve: RichCurve

  @JsName("GreenCurve")
  public open var greenCurve: RichCurve

  @JsName("BlueCurve")
  public open var blueCurve: RichCurve

  @JsName("AlphaCurve")
  public open var alphaCurve: RichCurve

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceColorCurve

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceColorCurve

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceColorCurve

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceColorCurve

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceColorCurve

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceColorCurve
  }
}

public open external class NiagaraDataInterfaceCubeTexture(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Texture")
  public open var texture: TextureCube

  @JsName("TextureUserParameter")
  public open var textureUserParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCubeTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCubeTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCubeTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCubeTexture

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCubeTexture

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCubeTexture
  }
}

public open external class NiagaraDataInterfaceCurlNoise(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Seed")
  public open var seed: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCurlNoise

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCurlNoise

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCurlNoise

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCurlNoise

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCurlNoise

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCurlNoise
  }
}

public open external class NiagaraDataInterfaceCurve(
  outer: UObject,
) : NiagaraDataInterfaceCurveBase {
  @JsName("Curve")
  public open var curve: RichCurve

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceCurve

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceCurve

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceCurve

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceCurve

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceCurve

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceCurve
  }
}

public open external class NiagaraDataInterfaceDebugDraw(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("OverrideMaxLineInstances")
  public open var overrideMaxLineInstances: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceDebugDraw

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceDebugDraw

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceDebugDraw

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceDebugDraw

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceDebugDraw

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceDebugDraw
  }
}

@JsName("ENiagaraDataInterfaceEmitterBindingMode")
public external object NiagaraDataInterfaceEmitterBindingMode {
  public var Self: String

  public var Other: String

  @JsName("ENiagaraDataInterfaceEmitterBindingMode_MAX")
  public var Max: String
}

public open external class NiagaraDataInterfaceEmitterBinding {
  @JsName("BindingMode")
  public open var bindingMode: String

  @JsName("EmitterName")
  public open var emitterName: String

  public open fun clone(): NiagaraDataInterfaceEmitterBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceEmitterBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceEmitterBinding
  }
}

public open external class NiagaraDataInterfaceEmitterProperties(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("EmitterBinding")
  public open var emitterBinding: NiagaraDataInterfaceEmitterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceEmitterProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceEmitterProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceEmitterProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceEmitterProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceEmitterProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceEmitterProperties
  }
}

public open external class BasicParticleData {
  public open var position: Vector

  @JsName("Size")
  public open var size: Number

  @JsName("Velocity")
  public open var velocity: Vector

  public open fun clone(): BasicParticleData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): BasicParticleData

    @JsName("C")
    public fun copy(other: Any): BasicParticleData
  }
}

public open external class NiagaraParticleCallbackHandler(
  outer: UObject,
) : Interface {
  @JsName("ReceiveParticleData")
  public open fun receiveParticleData(
    data: Array<BasicParticleData>,
    niagaraSystem: NiagaraSystem,
    simulationPositionOffset: Vector,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraParticleCallbackHandler

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraParticleCallbackHandler

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraParticleCallbackHandler

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraParticleCallbackHandler

    @JsName("C")
    public fun copy(other: UObject): NiagaraParticleCallbackHandler

    @JsName("C")
    public fun copy(other: Any): NiagaraParticleCallbackHandler
  }
}

@JsName("ENDIExport_GPUAllocationMode")
public external object NDIExport_GPUAllocationMode {
  public var FixedSize: String

  public var PerParticle: String

  @JsName("ENDIExport_MAX")
  public var EndiExportMax: String
}

public open external class NiagaraDataInterfaceExport(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("CallbackHandlerParameter")
  public open var callbackHandlerParameter: NiagaraUserParameterBinding

  @JsName("GPUAllocationMode")
  public open var gpuAllocationMode: String

  @JsName("GPUAllocationFixedSize")
  public open var gpuAllocationFixedSize: Number

  @JsName("GPUAllocationPerParticleSize")
  public open var gpuAllocationPerParticleSize: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceExport

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceExport

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceExport

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceExport

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceExport

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceExport
  }
}

public open external class NiagaraDataInterfaceGBuffer(
  outer: UObject,
) : NiagaraDataInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGBuffer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceGBuffer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGBuffer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGBuffer

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGBuffer

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGBuffer
  }
}

@JsName("NiagaraDataInterfaceGrid2D")
public open external class NiagaraDataInterfaceGrid2d(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("NumCellsX")
  public open var numCellsX: Number

  @JsName("NumCellsY")
  public open var numCellsY: Number

  @JsName("NumCellsMaxAxis")
  public open var numCellsMaxAxis: Number

  @JsName("NumAttributes")
  public open var numAttributes: Number

  @JsName("SetGridFromMaxAxis")
  public open var setGridFromMaxAxis: Boolean

  @JsName("WorldBBoxSize")
  public open var worldBBoxSize: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceGrid2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid2d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid2d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid2d
  }
}

@JsName("ENiagaraGpuBufferFormat")
public external object NiagaraGpuBufferFormat {
  public var Float: String

  public var HalfFloat: String

  public var UnsignedNormalizedByte: String

  public var Max: String

  @JsName("ENiagaraGpuBufferFormat_MAX")
  public var _Max: String
}

@JsName("T$813")
public external interface Object813 {
  @JsName("TilesX")
  public var tilesX: Number

  @JsName("TilesY")
  public var tilesY: Number

  @JsName("$")
  public var value: Boolean
}

@JsName("NiagaraDataInterfaceGrid2DCollection")
public open external class NiagaraDataInterfaceGrid2dCollection(
  outer: UObject,
) : NiagaraDataInterfaceGrid2d {
  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("OverrideBufferFormat")
  public open var overrideBufferFormat: String

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewGrid")
  public open var previewGrid: Boolean

  @JsName("PreviewAttribute")
  public open var previewAttribute: String

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  @JsName("GetTextureSize")
  public open fun getTextureSize(
    component: NiagaraComponent,
    sizeX: Number,
    sizeY: Number,
  ): Object272

  @JsName("GetRawTextureSize")
  public open fun getRawTextureSize(
    component: NiagaraComponent,
    sizeX: Number,
    sizeY: Number,
  ): Object272

  @JsName("FillTexture2D")
  public open fun fillTexture2d(
    component: NiagaraComponent,
    dest: TextureRenderTarget2d,
    attributeIndex: Number,
  ): Boolean

  @JsName("FillRawTexture2D")
  public open fun fillRawTexture2d(
    component: NiagaraComponent,
    dest: TextureRenderTarget2d,
    tilesX: Number,
    tilesY: Number,
  ): Object813

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid2dCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceGrid2dCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid2dCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid2dCollection

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid2dCollection

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid2dCollection
  }
}

@JsName("NiagaraDataInterfaceGrid2DCollectionReader")
public open external class NiagaraDataInterfaceGrid2dCollectionReader(
  outer: UObject,
) : NiagaraDataInterfaceGrid2dCollection {
  @JsName("EmitterName")
  public open var emitterName: String

  @JsName("DIName")
  public open var diName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid2dCollectionReader

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraDataInterfaceGrid2dCollectionReader

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid2dCollectionReader

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid2dCollectionReader

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid2dCollectionReader

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid2dCollectionReader
  }
}

@JsName("ESetResolutionMethod")
public external object SetResolutionMethod {
  public var Independent: String

  public var MaxAxis: String

  public var CellSize: String

  @JsName("ESetResolutionMethod_MAX")
  public var Max: String
}

@JsName("NiagaraDataInterfaceGrid3D")
public open external class NiagaraDataInterfaceGrid3d(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("NumCells")
  public open var numCells: IntVector

  @JsName("CellSize")
  public open var cellSize: Number

  @JsName("NumCellsMaxAxis")
  public open var numCellsMaxAxis: Number

  @JsName("SetResolutionMethod")
  public open var setResolutionMethod: String

  @JsName("WorldBBoxSize")
  public open var worldBBoxSize: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid3d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceGrid3d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid3d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid3d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid3d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid3d
  }
}

@JsName("T$814")
public external interface Object814 {
  @JsName("SizeX")
  public var sizeX: Number

  @JsName("SizeY")
  public var sizeY: Number

  @JsName("SizeZ")
  public var sizeZ: Number
}

@JsName("T$815")
public external interface Object815 {
  @JsName("TilesX")
  public var tilesX: Number

  @JsName("TilesY")
  public var tilesY: Number

  @JsName("TileZ")
  public var tileZ: Number

  @JsName("$")
  public var value: Boolean
}

@JsName("NiagaraDataInterfaceGrid3DCollection")
public open external class NiagaraDataInterfaceGrid3dCollection(
  outer: UObject,
) : NiagaraDataInterfaceGrid3d {
  @JsName("NumAttributes")
  public open var numAttributes: Number

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("OverrideBufferFormat")
  public open var overrideBufferFormat: String

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewGrid")
  public open var previewGrid: Boolean

  @JsName("PreviewAttribute")
  public open var previewAttribute: String

  @JsName("GetTextureSize")
  public open fun getTextureSize(
    component: NiagaraComponent,
    sizeX: Number,
    sizeY: Number,
    sizeZ: Number,
  ): Object814

  @JsName("GetRawTextureSize")
  public open fun getRawTextureSize(
    component: NiagaraComponent,
    sizeX: Number,
    sizeY: Number,
    sizeZ: Number,
  ): Object814

  @JsName("FillVolumeTexture")
  public open fun fillVolumeTexture(
    component: NiagaraComponent,
    dest: VolumeTexture,
    attributeIndex: Number,
  ): Boolean

  @JsName("FillRawVolumeTexture")
  public open fun fillRawVolumeTexture(
    component: NiagaraComponent,
    dest: VolumeTexture,
    tilesX: Number,
    tilesY: Number,
    tileZ: Number,
  ): Object815

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid3dCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceGrid3dCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid3dCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid3dCollection

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid3dCollection

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid3dCollection
  }
}

@JsName("NiagaraDataInterfaceGrid3DCollectionReader")
public open external class NiagaraDataInterfaceGrid3dCollectionReader(
  outer: UObject,
) : NiagaraDataInterfaceGrid3dCollection {
  @JsName("EmitterName")
  public open var emitterName: String

  @JsName("DIName")
  public open var diName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceGrid3dCollectionReader

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraDataInterfaceGrid3dCollectionReader

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceGrid3dCollectionReader

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceGrid3dCollectionReader

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceGrid3dCollectionReader

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceGrid3dCollectionReader
  }
}

@JsName("NiagaraDataInterfaceIntRenderTarget2D")
public open external class NiagaraDataInterfaceIntRenderTarget2d(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("Size")
  public open var size: IntPoint

  @JsName("bPreviewRenderTarget")
  public open var previewRenderTarget: Boolean

  @JsName("PreviewDisplayRange")
  public open var previewDisplayRange: Vector2d

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceIntRenderTarget2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceIntRenderTarget2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceIntRenderTarget2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceIntRenderTarget2d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceIntRenderTarget2d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceIntRenderTarget2d
  }
}

@JsName("ENDILandscape_SourceMode")
public external object NDILandscape_SourceMode {
  public var Default: String

  public var Source: String

  public var AttachParent: String

  @JsName("ENDILandscape_MAX")
  public var EndiLandscapeMax: String
}

public open external class NiagaraDataInterfaceLandscape(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("SourceLandscape")
  public open var sourceLandscape: Actor

  @JsName("SourceMode")
  public open var sourceMode: String

  @JsName("PhysicalMaterials")
  public open var physicalMaterials: Array<PhysicalMaterial>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceLandscape

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceLandscape

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceLandscape

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceLandscape

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceLandscape

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceLandscape
  }
}

@JsName("ENiagaraMeshPivotOffsetSpace")
public external object NiagaraMeshPivotOffsetSpace {
  public var Mesh: String

  public var Simulation: String

  public var World: String

  public var Local: String

  @JsName("ENiagaraMeshPivotOffsetSpace_MAX")
  public var Max: String
}

public open external class NiagaraMeshRendererMeshProperties {
  @JsName("Mesh")
  public open var mesh: StaticMesh

  @JsName("UserParamBinding")
  public open var userParamBinding: NiagaraUserParameterBinding

  @JsName("Scale")
  public open var scale: Vector

  @JsName("Rotation")
  public open var rotation: Rotator

  @JsName("PivotOffset")
  public open var pivotOffset: Vector

  @JsName("PivotOffsetSpace")
  public open var pivotOffsetSpace: String

  public open fun clone(): NiagaraMeshRendererMeshProperties

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraMeshRendererMeshProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraMeshRendererMeshProperties
  }
}

@JsName("ENiagaraRendererSourceDataMode")
public external object NiagaraRendererSourceDataMode {
  public var Particles: String

  public var Emitter: String

  @JsName("ENiagaraRendererSourceDataMode_MAX")
  public var Max: String
}

@JsName("ENiagaraSortMode")
public external object NiagaraSortMode {
  public var None: String

  public var ViewDepth: String

  public var ViewDistance: String

  public var CustomAscending: String

  public var CustomDecending: String

  @JsName("ENiagaraSortMode_MAX")
  public var Max: String
}

public open external class NiagaraMeshMaterialOverride {
  @JsName("ExplicitMat")
  public open var explicitMat: MaterialInterface

  @JsName("UserParamBinding")
  public open var userParamBinding: NiagaraUserParameterBinding

  public open fun clone(): NiagaraMeshMaterialOverride

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraMeshMaterialOverride

    @JsName("C")
    public fun copy(other: Any): NiagaraMeshMaterialOverride
  }
}

@JsName("ENiagaraMeshFacingMode")
public external object NiagaraMeshFacingMode {
  public var Default: String

  public var Velocity: String

  public var CameraPosition: String

  public var CameraPlane: String

  @JsName("ENiagaraMeshFacingMode_MAX")
  public var Max: String
}

@JsName("ENiagaraMeshLockedAxisSpace")
public external object NiagaraMeshLockedAxisSpace {
  public var Simulation: String

  public var World: String

  public var Local: String

  @JsName("ENiagaraMeshLockedAxisSpace_MAX")
  public var Max: String
}

public open external class NiagaraMaterialAttributeBinding {
  @JsName("MaterialParameterName")
  public open var materialParameterName: String

  @JsName("NiagaraVariable")
  public open var niagaraVariable: NiagaraVariableBase

  @JsName("ResolvedNiagaraVariable")
  public open var resolvedNiagaraVariable: NiagaraVariableBase

  @JsName("NiagaraChildVariable")
  public open var niagaraChildVariable: NiagaraVariableBase

  public open fun clone(): NiagaraMaterialAttributeBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraMaterialAttributeBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraMaterialAttributeBinding
  }
}

public open external class NiagaraMeshRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("Meshes")
  public open var meshes: Array<NiagaraMeshRendererMeshProperties>

  @JsName("SourceMode")
  public open var sourceMode: String

  @JsName("SortMode")
  public open var sortMode: String

  @JsName("bOverrideMaterials")
  public open var isOverrideMaterials: Boolean

  @JsName("bSortOnlyWhenTranslucent")
  public open var sortOnlyWhenTranslucent: Boolean

  @JsName("bGpuLowLatencyTranslucency")
  public open var gpuLowLatencyTranslucency: Boolean

  @JsName("bSubImageBlend")
  public open var subImageBlend: Boolean

  @JsName("bEnableFrustumCulling")
  public open var enableFrustumCulling: Boolean

  @JsName("bEnableCameraDistanceCulling")
  public open var enableCameraDistanceCulling: Boolean

  @JsName("bEnableMeshFlipbook")
  public open var enableMeshFlipbook: Boolean

  @JsName("OverrideMaterials")
  public open var overrideMaterials: Array<NiagaraMeshMaterialOverride>

  @JsName("SubImageSize")
  public open var subImageSize: Vector2d

  @JsName("FacingMode")
  public open var facingMode: String

  @JsName("bLockedAxisEnable")
  public open var lockedAxisEnable: Boolean

  @JsName("LockedAxis")
  public open var lockedAxis: Vector

  @JsName("LockedAxisSpace")
  public open var lockedAxisSpace: String

  @JsName("MinCameraDistance")
  public open var minCameraDistance: Number

  @JsName("MaxCameraDistance")
  public open var maxCameraDistance: Number

  @JsName("RendererVisibility")
  public open var rendererVisibility: Any

  @JsName("PositionBinding")
  public open var positionBinding: NiagaraVariableAttributeBinding

  @JsName("ColorBinding")
  public open var colorBinding: NiagaraVariableAttributeBinding

  @JsName("VelocityBinding")
  public open var velocityBinding: NiagaraVariableAttributeBinding

  @JsName("MeshOrientationBinding")
  public open var meshOrientationBinding: NiagaraVariableAttributeBinding

  @JsName("ScaleBinding")
  public open var scaleBinding: NiagaraVariableAttributeBinding

  @JsName("SubImageIndexBinding")
  public open var subImageIndexBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterialBinding")
  public open var dynamicMaterialBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial1Binding")
  public open var dynamicMaterial1Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial2Binding")
  public open var dynamicMaterial2Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial3Binding")
  public open var dynamicMaterial3Binding: NiagaraVariableAttributeBinding

  @JsName("MaterialRandomBinding")
  public open var materialRandomBinding: NiagaraVariableAttributeBinding

  @JsName("CustomSortingBinding")
  public open var customSortingBinding: NiagaraVariableAttributeBinding

  @JsName("NormalizedAgeBinding")
  public open var normalizedAgeBinding: NiagaraVariableAttributeBinding

  @JsName("CameraOffsetBinding")
  public open var cameraOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibilityTagBinding")
  public open var rendererVisibilityTagBinding: NiagaraVariableAttributeBinding

  @JsName("MeshIndexBinding")
  public open var meshIndexBinding: NiagaraVariableAttributeBinding

  @JsName("MaterialParameterBindings")
  public open var materialParameterBindings: Array<NiagaraMaterialAttributeBinding>

  @JsName("PrevPositionBinding")
  public open var prevPositionBinding: NiagaraVariableAttributeBinding

  @JsName("PrevScaleBinding")
  public open var prevScaleBinding: NiagaraVariableAttributeBinding

  @JsName("PrevMeshOrientationBinding")
  public open var prevMeshOrientationBinding: NiagaraVariableAttributeBinding

  @JsName("PrevCameraOffsetBinding")
  public open var prevCameraOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("PrevVelocityBinding")
  public open var prevVelocityBinding: NiagaraVariableAttributeBinding

  @JsName("FirstFlipbookFrame")
  public open var firstFlipbookFrame: StaticMesh

  @JsName("FlipbookSuffixFormat")
  public open var flipbookSuffixFormat: String

  @JsName("FlipbookSuffixNumDigits")
  public open var flipbookSuffixNumDigits: Any

  @JsName("NumFlipbookFrames")
  public open var numFlipbookFrames: Any

  @JsName("ParticleMesh")
  public open var particleMesh: StaticMesh

  @JsName("PivotOffset")
  public open var pivotOffset: Vector

  @JsName("PivotOffsetSpace")
  public open var pivotOffsetSpace: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraMeshRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraMeshRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraMeshRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraMeshRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraMeshRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraMeshRendererProperties
  }
}

public open external class NiagaraDataInterfaceMeshRendererInfo(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("MeshRenderer")
  public open var meshRenderer: NiagaraMeshRendererProperties

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceMeshRendererInfo

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceMeshRendererInfo

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceMeshRendererInfo

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceMeshRendererInfo

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceMeshRendererInfo

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceMeshRendererInfo
  }
}

@JsName("NiagaraDataInterfaceNeighborGrid3D")
public open external class NiagaraDataInterfaceNeighborGrid3d(
  outer: UObject,
) : NiagaraDataInterfaceGrid3d {
  @JsName("MaxNeighborsPerCell")
  public open var maxNeighborsPerCell: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceNeighborGrid3d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceNeighborGrid3d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceNeighborGrid3d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceNeighborGrid3d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceNeighborGrid3d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceNeighborGrid3d
  }
}

public open external class NiagaraDataInterfaceOcclusion(
  outer: UObject,
) : NiagaraDataInterface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceOcclusion

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceOcclusion

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceOcclusion

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceOcclusion

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceOcclusion

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceOcclusion
  }
}

public open external class NiagaraDataInterfaceParticleRead(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("EmitterName")
  public open var emitterName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceParticleRead

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceParticleRead

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceParticleRead

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceParticleRead

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceParticleRead

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceParticleRead
  }
}

public open external class NiagaraDataInterfacePlatformSet(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Platforms")
  public open var platforms: NiagaraPlatformSet

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfacePlatformSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfacePlatformSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfacePlatformSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfacePlatformSet

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfacePlatformSet

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfacePlatformSet
  }
}

@JsName("NiagaraDataInterfaceRasterizationGrid3D")
public open external class NiagaraDataInterfaceRasterizationGrid3d(
  outer: UObject,
) : NiagaraDataInterfaceGrid3d {
  @JsName("NumAttributes")
  public open var numAttributes: Number

  @JsName("Precision")
  public open var precision: Number

  @JsName("ResetValue")
  public open var resetValue: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRasterizationGrid3d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRasterizationGrid3d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRasterizationGrid3d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRasterizationGrid3d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRasterizationGrid3d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRasterizationGrid3d
  }
}

@JsName("ENiagaraMipMapGeneration")
public external object NiagaraMipMapGeneration {
  public var Disabled: String

  public var PostStage: String

  public var PostSimulate: String

  @JsName("ENiagaraMipMapGeneration_MAX")
  public var Max: String
}

@JsName("ENiagaraMipMapGenerationType")
public external object NiagaraMipMapGenerationType {
  public var Unfiltered: String

  public var Linear: String

  public var Blur1: String

  public var Blur2: String

  public var Blur3: String

  public var Blur4: String

  @JsName("ENiagaraMipMapGenerationType_MAX")
  public var Max: String
}

@JsName("NiagaraDataInterfaceRenderTarget2D")
public open external class NiagaraDataInterfaceRenderTarget2d(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("Size")
  public open var size: IntPoint

  @JsName("MipMapGeneration")
  public open var mipMapGeneration: String

  @JsName("MipMapGenerationType")
  public open var mipMapGenerationType: String

  @JsName("OverrideRenderTargetFormat")
  public open var overrideRenderTargetFormat: String

  @JsName("bInheritUserParameterSettings")
  public open var inheritUserParameterSettings: Boolean

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewRenderTarget")
  public open var previewRenderTarget: Boolean

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRenderTarget2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRenderTarget2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRenderTarget2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRenderTarget2d

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRenderTarget2d

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRenderTarget2d
  }
}

@JsName("NiagaraDataInterfaceRenderTarget2DArray")
public open external class NiagaraDataInterfaceRenderTarget2dArray(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("Size")
  public open var size: IntVector

  @JsName("OverrideRenderTargetFormat")
  public open var overrideRenderTargetFormat: String

  @JsName("bInheritUserParameterSettings")
  public open var inheritUserParameterSettings: Boolean

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewRenderTarget")
  public open var previewRenderTarget: Boolean

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRenderTarget2dArray

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRenderTarget2dArray

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRenderTarget2dArray

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRenderTarget2dArray

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRenderTarget2dArray

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRenderTarget2dArray
  }
}

public open external class NiagaraDataInterfaceRenderTargetCube(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("Size")
  public open var size: Number

  @JsName("OverrideRenderTargetFormat")
  public open var overrideRenderTargetFormat: String

  @JsName("bInheritUserParameterSettings")
  public open var inheritUserParameterSettings: Boolean

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewRenderTarget")
  public open var previewRenderTarget: Boolean

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRenderTargetCube

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRenderTargetCube

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRenderTargetCube

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRenderTargetCube

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRenderTargetCube

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRenderTargetCube
  }
}

public open external class NiagaraDataInterfaceRenderTargetVolume(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("Size")
  public open var size: IntVector

  @JsName("OverrideRenderTargetFormat")
  public open var overrideRenderTargetFormat: String

  @JsName("bInheritUserParameterSettings")
  public open var inheritUserParameterSettings: Boolean

  @JsName("bOverrideFormat")
  public open var overrideFormat: Boolean

  @JsName("bPreviewRenderTarget")
  public open var previewRenderTarget: Boolean

  @JsName("RenderTargetUserParameter")
  public open var renderTargetUserParameter: NiagaraUserParameterBinding

  @JsName("ManagedRenderTargets")
  public open var managedRenderTargets: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRenderTargetVolume

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceRenderTargetVolume

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRenderTargetVolume

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRenderTargetVolume

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRenderTargetVolume

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRenderTargetVolume
  }
}

public open external class NiagaraDataInterfaceRigidMeshCollisionQuery(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Tag")
  public open var tag: String

  @JsName("OnlyUseMoveable")
  public open var onlyUseMoveable: Boolean

  @JsName("MaxNumPrimitives")
  public open var maxNumPrimitives: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceRigidMeshCollisionQuery

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraDataInterfaceRigidMeshCollisionQuery

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceRigidMeshCollisionQuery

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceRigidMeshCollisionQuery

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceRigidMeshCollisionQuery

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceRigidMeshCollisionQuery
  }
}

public open external class NiagaraDataInterfaceSimpleCounter(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("GpuSyncMode")
  public open var gpuSyncMode: String

  @JsName("InitialValue")
  public open var initialValue: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceSimpleCounter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceSimpleCounter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceSimpleCounter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceSimpleCounter

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceSimpleCounter

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceSimpleCounter
  }
}

@JsName("ENDISkeletalMesh_SourceMode")
public external object NDISkeletalMesh_SourceMode {
  public var Default: String

  public var Source: String

  public var AttachParent: String

  @JsName("ENDISkeletalMesh_MAX")
  public var EndiSkeletalMeshMax: String
}

@JsName("ENDISkeletalMesh_SkinningMode")
public external object NDISkeletalMesh_SkinningMode {
  public var Invalid: String

  public var None: String

  public var SkinOnTheFly: String

  public var PreSkin: String

  @JsName("ENDISkeletalMesh_MAX")
  public var EndiSkeletalMeshMax: String
}

public open external class NiagaraDataInterfaceSkeletalMesh(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("SourceMode")
  public open var sourceMode: String

  @JsName("PreviewMesh")
  public open var previewMesh: SkeletalMesh

  @JsName("Source")
  public open var source: Actor

  @JsName("MeshUserParameter")
  public open var meshUserParameter: NiagaraUserParameterBinding

  @JsName("SourceComponent")
  public open var sourceComponent: SkeletalMeshComponent

  @JsName("SkinningMode")
  public open var skinningMode: String

  @JsName("SamplingRegions")
  public open var samplingRegions: Array<String>

  @JsName("WholeMeshLOD")
  public open var wholeMeshLod: Number

  @JsName("FilteredBones")
  public open var filteredBones: Array<String>

  @JsName("FilteredSockets")
  public open var filteredSockets: Array<String>

  @JsName("ExcludeBoneName")
  public open var excludeBoneName: String

  @JsName("bExcludeBone")
  public open var excludeBone: Boolean

  @JsName("UvSetIndex")
  public open var uvSetIndex: Number

  @JsName("bRequireCurrentFrameData")
  public open var requireCurrentFrameData: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceSkeletalMesh

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceSkeletalMesh

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceSkeletalMesh

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceSkeletalMesh

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceSkeletalMesh

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceSkeletalMesh
  }
}

public open external class NiagaraDataInterfaceSpline(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Source")
  public open var source: Actor

  @JsName("SplineUserParameter")
  public open var splineUserParameter: NiagaraUserParameterBinding

  @JsName("bUseLUT")
  public open var useLut: Boolean

  @JsName("NumLUTSteps")
  public open var numLutSteps: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceSpline

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceSpline

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceSpline

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceSpline

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceSpline

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceSpline
  }
}

@JsName("ENDIStaticMesh_SourceMode")
public external object NDIStaticMesh_SourceMode {
  public var Default: String

  public var Source: String

  public var AttachParent: String

  public var DefaultMeshOnly: String

  @JsName("ENDIStaticMesh_MAX")
  public var EndiStaticMeshMax: String
}

@JsName("NDIStaticMeshSectionFilter")
public open external class NdiStaticMeshSectionFilter {
  @JsName("AllowedMaterialSlots")
  public open var allowedMaterialSlots: Array<Number>

  public open fun clone(): NdiStaticMeshSectionFilter

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NdiStaticMeshSectionFilter

    @JsName("C")
    public fun copy(other: Any): NdiStaticMeshSectionFilter
  }
}

public open external class NiagaraDataInterfaceStaticMesh(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("SourceMode")
  public open var sourceMode: String

  @JsName("PreviewMesh")
  public open var previewMesh: StaticMesh

  @JsName("DefaultMesh")
  public open var defaultMesh: StaticMesh

  @JsName("Source")
  public open var source: Actor

  @JsName("SourceComponent")
  public open var sourceComponent: StaticMeshComponent

  @JsName("SectionFilter")
  public open var sectionFilter: NdiStaticMeshSectionFilter

  @JsName("bUsePhysicsBodyVelocity")
  public open var usePhysicsBodyVelocity: Boolean

  @JsName("FilteredSockets")
  public open var filteredSockets: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceStaticMesh

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceStaticMesh

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceStaticMesh

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceStaticMesh

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceStaticMesh

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceStaticMesh
  }
}

public open external class NiagaraDataInterfaceTexture(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Texture")
  public open var texture: Texture

  @JsName("TextureUserParameter")
  public open var textureUserParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceTexture

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceTexture

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceTexture
  }
}

public open external class NiagaraUObjectPropertyReaderRemap {
  @JsName("GraphName")
  public open var graphName: String

  @JsName("RemapName")
  public open var remapName: String

  public open fun clone(): NiagaraUObjectPropertyReaderRemap

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraUObjectPropertyReaderRemap

    @JsName("C")
    public fun copy(other: Any): NiagaraUObjectPropertyReaderRemap
  }
}

public open external class NiagaraDataInterfaceUObjectPropertyReader(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("UObjectParameterBinding")
  public open var uObjectParameterBinding: NiagaraUserParameterBinding

  @JsName("PropertyRemap")
  public open var propertyRemap: Array<NiagaraUObjectPropertyReaderRemap>

  @JsName("SourceActor")
  public open var sourceActor: Any

  @JsName("SourceActorComponentClass")
  public open var sourceActorComponentClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceUObjectPropertyReader

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceUObjectPropertyReader

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceUObjectPropertyReader

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceUObjectPropertyReader

    @JsName("SetUObjectReaderPropertyRemap")
    public fun setUObjectReaderPropertyRemap(
      niagaraComponent: NiagaraComponent,
      userParameterName: String,
      graphName: String,
      remapName: String,
    ): Unit

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceUObjectPropertyReader

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceUObjectPropertyReader
  }
}

@JsName("NiagaraDataInterfaceVector2DCurve")
public open external class NiagaraDataInterfaceVector2dCurve(
  outer: UObject,
) : NiagaraDataInterfaceCurveBase {
  @JsName("XCurve")
  public open var xCurve: RichCurve

  @JsName("YCurve")
  public open var yCurve: RichCurve

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVector2dCurve

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVector2dCurve

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVector2dCurve

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVector2dCurve

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVector2dCurve

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVector2dCurve
  }
}

public open external class NiagaraDataInterfaceVector4Curve(
  outer: UObject,
) : NiagaraDataInterfaceCurveBase {
  @JsName("XCurve")
  public open var xCurve: RichCurve

  @JsName("YCurve")
  public open var yCurve: RichCurve

  @JsName("ZCurve")
  public open var zCurve: RichCurve

  @JsName("WCurve")
  public open var wCurve: RichCurve

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVector4Curve

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVector4Curve

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVector4Curve

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVector4Curve

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVector4Curve

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVector4Curve
  }
}

public open external class NiagaraDataInterfaceVectorCurve(
  outer: UObject,
) : NiagaraDataInterfaceCurveBase {
  @JsName("XCurve")
  public open var xCurve: RichCurve

  @JsName("YCurve")
  public open var yCurve: RichCurve

  @JsName("ZCurve")
  public open var zCurve: RichCurve

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVectorCurve

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVectorCurve

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVectorCurve

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVectorCurve

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVectorCurve

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVectorCurve
  }
}

public open external class NiagaraDataInterfaceVectorField(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Field")
  public open var field: VectorField

  @JsName("bTileX")
  public open var tileX: Boolean

  @JsName("bTileY")
  public open var tileY: Boolean

  @JsName("bTileZ")
  public open var tileZ: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVectorField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVectorField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVectorField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVectorField

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVectorField

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVectorField
  }
}

public open external class NiagaraDataInterfaceVolumeTexture(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("Texture")
  public open var texture: VolumeTexture

  @JsName("TextureUserParameter")
  public open var textureUserParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVolumeTexture

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVolumeTexture

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVolumeTexture

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVolumeTexture

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVolumeTexture

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVolumeTexture
  }
}

@JsName("ENiagaraDebugHUDOverviewMode")
public external object NiagaraDebugHUDOverviewMode {
  public var Overview: String

  public var Scalability: String

  public var Performance: String

  public var GpuComputePerformance: String

  @JsName("ENiagaraDebugHUDOverviewMode_MAX")
  public var Max: String
}

@JsName("ENiagaraDebugHudFont")
public external object NiagaraDebugHudFont {
  public var Small: String

  public var Normal: String

  @JsName("ENiagaraDebugHudFont_MAX")
  public var Max: String
}

@JsName("ENiagaraDebugHudVerbosity")
public external object NiagaraDebugHudVerbosity {
  public var None: String

  public var Basic: String

  public var Verbose: String

  @JsName("ENiagaraDebugHudVerbosity_MAX")
  public var Max: String
}

@JsName("NiagaraDebugHUDVariable")
public open external class NiagaraDebugHudVariable {
  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("Name")
  public open var name: String

  public open fun clone(): NiagaraDebugHudVariable

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraDebugHudVariable

    @JsName("C")
    public fun copy(other: Any): NiagaraDebugHudVariable
  }
}

@JsName("ENiagaraDebugHudHAlign")
public external object NiagaraDebugHudHAlign {
  public var Left: String

  public var Center: String

  public var Right: String

  @JsName("ENiagaraDebugHudHAlign_MAX")
  public var Max: String
}

@JsName("ENiagaraDebugHudVAlign")
public external object NiagaraDebugHudVAlign {
  public var Top: String

  public var Center: String

  public var Bottom: String

  @JsName("ENiagaraDebugHudVAlign_MAX")
  public var Max: String
}

public open external class NiagaraDebugHudTextOptions {
  @JsName("Font")
  public open var font: String

  @JsName("HorizontalAlignment")
  public open var horizontalAlignment: String

  @JsName("VerticalAlignment")
  public open var verticalAlignment: String

  @JsName("ScreenOffset")
  public open var screenOffset: Vector2d

  public open fun clone(): NiagaraDebugHudTextOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraDebugHudTextOptions

    @JsName("C")
    public fun copy(other: Any): NiagaraDebugHudTextOptions
  }
}

@JsName("ENiagaraDebugHUDPerfSampleMode")
public external object NiagaraDebugHUDPerfSampleMode {
  public var FrameTotal: String

  public var PerInstanceAverage: String

  @JsName("ENiagaraDebugHUDPerfSampleMode_MAX")
  public var Max: String
}

@JsName("ENiagaraDebugHUDPerfGraphMode")
public external object NiagaraDebugHUDPerfGraphMode {
  public var None: String

  public var GameThread: String

  public var RenderThread: String

  public var GPU: String

  @JsName("ENiagaraDebugHUDPerfGraphMode_MAX")
  public var Max: String
}

@JsName("ENiagaraDebugPlaybackMode")
public external object NiagaraDebugPlaybackMode {
  public var Play: String

  public var Loop: String

  public var Paused: String

  public var Step: String

  @JsName("ENiagaraDebugPlaybackMode_MAX")
  public var Max: String
}

@JsName("NiagaraDebugHUDSettingsData")
public open external class NiagaraDebugHudSettingsData {
  @JsName("bWidgetEnabled")
  public open var widgetEnabled: Boolean

  @JsName("bHudEnabled")
  public open var hudEnabled: Boolean

  @JsName("bValidateSystemSimulationDataBuffers")
  public open var validateSystemSimulationDataBuffers: Boolean

  @JsName("bValidateParticleDataBuffers")
  public open var validateParticleDataBuffers: Boolean

  @JsName("bOverviewEnabled")
  public open var overviewEnabled: Boolean

  @JsName("OverviewMode")
  public open var overviewMode: String

  @JsName("OverviewFont")
  public open var overviewFont: String

  @JsName("OverviewLocation")
  public open var overviewLocation: Vector2d

  @JsName("ActorFilter")
  public open var actorFilter: String

  @JsName("bComponentFilterEnabled")
  public open var componentFilterEnabled: Boolean

  @JsName("ComponentFilter")
  public open var componentFilter: String

  @JsName("bSystemFilterEnabled")
  public open var systemFilterEnabled: Boolean

  @JsName("SystemFilter")
  public open var systemFilter: String

  @JsName("bEmitterFilterEnabled")
  public open var emitterFilterEnabled: Boolean

  @JsName("EmitterFilter")
  public open var emitterFilter: String

  @JsName("bActorFilterEnabled")
  public open var actorFilterEnabled: Boolean

  @JsName("SystemDebugVerbosity")
  public open var systemDebugVerbosity: String

  @JsName("SystemEmitterVerbosity")
  public open var systemEmitterVerbosity: String

  @JsName("bSystemShowBounds")
  public open var systemShowBounds: Boolean

  @JsName("bSystemShowActiveOnlyInWorld")
  public open var systemShowActiveOnlyInWorld: Boolean

  @JsName("bShowSystemVariables")
  public open var showSystemVariables: Boolean

  @JsName("SystemVariables")
  public open var systemVariables: Array<NiagaraDebugHudVariable>

  @JsName("SystemTextOptions")
  public open var systemTextOptions: NiagaraDebugHudTextOptions

  @JsName("bShowParticleVariables")
  public open var showParticleVariables: Boolean

  @JsName("bEnableGpuParticleReadback")
  public open var enableGpuParticleReadback: Boolean

  @JsName("bShowParticleIndex")
  public open var showParticleIndex: Boolean

  @JsName("ParticlesVariables")
  public open var particlesVariables: Array<NiagaraDebugHudVariable>

  @JsName("ParticleTextOptions")
  public open var particleTextOptions: NiagaraDebugHudTextOptions

  @JsName("bShowParticlesVariablesWithSystem")
  public open var showParticlesVariablesWithSystem: Boolean

  @JsName("bShowParticleVariablesVertical")
  public open var showParticleVariablesVertical: Boolean

  @JsName("bUseMaxParticlesToDisplay")
  public open var useMaxParticlesToDisplay: Boolean

  @JsName("bUseParticleDisplayClip")
  public open var useParticleDisplayClip: Boolean

  @JsName("ParticleDisplayClip")
  public open var particleDisplayClip: Vector2d

  @JsName("bUseParticleDisplayCenterRadius")
  public open var useParticleDisplayCenterRadius: Boolean

  @JsName("ParticleDisplayCenterRadius")
  public open var particleDisplayCenterRadius: Number

  @JsName("MaxParticlesToDisplay")
  public open var maxParticlesToDisplay: Number

  @JsName("PerfReportFrames")
  public open var perfReportFrames: Number

  @JsName("PerfSampleMode")
  public open var perfSampleMode: String

  @JsName("PerfGraphMode")
  public open var perfGraphMode: String

  @JsName("PerfHistoryFrames")
  public open var perfHistoryFrames: Number

  @JsName("PerfGraphTimeRange")
  public open var perfGraphTimeRange: Number

  @JsName("PerfGraphSize")
  public open var perfGraphSize: Vector2d

  @JsName("PerfGraphAxisColor")
  public open var perfGraphAxisColor: LinearColor

  @JsName("bEnableSmoothing")
  public open var enableSmoothing: Boolean

  @JsName("SmoothingWidth")
  public open var smoothingWidth: Number

  @JsName("DefaultBackgroundColor")
  public open var defaultBackgroundColor: LinearColor

  @JsName("OverviewHeadingColor")
  public open var overviewHeadingColor: LinearColor

  @JsName("OverviewDetailColor")
  public open var overviewDetailColor: LinearColor

  @JsName("OverviewDetailHighlightColor")
  public open var overviewDetailHighlightColor: LinearColor

  @JsName("InWorldErrorTextColor")
  public open var inWorldErrorTextColor: LinearColor

  @JsName("InWorldTextColor")
  public open var inWorldTextColor: LinearColor

  @JsName("MessageInfoTextColor")
  public open var messageInfoTextColor: LinearColor

  @JsName("MessageWarningTextColor")
  public open var messageWarningTextColor: LinearColor

  @JsName("MessageErrorTextColor")
  public open var messageErrorTextColor: LinearColor

  @JsName("SystemColorTableOpacity")
  public open var systemColorTableOpacity: Number

  @JsName("SystemColorSeed")
  public open var systemColorSeed: Any

  @JsName("SystemColorHSVMin")
  public open var systemColorHsvMin: Vector

  @JsName("SystemColorHSVMax")
  public open var systemColorHsvMax: Vector

  @JsName("PlaybackMode")
  public open var playbackMode: String

  @JsName("bPlaybackRateEnabled")
  public open var playbackRateEnabled: Boolean

  @JsName("PlaybackRate")
  public open var playbackRate: Number

  @JsName("bLoopTimeEnabled")
  public open var loopTimeEnabled: Boolean

  @JsName("LoopTime")
  public open var loopTime: Number

  @JsName("bShowGlobalBudgetInfo")
  public open var showGlobalBudgetInfo: Boolean

  public open fun clone(): NiagaraDebugHudSettingsData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraDebugHudSettingsData

    @JsName("C")
    public fun copy(other: Any): NiagaraDebugHudSettingsData
  }
}

@JsName("NiagaraDebugHUDSettings")
public open external class NiagaraDebugHudSettings(
  outer: UObject,
) : UObject {
  @JsName("Data")
  public open var data: NiagaraDebugHudSettingsData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDebugHudSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDebugHudSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDebugHudSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDebugHudSettings

    @JsName("C")
    public fun copy(other: UObject): NiagaraDebugHudSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraDebugHudSettings
  }
}

public open external class NiagaraSignificanceHandlerDistance(
  outer: UObject,
) : NiagaraSignificanceHandler {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSignificanceHandlerDistance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSignificanceHandlerDistance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSignificanceHandlerDistance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSignificanceHandlerDistance

    @JsName("C")
    public fun copy(other: UObject): NiagaraSignificanceHandlerDistance

    @JsName("C")
    public fun copy(other: Any): NiagaraSignificanceHandlerDistance
  }
}

public open external class NiagaraSignificanceHandlerAge(
  outer: UObject,
) : NiagaraSignificanceHandler {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSignificanceHandlerAge

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSignificanceHandlerAge

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSignificanceHandlerAge

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSignificanceHandlerAge

    @JsName("C")
    public fun copy(other: UObject): NiagaraSignificanceHandlerAge

    @JsName("C")
    public fun copy(other: Any): NiagaraSignificanceHandlerAge
  }
}

public open external class NiagaraEventReceiverEmitterAction(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEventReceiverEmitterAction

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEventReceiverEmitterAction

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEventReceiverEmitterAction

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEventReceiverEmitterAction

    @JsName("C")
    public fun copy(other: UObject): NiagaraEventReceiverEmitterAction

    @JsName("C")
    public fun copy(other: Any): NiagaraEventReceiverEmitterAction
  }
}

@JsName("NiagaraEventReceiverEmitterAction_SpawnParticles")
public open external class NiagaraEventReceiverEmitterActionSpawnParticles(
  outer: UObject,
) : NiagaraEventReceiverEmitterAction {
  @JsName("NumParticles")
  public open var numParticles: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEventReceiverEmitterActionSpawnParticles

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraEventReceiverEmitterActionSpawnParticles

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEventReceiverEmitterActionSpawnParticles

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEventReceiverEmitterActionSpawnParticles

    @JsName("C")
    public fun copy(other: UObject): NiagaraEventReceiverEmitterActionSpawnParticles

    @JsName("C")
    public fun copy(other: Any): NiagaraEventReceiverEmitterActionSpawnParticles
  }
}

@JsName("T$816")
public external interface Object816 {
  @JsName("SpawnParams")
  public var spawnParams: FxSystemSpawnParameters

  @JsName("$")
  public var value: NiagaraComponent
}

@JsName("FXSystemSpawnParameters")
public open external class FxSystemSpawnParameters {
  public open fun clone(): FxSystemSpawnParameters

  @JsName("SpawnSystemAtLocationWithParams")
  public open fun spawnSystemAtLocationWithParams(): Object816

  @JsName("SpawnSystemAttachedWithParams")
  public open fun spawnSystemAttachedWithParams(): Object816

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FxSystemSpawnParameters

    @JsName("C")
    public fun copy(other: Any): FxSystemSpawnParameters

    @JsName("SpawnSystemAtLocationWithParams")
    public fun spawnSystemAtLocationWithParams(spawnParams: FxSystemSpawnParameters): Object816

    @JsName("SpawnSystemAttachedWithParams")
    public fun spawnSystemAttachedWithParams(spawnParams: FxSystemSpawnParameters): Object816
  }
}

public open external class NiagaraFunctionLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraFunctionLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraFunctionLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraFunctionLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraFunctionLibrary

    @JsName("SpawnSystemAttachedWithParams")
    public fun spawnSystemAttachedWithParams(spawnParams: FxSystemSpawnParameters): Object816

    @JsName("SpawnSystemAttached")
    public fun spawnSystemAttached(
      systemTemplate: NiagaraSystem,
      attachToComponent: SceneComponent,
      attachPointName: String,
      location: Vector,
      rotation: Rotator,
      locationType: String,
      autoDestroy: Boolean,
      autoActivate: Boolean,
      poolingMethod: String,
      preCullCheck: Boolean,
    ): NiagaraComponent

    @JsName("SpawnSystemAtLocationWithParams")
    public fun spawnSystemAtLocationWithParams(spawnParams: FxSystemSpawnParameters): Object816

    @JsName("SpawnSystemAtLocation")
    public fun spawnSystemAtLocation(
      worldContextObject: UObject,
      systemTemplate: NiagaraSystem,
      location: Vector,
      rotation: Rotator,
      scale: Vector,
      autoDestroy: Boolean,
      autoActivate: Boolean,
      poolingMethod: String,
      preCullCheck: Boolean,
    ): NiagaraComponent

    @JsName("SetVolumeTextureObject")
    public fun setVolumeTextureObject(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      texture: VolumeTexture,
    ): Unit

    @JsName("SetTextureObject")
    public fun setTextureObject(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      texture: Texture,
    ): Unit

    @JsName("SetTexture2DArrayObject")
    public fun setTexture2dArrayObject(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      texture: Texture2dArray,
    ): Unit

    @JsName("SetSkeletalMeshDataInterfaceSamplingRegions")
    public fun setSkeletalMeshDataInterfaceSamplingRegions(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      samplingRegions: Array<String>,
    ): Unit

    @JsName("SetComponentNiagaraGPURayTracedCollisionGroup")
    public fun setComponentNiagaraGpuRayTracedCollisionGroup(
      worldContextObject: UObject,
      primitive: PrimitiveComponent,
      collisionGroup: Number,
    ): Unit

    @JsName("SetActorNiagaraGPURayTracedCollisionGroup")
    public fun setActorNiagaraGpuRayTracedCollisionGroup(
      worldContextObject: UObject,
      actor: Actor,
      collisionGroup: Number,
    ): Unit

    @JsName("ReleaseNiagaraGPURayTracedCollisionGroup")
    public fun releaseNiagaraGpuRayTracedCollisionGroup(worldContextObject: UObject,
        collisionGroup: Number): Unit

    @JsName("OverrideSystemUserVariableStaticMeshComponent")
    public fun overrideSystemUserVariableStaticMeshComponent(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      staticMeshComponent: StaticMeshComponent,
    ): Unit

    @JsName("OverrideSystemUserVariableStaticMesh")
    public fun overrideSystemUserVariableStaticMesh(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      staticMesh: StaticMesh,
    ): Unit

    @JsName("OverrideSystemUserVariableSkeletalMeshComponent")
    public fun overrideSystemUserVariableSkeletalMeshComponent(
      niagaraSystem: NiagaraComponent,
      overrideName: String,
      skeletalMeshComponent: SkeletalMeshComponent,
    ): Unit

    @JsName("GetNiagaraParameterCollection")
    public fun getNiagaraParameterCollection(worldContextObject: UObject,
        collection: NiagaraParameterCollection): NiagaraParameterCollectionInstance

    @JsName("AcquireNiagaraGPURayTracedCollisionGroup")
    public fun acquireNiagaraGpuRayTracedCollisionGroup(worldContextObject: UObject): Number

    @JsName("C")
    public fun copy(other: UObject): NiagaraFunctionLibrary

    @JsName("C")
    public fun copy(other: Any): NiagaraFunctionLibrary
  }
}

public open external class NiagaraLensEffectBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : NiagaraActor {
  @JsName("DesiredRelativeTransform")
  public open var desiredRelativeTransform: Transform

  @JsName("BaseAuthoredFOV")
  public open var baseAuthoredFov: Number

  @JsName("bAllowMultipleInstances")
  public open var allowMultipleInstances: Boolean

  @JsName("bResetWhenRetriggered")
  public open var resetWhenRetriggered: Boolean

  @JsName("EmittersToTreatAsSame")
  public open var emittersToTreatAsSame: Array<UnrealEngineClass>

  @JsName("OwningCameraManager")
  public open var owningCameraManager: PlayerCameraManager

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraLensEffectBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraLensEffectBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraLensEffectBase

    @JsName("C")
    public fun copy(other: Any): NiagaraLensEffectBase
  }
}

public open external class NiagaraLightRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("bUseInverseSquaredFalloff")
  public open var useInverseSquaredFalloff: Boolean

  @JsName("bAffectsTranslucency")
  public open var affectsTranslucency: Boolean

  @JsName("bAlphaScalesBrightness")
  public open var alphaScalesBrightness: Boolean

  @JsName("RadiusScale")
  public open var radiusScale: Number

  @JsName("DefaultExponent")
  public open var defaultExponent: Number

  @JsName("ColorAdd")
  public open var colorAdd: Vector

  @JsName("RendererVisibility")
  public open var rendererVisibility: Number

  @JsName("LightRenderingEnabledBinding")
  public open var lightRenderingEnabledBinding: NiagaraVariableAttributeBinding

  @JsName("LightExponentBinding")
  public open var lightExponentBinding: NiagaraVariableAttributeBinding

  @JsName("PositionBinding")
  public open var positionBinding: NiagaraVariableAttributeBinding

  @JsName("ColorBinding")
  public open var colorBinding: NiagaraVariableAttributeBinding

  @JsName("RadiusBinding")
  public open var radiusBinding: NiagaraVariableAttributeBinding

  @JsName("VolumetricScatteringBinding")
  public open var volumetricScatteringBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibilityTagBinding")
  public open var rendererVisibilityTagBinding: NiagaraVariableAttributeBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraLightRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraLightRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraLightRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraLightRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraLightRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraLightRendererProperties
  }
}

public open external class NiagaraMessageDataBase(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraMessageDataBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraMessageDataBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraMessageDataBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraMessageDataBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraMessageDataBase

    @JsName("C")
    public fun copy(other: Any): NiagaraMessageDataBase
  }
}

@JsName("NiagaraBaselineController_Basic")
public open external class NiagaraBaselineControllerBasic(
  outer: UObject,
) : NiagaraBaselineController {
  @JsName("NumInstances")
  public open var numInstances: Number

  @JsName("SpawnedComponents")
  public open var spawnedComponents: Array<NiagaraComponent>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraBaselineControllerBasic

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraBaselineControllerBasic

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraBaselineControllerBasic

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraBaselineControllerBasic

    @JsName("C")
    public fun copy(other: UObject): NiagaraBaselineControllerBasic

    @JsName("C")
    public fun copy(other: Any): NiagaraBaselineControllerBasic
  }
}

public open external class NiagaraPrecompileContainer(
  outer: UObject,
) : UObject {
  @JsName("Scripts")
  public open var scripts: Array<NiagaraScript>

  @JsName("System")
  public open var system: NiagaraSystem

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPrecompileContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPrecompileContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPrecompileContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPrecompileContainer

    @JsName("C")
    public fun copy(other: UObject): NiagaraPrecompileContainer

    @JsName("C")
    public fun copy(other: Any): NiagaraPrecompileContainer
  }
}

public open external class NiagaraPreviewBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("SetSystem")
  public open fun setSystem(inSystem: NiagaraSystem): Unit

  @JsName("SetLabelText")
  public open fun setLabelText(inXAxisText: String, inYAxisText: String): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewBase

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewBase
  }
}

@JsName("T$817")
public external interface OutLabelTextProvider {
  @JsName("OutLabelText")
  public var outLabelText: String
}

public open external class NiagaraPreviewAxis(
  outer: UObject,
) : UObject {
  @JsName("Num")
  public open fun num(): Number

  @JsName("ApplyToPreview")
  public open fun applyToPreview(
    previewComponent: NiagaraComponent,
    previewIndex: Number,
    isXAxis: Boolean,
    outLabelText: String,
  ): OutLabelTextProvider

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxis

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxis

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxis

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxis

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxis

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxis
  }
}

@JsName("NiagaraPreviewAxis_InterpParamBase")
public open external class NiagaraPreviewAxisInterpParamBase(
  outer: UObject,
) : NiagaraPreviewAxis {
  @JsName("Param")
  public open var param: String

  @JsName("Count")
  public open var count: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamBase

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamBase
  }
}

@JsName("NiagaraPreviewAxis_InterpParamInt32")
public open external class NiagaraPreviewAxisInterpParamInt32(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: Number

  @JsName("Max")
  public open var max: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamInt32

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamInt32

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamInt32

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamInt32

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamInt32

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamInt32
  }
}

@JsName("NiagaraPreviewAxis_InterpParamFloat")
public open external class NiagaraPreviewAxisInterpParamFloat(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: Number

  @JsName("Max")
  public open var max: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamFloat

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamFloat

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamFloat

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamFloat

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamFloat

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamFloat
  }
}

@JsName("NiagaraPreviewAxis_InterpParamVector2D")
public open external class NiagaraPreviewAxisInterpParamVector2d(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: Vector2d

  @JsName("Max")
  public open var max: Vector2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamVector2d

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamVector2d

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamVector2d

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamVector2d

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamVector2d

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamVector2d
  }
}

@JsName("NiagaraPreviewAxis_InterpParamVector")
public open external class NiagaraPreviewAxisInterpParamVector(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: Vector

  @JsName("Max")
  public open var max: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamVector

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamVector

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamVector
  }
}

@JsName("NiagaraPreviewAxis_InterpParamVector4")
public open external class NiagaraPreviewAxisInterpParamVector4(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: Vector4

  @JsName("Max")
  public open var max: Vector4

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamVector4

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamVector4

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamVector4

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamVector4

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamVector4

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamVector4
  }
}

@JsName("NiagaraPreviewAxis_InterpParamLinearColor")
public open external class NiagaraPreviewAxisInterpParamLinearColor(
  outer: UObject,
) : NiagaraPreviewAxisInterpParamBase {
  @JsName("Min")
  public open var min: LinearColor

  @JsName("Max")
  public open var max: LinearColor

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraPreviewAxisInterpParamLinearColor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraPreviewAxisInterpParamLinearColor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewAxisInterpParamLinearColor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewAxisInterpParamLinearColor

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewAxisInterpParamLinearColor

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewAxisInterpParamLinearColor
  }
}

@JsName("ENiagaraPreviewGridResetMode")
public external object NiagaraPreviewGridResetMode {
  public var Never: String

  public var Individual: String

  public var All: String

  @JsName("ENiagaraPreviewGridResetMode_MAX")
  public var Max: String
}

@JsName("T$818")
public external interface OutPreviewsProvider {
  @JsName("OutPreviews")
  public var outPreviews: Array<NiagaraComponent>
}

public open external class NiagaraPreviewGrid(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("System")
  public open var system: NiagaraSystem

  @JsName("ResetMode")
  public open var resetMode: String

  @JsName("PreviewAxisX")
  public open var previewAxisX: NiagaraPreviewAxis

  @JsName("PreviewAxisY")
  public open var previewAxisY: NiagaraPreviewAxis

  @JsName("PreviewClass")
  public open var previewClass: UnrealEngineClass

  @JsName("SpacingX")
  public open var spacingX: Number

  @JsName("SpacingY")
  public open var spacingY: Number

  @JsName("NumX")
  public open var numX: Number

  @JsName("NumY")
  public open var numY: Number

  @JsName("PreviewComponents")
  public open var previewComponents: Array<ChildActorComponent>

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("ArrowComponent")
  public open var arrowComponent: ArrowComponent

  @JsName("SetPaused")
  public open fun setPaused(paused: Boolean): Unit

  @JsName("GetPreviews")
  public open fun getPreviews(outPreviews: Array<NiagaraComponent>): OutPreviewsProvider

  @JsName("DeactivatePreviews")
  public open fun deactivatePreviews(): Unit

  @JsName("ActivatePreviews")
  public open fun activatePreviews(reset: Boolean): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraPreviewGrid

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraPreviewGrid

    @JsName("C")
    public fun copy(other: UObject): NiagaraPreviewGrid

    @JsName("C")
    public fun copy(other: Any): NiagaraPreviewGrid
  }
}

@JsName("ENiagaraRibbonFacingMode")
public external object NiagaraRibbonFacingMode {
  public var Screen: String

  public var Custom: String

  public var CustomSideVector: String

  @JsName("ENiagaraRibbonFacingMode_MAX")
  public var Max: String
}

@JsName("ENiagaraRibbonUVDistributionMode")
public external object NiagaraRibbonUVDistributionMode {
  public var ScaledUniformly: String

  public var ScaledUsingRibbonSegmentLength: String

  public var TiledOverRibbonLength: String

  public var TiledFromStartOverRibbonLength: String

  @JsName("ENiagaraRibbonUVDistributionMode_MAX")
  public var Max: String
}

@JsName("ENiagaraRibbonUVEdgeMode")
public external object NiagaraRibbonUVEdgeMode {
  public var SmoothTransition: String

  public var Locked: String

  @JsName("ENiagaraRibbonUVEdgeMode_MAX")
  public var Max: String
}

@JsName("NiagaraRibbonUVSettings")
public open external class NiagaraRibbonUvSettings {
  @JsName("DistributionMode")
  public open var distributionMode: String

  @JsName("LeadingEdgeMode")
  public open var leadingEdgeMode: String

  @JsName("TrailingEdgeMode")
  public open var trailingEdgeMode: String

  @JsName("TilingLength")
  public open var tilingLength: Number

  @JsName("Offset")
  public open var offset: Vector2d

  @JsName("Scale")
  public open var scale: Vector2d

  @JsName("bEnablePerParticleUOverride")
  public open var enablePerParticleUOverride: Boolean

  @JsName("bEnablePerParticleVRangeOverride")
  public open var enablePerParticleVRangeOverride: Boolean

  public open fun clone(): NiagaraRibbonUvSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraRibbonUvSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraRibbonUvSettings
  }
}

@JsName("ENiagaraRibbonAgeOffsetMode")
public external object NiagaraRibbonAgeOffsetMode {
  public var Scale: String

  public var Clip: String

  @JsName("ENiagaraRibbonAgeOffsetMode_MAX")
  public var Max: String
}

@JsName("ENiagaraRibbonDrawDirection")
public external object NiagaraRibbonDrawDirection {
  public var FrontToBack: String

  public var BackToFront: String

  @JsName("ENiagaraRibbonDrawDirection_MAX")
  public var Max: String
}

@JsName("ENiagaraRibbonShapeMode")
public external object NiagaraRibbonShapeMode {
  public var Plane: String

  public var MultiPlane: String

  public var Tube: String

  public var Custom: String

  @JsName("ENiagaraRibbonShapeMode_MAX")
  public var Max: String
}

public open external class NiagaraRibbonShapeCustomVertex {
  public open var position: Vector2d

  @JsName("Normal")
  public open var normal: Vector2d

  @JsName("TextureV")
  public open var textureV: Number

  public open fun clone(): NiagaraRibbonShapeCustomVertex

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraRibbonShapeCustomVertex

    @JsName("C")
    public fun copy(other: Any): NiagaraRibbonShapeCustomVertex
  }
}

@JsName("ENiagaraRibbonTessellationMode")
public external object NiagaraRibbonTessellationMode {
  public var Automatic: String

  public var Custom: String

  public var Disabled: String

  @JsName("ENiagaraRibbonTessellationMode_MAX")
  public var Max: String
}

public open external class NiagaraRibbonRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("MaterialUserParamBinding")
  public open var materialUserParamBinding: NiagaraUserParameterBinding

  @JsName("FacingMode")
  public open var facingMode: String

  @JsName("UV0Settings")
  public open var uv0Settings: NiagaraRibbonUvSettings

  @JsName("UV1Settings")
  public open var uv1Settings: NiagaraRibbonUvSettings

  @JsName("UV0TilingDistance")
  public open var uv0TilingDistance: Number

  @JsName("UV0Scale")
  public open var uv0Scale: Vector2d

  @JsName("UV0Offset")
  public open var uv0Offset: Vector2d

  @JsName("UV0AgeOffsetMode")
  public open var uv0AgeOffsetMode: String

  @JsName("UV1TilingDistance")
  public open var uv1TilingDistance: Number

  @JsName("UV1Scale")
  public open var uv1Scale: Vector2d

  @JsName("UV1Offset")
  public open var uv1Offset: Vector2d

  @JsName("UV1AgeOffsetMode")
  public open var uv1AgeOffsetMode: String

  @JsName("DrawDirection")
  public open var drawDirection: String

  @JsName("Shape")
  public open var shape: String

  @JsName("bEnableAccurateGeometry")
  public open var enableAccurateGeometry: Boolean

  @JsName("WidthSegmentationCount")
  public open var widthSegmentationCount: Number

  @JsName("MultiPlaneCount")
  public open var multiPlaneCount: Number

  @JsName("TubeSubdivisions")
  public open var tubeSubdivisions: Number

  @JsName("CustomVertices")
  public open var customVertices: Array<NiagaraRibbonShapeCustomVertex>

  @JsName("CurveTension")
  public open var curveTension: Number

  @JsName("TessellationMode")
  public open var tessellationMode: String

  @JsName("TessellationFactor")
  public open var tessellationFactor: Number

  @JsName("bUseConstantFactor")
  public open var useConstantFactor: Boolean

  @JsName("TessellationAngle")
  public open var tessellationAngle: Number

  @JsName("bScreenSpaceTessellation")
  public open var screenSpaceTessellation: Boolean

  @JsName("PositionBinding")
  public open var positionBinding: NiagaraVariableAttributeBinding

  @JsName("ColorBinding")
  public open var colorBinding: NiagaraVariableAttributeBinding

  @JsName("VelocityBinding")
  public open var velocityBinding: NiagaraVariableAttributeBinding

  @JsName("NormalizedAgeBinding")
  public open var normalizedAgeBinding: NiagaraVariableAttributeBinding

  @JsName("RibbonTwistBinding")
  public open var ribbonTwistBinding: NiagaraVariableAttributeBinding

  @JsName("RibbonWidthBinding")
  public open var ribbonWidthBinding: NiagaraVariableAttributeBinding

  @JsName("RibbonFacingBinding")
  public open var ribbonFacingBinding: NiagaraVariableAttributeBinding

  @JsName("RibbonIdBinding")
  public open var ribbonIdBinding: NiagaraVariableAttributeBinding

  @JsName("RibbonLinkOrderBinding")
  public open var ribbonLinkOrderBinding: NiagaraVariableAttributeBinding

  @JsName("MaterialRandomBinding")
  public open var materialRandomBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterialBinding")
  public open var dynamicMaterialBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial1Binding")
  public open var dynamicMaterial1Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial2Binding")
  public open var dynamicMaterial2Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial3Binding")
  public open var dynamicMaterial3Binding: NiagaraVariableAttributeBinding

  @JsName("RibbonUVDistance")
  public open var ribbonUvDistance: NiagaraVariableAttributeBinding

  @JsName("U0OverrideBinding")
  public open var u0OverrideBinding: NiagaraVariableAttributeBinding

  @JsName("V0RangeOverrideBinding")
  public open var v0RangeOverrideBinding: NiagaraVariableAttributeBinding

  @JsName("U1OverrideBinding")
  public open var u1OverrideBinding: NiagaraVariableAttributeBinding

  @JsName("V1RangeOverrideBinding")
  public open var v1RangeOverrideBinding: NiagaraVariableAttributeBinding

  @JsName("MaterialParameterBindings")
  public open var materialParameterBindings: Array<NiagaraMaterialAttributeBinding>

  @JsName("PrevPositionBinding")
  public open var prevPositionBinding: NiagaraVariableAttributeBinding

  @JsName("PrevRibbonWidthBinding")
  public open var prevRibbonWidthBinding: NiagaraVariableAttributeBinding

  @JsName("PrevRibbonFacingBinding")
  public open var prevRibbonFacingBinding: NiagaraVariableAttributeBinding

  @JsName("PrevRibbonTwistBinding")
  public open var prevRibbonTwistBinding: NiagaraVariableAttributeBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraRibbonRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraRibbonRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraRibbonRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraRibbonRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraRibbonRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraRibbonRendererProperties
  }
}

@JsName("ENiagaraDefaultRendererMotionVectorSetting")
public external object NiagaraDefaultRendererMotionVectorSetting {
  public var Precise: String

  public var Approximate: String

  @JsName("ENiagaraDefaultRendererMotionVectorSetting_MAX")
  public var Max: String
}

@JsName("ENiagaraDefaultRendererPixelCoverageMode")
public external object NiagaraDefaultRendererPixelCoverageMode {
  public var Enabled: String

  public var Disabled: String

  @JsName("ENiagaraDefaultRendererPixelCoverageMode_MAX")
  public var Max: String
}

@JsName("ENDISkelMesh_GpuMaxInfluences")
public external object NDISkelMesh_GpuMaxInfluences {
  public var AllowMax4: String

  public var AllowMax8: String

  public var Unlimited: String

  @JsName("ENDISkelMesh_MAX")
  public var EndiSkelMeshMax: String
}

@JsName("ENDISkelMesh_GpuUniformSamplingFormat")
public external object NDISkelMesh_GpuUniformSamplingFormat {
  public var Full: String

  @JsName("Limited_24_8")
  public var Limited248: String

  @JsName("Limited_23_9")
  public var Limited239: String

  @JsName("ENDISkelMesh_MAX")
  public var EndiSkelMeshMax: String
}

@JsName("ENDISkelMesh_AdjacencyTriangleIndexFormat")
public external object NDISkelMesh_AdjacencyTriangleIndexFormat {
  public var Full: String

  public var Half: String

  @JsName("ENDISkelMesh_MAX")
  public var EndiSkelMeshMax: String
}

public open external class NiagaraSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("AdditionalParameterTypes")
  public open var additionalParameterTypes: Array<SoftObjectPath>

  @JsName("AdditionalPayloadTypes")
  public open var additionalPayloadTypes: Array<SoftObjectPath>

  @JsName("AdditionalParameterEnums")
  public open var additionalParameterEnums: Array<SoftObjectPath>

  @JsName("bSystemViewportInOrbitMode")
  public open var systemViewportInOrbitMode: Boolean

  @JsName("bShowConvertibleInputsInStack")
  public open var showConvertibleInputsInStack: Boolean

  @JsName("bSystemsSupportLargeWorldCoordinates")
  public open var systemsSupportLargeWorldCoordinates: Boolean

  @JsName("bEnforceStrictStackTypes")
  public open var enforceStrictStackTypes: Boolean

  @JsName("DefaultEffectType")
  public open var defaultEffectType: SoftObjectPath

  @JsName("PositionPinTypeColor")
  public open var positionPinTypeColor: LinearColor

  @JsName("QualityLevels")
  public open var qualityLevels: Array<String>

  @JsName("ComponentRendererWarningsPerClass")
  public open var componentRendererWarningsPerClass: Any

  @JsName("DefaultRenderTargetFormat")
  public open var defaultRenderTargetFormat: String

  @JsName("DefaultGridFormat")
  public open var defaultGridFormat: String

  @JsName("DefaultRendererMotionVectorSetting")
  public open var defaultRendererMotionVectorSetting: String

  @JsName("DefaultPixelCoverageMode")
  public open var defaultPixelCoverageMode: String

  @JsName("NDISkelMesh_GpuMaxInfluences")
  public open var ndiSkelMeshGpuMaxInfluences: String

  @JsName("NDISkelMesh_GpuUniformSamplingFormat")
  public open var ndiSkelMeshGpuUniformSamplingFormat: String

  @JsName("NDISkelMesh_AdjacencyTriangleIndexFormat")
  public open var ndiSkelMeshAdjacencyTriangleIndexFormat: String

  @JsName("NDIStaticMesh_AllowDistanceFields")
  public open var ndiStaticMeshAllowDistanceFields: Boolean

  @JsName("NDICollisionQuery_AsyncGpuTraceProviderOrder")
  public open var ndiCollisionQueryAsyncGpuTraceProviderOrder: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSettings

    @JsName("C")
    public fun copy(other: UObject): NiagaraSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraSettings
  }
}

@JsName("ENiagaraIterationSource")
public external object NiagaraIterationSource {
  public var Particles: String

  public var DataInterface: String

  @JsName("ENiagaraIterationSource_MAX")
  public var Max: String
}

public open external class NiagaraVariableDataInterfaceBinding {
  @JsName("BoundVariable")
  public open var boundVariable: NiagaraVariable

  public open fun clone(): NiagaraVariableDataInterfaceBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraVariableDataInterfaceBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraVariableDataInterfaceBinding
  }
}

public open external class NiagaraSimulationStageGeneric(
  outer: UObject,
) : NiagaraSimulationStageBase {
  @JsName("EnabledBinding")
  public open var enabledBinding: NiagaraVariableAttributeBinding

  @JsName("IterationSource")
  public open var iterationSource: String

  @JsName("Iterations")
  public open var iterations: Number

  @JsName("NumIterationsBinding")
  public open var numIterationsBinding: NiagaraVariableAttributeBinding

  @JsName("bSpawnOnly")
  public open var spawnOnly: Boolean

  @JsName("ExecuteBehavior")
  public open var executeBehavior: String

  @JsName("bDisablePartialParticleUpdate")
  public open var disablePartialParticleUpdate: Boolean

  @JsName("DataInterface")
  public open var dataInterface: NiagaraVariableDataInterfaceBinding

  @JsName("bParticleIterationStateEnabled")
  public open var particleIterationStateEnabled: Boolean

  @JsName("ParticleIterationStateBinding")
  public open var particleIterationStateBinding: NiagaraVariableAttributeBinding

  @JsName("ParticleIterationStateRange")
  public open var particleIterationStateRange: IntPoint

  @JsName("bGpuDispatchForceLinear")
  public open var gpuDispatchForceLinear: Boolean

  @JsName("bOverrideGpuDispatchNumThreads")
  public open var isOverrideGpuDispatchNumThreads: Boolean

  @JsName("OverrideGpuDispatchNumThreads")
  public open var overrideGpuDispatchNumThreads: IntVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSimulationStageGeneric

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSimulationStageGeneric

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSimulationStageGeneric

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSimulationStageGeneric

    @JsName("C")
    public fun copy(other: UObject): NiagaraSimulationStageGeneric

    @JsName("C")
    public fun copy(other: Any): NiagaraSimulationStageGeneric
  }
}

@JsName("ENiagaraSpriteAlignment")
public external object NiagaraSpriteAlignment {
  public var Unaligned: String

  public var VelocityAligned: String

  public var CustomAlignment: String

  @JsName("ENiagaraSpriteAlignment_MAX")
  public var Max: String
}

@JsName("ENiagaraSpriteFacingMode")
public external object NiagaraSpriteFacingMode {
  public var FaceCamera: String

  public var FaceCameraPlane: String

  public var CustomFacingVector: String

  public var FaceCameraPosition: String

  public var FaceCameraDistanceBlend: String

  @JsName("ENiagaraSpriteFacingMode_MAX")
  public var Max: String
}

@JsName("ENiagaraRendererPixelCoverageMode")
public external object NiagaraRendererPixelCoverageMode {
  public var Automatic: String

  public var Disabled: String

  public var Enabled: String

  @JsName("Enabled_RGBA")
  public var EnabledRgba: String

  @JsName("Enabled_RGB")
  public var EnabledRgb: String

  @JsName("Enabled_A")
  public var EnabledA: String

  @JsName("ENiagaraRendererPixelCoverageMode_MAX")
  public var Max: String
}

public open external class NiagaraSpriteRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("SourceMode")
  public open var sourceMode: String

  @JsName("MaterialUserParamBinding")
  public open var materialUserParamBinding: NiagaraUserParameterBinding

  @JsName("Alignment")
  public open var alignment: String

  @JsName("FacingMode")
  public open var facingMode: String

  @JsName("PivotInUVSpace")
  public open var pivotInUvSpace: Vector2d

  @JsName("MacroUVRadius")
  public open var macroUvRadius: Number

  @JsName("SortMode")
  public open var sortMode: String

  @JsName("SubImageSize")
  public open var subImageSize: Vector2d

  @JsName("bSubImageBlend")
  public open var subImageBlend: Boolean

  @JsName("bRemoveHMDRollInVR")
  public open var removeHmdRollInVr: Boolean

  @JsName("bSortOnlyWhenTranslucent")
  public open var sortOnlyWhenTranslucent: Boolean

  @JsName("bGpuLowLatencyTranslucency")
  public open var gpuLowLatencyTranslucency: Boolean

  @JsName("PixelCoverageMode")
  public open var pixelCoverageMode: String

  @JsName("PixelCoverageBlend")
  public open var pixelCoverageBlend: Number

  @JsName("MinFacingCameraBlendDistance")
  public open var minFacingCameraBlendDistance: Number

  @JsName("MaxFacingCameraBlendDistance")
  public open var maxFacingCameraBlendDistance: Number

  @JsName("bEnableCameraDistanceCulling")
  public open var enableCameraDistanceCulling: Boolean

  @JsName("MinCameraDistance")
  public open var minCameraDistance: Number

  @JsName("MaxCameraDistance")
  public open var maxCameraDistance: Number

  @JsName("RendererVisibility")
  public open var rendererVisibility: Any

  @JsName("PositionBinding")
  public open var positionBinding: NiagaraVariableAttributeBinding

  @JsName("ColorBinding")
  public open var colorBinding: NiagaraVariableAttributeBinding

  @JsName("VelocityBinding")
  public open var velocityBinding: NiagaraVariableAttributeBinding

  @JsName("SpriteRotationBinding")
  public open var spriteRotationBinding: NiagaraVariableAttributeBinding

  @JsName("SpriteSizeBinding")
  public open var spriteSizeBinding: NiagaraVariableAttributeBinding

  @JsName("SpriteFacingBinding")
  public open var spriteFacingBinding: NiagaraVariableAttributeBinding

  @JsName("SpriteAlignmentBinding")
  public open var spriteAlignmentBinding: NiagaraVariableAttributeBinding

  @JsName("SubImageIndexBinding")
  public open var subImageIndexBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterialBinding")
  public open var dynamicMaterialBinding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial1Binding")
  public open var dynamicMaterial1Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial2Binding")
  public open var dynamicMaterial2Binding: NiagaraVariableAttributeBinding

  @JsName("DynamicMaterial3Binding")
  public open var dynamicMaterial3Binding: NiagaraVariableAttributeBinding

  @JsName("CameraOffsetBinding")
  public open var cameraOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("UVScaleBinding")
  public open var uvScaleBinding: NiagaraVariableAttributeBinding

  @JsName("PivotOffsetBinding")
  public open var pivotOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("MaterialRandomBinding")
  public open var materialRandomBinding: NiagaraVariableAttributeBinding

  @JsName("CustomSortingBinding")
  public open var customSortingBinding: NiagaraVariableAttributeBinding

  @JsName("NormalizedAgeBinding")
  public open var normalizedAgeBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibilityTagBinding")
  public open var rendererVisibilityTagBinding: NiagaraVariableAttributeBinding

  @JsName("MaterialParameterBindings")
  public open var materialParameterBindings: Array<NiagaraMaterialAttributeBinding>

  @JsName("PrevPositionBinding")
  public open var prevPositionBinding: NiagaraVariableAttributeBinding

  @JsName("PrevVelocityBinding")
  public open var prevVelocityBinding: NiagaraVariableAttributeBinding

  @JsName("PrevSpriteRotationBinding")
  public open var prevSpriteRotationBinding: NiagaraVariableAttributeBinding

  @JsName("PrevSpriteSizeBinding")
  public open var prevSpriteSizeBinding: NiagaraVariableAttributeBinding

  @JsName("PrevSpriteFacingBinding")
  public open var prevSpriteFacingBinding: NiagaraVariableAttributeBinding

  @JsName("PrevSpriteAlignmentBinding")
  public open var prevSpriteAlignmentBinding: NiagaraVariableAttributeBinding

  @JsName("PrevCameraOffsetBinding")
  public open var prevCameraOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("PrevPivotOffsetBinding")
  public open var prevPivotOffsetBinding: NiagaraVariableAttributeBinding

  @JsName("bUseMaterialCutoutTexture")
  public open var useMaterialCutoutTexture: Boolean

  @JsName("CutoutTexture")
  public open var cutoutTexture: Texture2d

  @JsName("BoundingMode")
  public open var boundingMode: String

  @JsName("OpacitySourceMode")
  public open var opacitySourceMode: String

  @JsName("AlphaThreshold")
  public open var alphaThreshold: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSpriteRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSpriteRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSpriteRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSpriteRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraSpriteRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraSpriteRendererProperties
  }
}

public open external class GeometryCacheTrack(
  outer: UObject,
) : UObject {
  @JsName("Duration")
  public open var duration: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheTrack

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheTrack

    @JsName("C")
    public fun copy(other: Any): GeometryCacheTrack
  }
}

public open external class GeometryCache(
  outer: UObject,
) : UObject {
  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  @JsName("ThumbnailInfo")
  public open var thumbnailInfo: ThumbnailInfo

  @JsName("Materials")
  public open var materials: Array<MaterialInterface>

  @JsName("Tracks")
  public open var tracks: Array<GeometryCacheTrack>

  @JsName("StartFrame")
  public open var startFrame: Number

  @JsName("EndFrame")
  public open var endFrame: Number

  @JsName("Hash")
  public open var hash: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCache

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCache

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCache

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCache

    @JsName("C")
    public fun copy(other: UObject): GeometryCache

    @JsName("C")
    public fun copy(other: Any): GeometryCache
  }
}

public open external class GeometryCacheComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("GeometryCache")
  public open var geometryCache: GeometryCache

  @JsName("bRunning")
  public open var running: Boolean

  @JsName("bLooping")
  public open var looping: Boolean

  @JsName("bExtrapolateFrames")
  public open var extrapolateFrames: Boolean

  @JsName("StartTimeOffset")
  public open var startTimeOffset: Number

  @JsName("PlaybackSpeed")
  public open var playbackSpeed: Number

  @JsName("MotionVectorScale")
  public open var motionVectorScale: Number

  @JsName("NumTracks")
  public open var numTracks: Number

  @JsName("ElapsedTime")
  public open var elapsedTime: Number

  @JsName("Duration")
  public open var duration: Number

  @JsName("bManualTick")
  public open var manualTick: Boolean

  @JsName("bOverrideWireframeColor")
  public open var overrideWireframeColor: Boolean

  @JsName("WireframeOverrideColor")
  public open var wireframeOverrideColor: LinearColor

  @JsName("TickAtThisTime")
  public open fun tickAtThisTime(
    time: Number,
    inIsRunning: Boolean,
    inBackwards: Boolean,
    inIsLooping: Boolean,
  ): Unit

  @JsName("Stop")
  public open fun stop(): Unit

  @JsName("SetWireframeOverrideColor")
  public open fun setWireframeOverrideColor(color: LinearColor): Unit

  @JsName("SetStartTimeOffset")
  public open fun setStartTimeOffset(newStartTimeOffset: Number): Unit

  @JsName("SetPlaybackSpeed")
  public open fun setPlaybackSpeed(newPlaybackSpeed: Number): Unit

  @JsName("SetOverrideWireframeColor")
  public open fun setOverrideWireframeColor(override: Boolean): Unit

  @JsName("SetMotionVectorScale")
  public open fun setMotionVectorScale(newMotionVectorScale: Number): Unit

  @JsName("SetLooping")
  public open fun setLooping(newLooping: Boolean): Unit

  @JsName("SetGeometryCache")
  public open fun setGeometryCache(newGeomCache: GeometryCache): Boolean

  @JsName("SetExtrapolateFrames")
  public open fun setExtrapolateFrames(newExtrapolating: Boolean): Unit

  @JsName("PlayReversedFromEnd")
  public open fun playReversedFromEnd(): Unit

  @JsName("PlayReversed")
  public open fun playReversed(): Unit

  @JsName("PlayFromStart")
  public open fun playFromStart(): Unit

  @JsName("Play")
  public open fun play(): Unit

  @JsName("Pause")
  public open fun pause(): Unit

  @JsName("IsPlayingReversed")
  public open fun isPlayingReversed(): Boolean

  @JsName("IsPlaying")
  public open fun isPlaying(): Boolean

  @JsName("IsLooping")
  public open fun isLooping(): Boolean

  @JsName("IsExtrapolatingFrames")
  public open fun isExtrapolatingFrames(): Boolean

  @JsName("GetWireframeOverrideColor")
  public open fun getWireframeOverrideColor(): LinearColor

  @JsName("GetStartTimeOffset")
  public open fun getStartTimeOffset(): Number

  @JsName("GetPlaybackSpeed")
  public open fun getPlaybackSpeed(): Number

  @JsName("GetPlaybackDirection")
  public open fun getPlaybackDirection(): Number

  @JsName("GetOverrideWireframeColor")
  public open fun getOverrideWireframeColor(): Boolean

  @JsName("GetNumberOfFrames")
  public open fun getNumberOfFrames(): Number

  @JsName("GetMotionVectorScale")
  public open fun getMotionVectorScale(): Number

  @JsName("GetDuration")
  public open fun getDuration(): Number

  @JsName("GetAnimationTime")
  public open fun getAnimationTime(): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheComponent

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheComponent

    @JsName("C")
    public fun copy(other: Any): GeometryCacheComponent
  }
}

public open external class GeometryCacheActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("GeometryCacheComponent")
  public open var geometryCacheComponent: GeometryCacheComponent

  @JsName("GetGeometryCacheComponent")
  public open fun getGeometryCacheComponent(): GeometryCacheComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheActor

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheActor

    @JsName("C")
    public fun copy(other: Any): GeometryCacheActor
  }
}

public open external class GeometryCacheCodecBase(
  outer: UObject,
) : UObject {
  @JsName("TopologyRanges")
  public open var topologyRanges: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheCodecBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheCodecBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheCodecBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheCodecBase

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheCodecBase

    @JsName("C")
    public fun copy(other: Any): GeometryCacheCodecBase
  }
}

public open external class GeometryCacheCodecRaw(
  outer: UObject,
) : GeometryCacheCodecBase {
  @JsName("DummyProperty")
  public open var dummyProperty: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheCodecRaw

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheCodecRaw

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheCodecRaw

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheCodecRaw

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheCodecRaw

    @JsName("C")
    public fun copy(other: Any): GeometryCacheCodecRaw
  }
}

public open external class GeometryCacheCodecV1(
  outer: UObject,
) : GeometryCacheCodecBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheCodecV1

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheCodecV1

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheCodecV1

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheCodecV1

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheCodecV1

    @JsName("C")
    public fun copy(other: Any): GeometryCacheCodecV1
  }
}

public open external class GeometryCacheMeshData {
  public open fun clone(): GeometryCacheMeshData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GeometryCacheMeshData

    @JsName("C")
    public fun copy(other: Any): GeometryCacheMeshData
  }
}

@JsName("GeometryCacheTrack_FlipbookAnimation")
public open external class GeometryCacheTrackFlipbookAnimation(
  outer: UObject,
) : GeometryCacheTrack {
  @JsName("NumMeshSamples")
  public open var numMeshSamples: Any

  @JsName("AddMeshSample")
  public open fun addMeshSample(meshData: GeometryCacheMeshData, sampleTime: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheTrackFlipbookAnimation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheTrackFlipbookAnimation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheTrackFlipbookAnimation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheTrackFlipbookAnimation

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheTrackFlipbookAnimation

    @JsName("C")
    public fun copy(other: Any): GeometryCacheTrackFlipbookAnimation
  }
}

public open external class GeometryCacheTrackStreamable(
  outer: UObject,
) : GeometryCacheTrack {
  @JsName("Codec")
  public open var codec: GeometryCacheCodecBase

  @JsName("StartSampleTime")
  public open var startSampleTime: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheTrackStreamable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheTrackStreamable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheTrackStreamable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheTrackStreamable

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheTrackStreamable

    @JsName("C")
    public fun copy(other: Any): GeometryCacheTrackStreamable
  }
}

@JsName("GeometryCacheTrack_TransformAnimation")
public open external class GeometryCacheTrackTransformAnimation(
  outer: UObject,
) : GeometryCacheTrack {
  @JsName("SetMesh")
  public open fun setMesh(newMeshData: GeometryCacheMeshData): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheTrackTransformAnimation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheTrackTransformAnimation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheTrackTransformAnimation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheTrackTransformAnimation

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheTrackTransformAnimation

    @JsName("C")
    public fun copy(other: Any): GeometryCacheTrackTransformAnimation
  }
}

@JsName("GeometryCacheTrack_TransformGroupAnimation")
public open external class GeometryCacheTrackTransformGroupAnimation(
  outer: UObject,
) : GeometryCacheTrack {
  @JsName("SetMesh")
  public open fun setMesh(newMeshData: GeometryCacheMeshData): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeometryCacheTrackTransformGroupAnimation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GeometryCacheTrackTransformGroupAnimation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeometryCacheTrackTransformGroupAnimation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeometryCacheTrackTransformGroupAnimation

    @JsName("C")
    public fun copy(other: UObject): GeometryCacheTrackTransformGroupAnimation

    @JsName("C")
    public fun copy(other: Any): GeometryCacheTrackTransformGroupAnimation
  }
}

public open external class NiagaraGeometryCacheReference {
  @JsName("GeometryCache")
  public open var geometryCache: GeometryCache

  @JsName("GeometryCacheUserParamBinding")
  public open var geometryCacheUserParamBinding: NiagaraUserParameterBinding

  @JsName("OverrideMaterials")
  public open var overrideMaterials: Array<MaterialInterface>

  public open fun clone(): NiagaraGeometryCacheReference

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraGeometryCacheReference

    @JsName("C")
    public fun copy(other: Any): NiagaraGeometryCacheReference
  }
}

public open external class NiagaraGeometryCacheRendererProperties(
  outer: UObject,
) : NiagaraRendererProperties {
  @JsName("GeometryCaches")
  public open var geometryCaches: Array<NiagaraGeometryCacheReference>

  @JsName("bIsLooping")
  public open var isLooping: Boolean

  @JsName("ComponentCountLimit")
  public open var componentCountLimit: Any

  @JsName("PositionBinding")
  public open var positionBinding: NiagaraVariableAttributeBinding

  @JsName("RotationBinding")
  public open var rotationBinding: NiagaraVariableAttributeBinding

  @JsName("ScaleBinding")
  public open var scaleBinding: NiagaraVariableAttributeBinding

  @JsName("ElapsedTimeBinding")
  public open var elapsedTimeBinding: NiagaraVariableAttributeBinding

  @JsName("EnabledBinding")
  public open var enabledBinding: NiagaraVariableAttributeBinding

  @JsName("ArrayIndexBinding")
  public open var arrayIndexBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibilityTagBinding")
  public open var rendererVisibilityTagBinding: NiagaraVariableAttributeBinding

  @JsName("RendererVisibility")
  public open var rendererVisibility: Number

  @JsName("bAssignComponentsOnParticleID")
  public open var assignComponentsOnParticleId: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraGeometryCacheRendererProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraGeometryCacheRendererProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraGeometryCacheRendererProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraGeometryCacheRendererProperties

    @JsName("C")
    public fun copy(other: UObject): NiagaraGeometryCacheRendererProperties

    @JsName("C")
    public fun copy(other: Any): NiagaraGeometryCacheRendererProperties
  }
}

public open external class HairGroupInfo {
  @JsName("GroupID")
  public open var groupId: Number

  @JsName("GroupName")
  public open var groupName: String

  @JsName("NumCurves")
  public open var numCurves: Number

  @JsName("NumGuides")
  public open var numGuides: Number

  @JsName("NumCurveVertices")
  public open var numCurveVertices: Number

  @JsName("NumGuideVertices")
  public open var numGuideVertices: Number

  @JsName("MaxCurveLength")
  public open var maxCurveLength: Number

  @JsName("MaxImportedWidth")
  public open var maxImportedWidth: Number

  public open fun clone(): HairGroupInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupInfo

    @JsName("C")
    public fun copy(other: Any): HairGroupInfo
  }
}

public open external class HairGroupInfoWithVisibility : HairGroupInfo {
  @JsName("bIsVisible")
  public open var isVisible: Boolean

  public override fun clone(): HairGroupInfoWithVisibility

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupInfoWithVisibility

    @JsName("C")
    public fun copy(other: Any): HairGroupInfoWithVisibility
  }
}

public open external class HairGeometrySettings {
  @JsName("HairWidth")
  public open var hairWidth: Number

  @JsName("HairRootScale")
  public open var hairRootScale: Number

  @JsName("HairTipScale")
  public open var hairTipScale: Number

  public open fun clone(): HairGeometrySettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGeometrySettings

    @JsName("C")
    public fun copy(other: Any): HairGeometrySettings
  }
}

public open external class HairShadowSettings {
  @JsName("HairShadowDensity")
  public open var hairShadowDensity: Number

  @JsName("HairRaytracingRadiusScale")
  public open var hairRaytracingRadiusScale: Number

  @JsName("bUseHairRaytracingGeometry")
  public open var useHairRaytracingGeometry: Boolean

  @JsName("bVoxelize")
  public open var voxelize: Boolean

  public open fun clone(): HairShadowSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairShadowSettings

    @JsName("C")
    public fun copy(other: Any): HairShadowSettings
  }
}

public open external class HairAdvancedRenderingSettings {
  @JsName("bUseStableRasterization")
  public open var useStableRasterization: Boolean

  @JsName("bScatterSceneLighting")
  public open var scatterSceneLighting: Boolean

  public open fun clone(): HairAdvancedRenderingSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairAdvancedRenderingSettings

    @JsName("C")
    public fun copy(other: Any): HairAdvancedRenderingSettings
  }
}

public open external class HairGroupsRendering {
  @JsName("MaterialSlotName")
  public open var materialSlotName: String

  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("GeometrySettings")
  public open var geometrySettings: HairGeometrySettings

  @JsName("ShadowSettings")
  public open var shadowSettings: HairShadowSettings

  @JsName("AdvancedSettings")
  public open var advancedSettings: HairAdvancedRenderingSettings

  public open fun clone(): HairGroupsRendering

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsRendering

    @JsName("C")
    public fun copy(other: Any): HairGroupsRendering
  }
}

@JsName("EGroomNiagaraSolvers")
public external object GroomNiagaraSolvers {
  public var None: String

  public var CosseratRods: String

  public var AngularSprings: String

  public var CustomSolver: String

  @JsName("EGroomNiagaraSolvers_MAX")
  public var Max: String
}

public open external class HairSolverSettings {
  @JsName("EnableSimulation")
  public open var enableSimulation: Boolean

  @JsName("NiagaraSolver")
  public open var niagaraSolver: String

  @JsName("CustomSystem")
  public open var customSystem: NiagaraSystem

  @JsName("SubSteps")
  public open var subSteps: Number

  @JsName("IterationCount")
  public open var iterationCount: Number

  public open fun clone(): HairSolverSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSolverSettings

    @JsName("C")
    public fun copy(other: Any): HairSolverSettings
  }
}

public open external class HairExternalForces {
  @JsName("GravityVector")
  public open var gravityVector: Vector

  @JsName("AirDrag")
  public open var airDrag: Number

  @JsName("AirVelocity")
  public open var airVelocity: Vector

  public open fun clone(): HairExternalForces

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairExternalForces

    @JsName("C")
    public fun copy(other: Any): HairExternalForces
  }
}

public open external class HairBendConstraint {
  @JsName("SolveBend")
  public open var solveBend: Boolean

  @JsName("ProjectBend")
  public open var projectBend: Boolean

  @JsName("BendDamping")
  public open var bendDamping: Number

  @JsName("BendStiffness")
  public open var bendStiffness: Number

  @JsName("BendScale")
  public open var bendScale: RuntimeFloatCurve

  public open fun clone(): HairBendConstraint

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairBendConstraint

    @JsName("C")
    public fun copy(other: Any): HairBendConstraint
  }
}

public open external class HairStretchConstraint {
  @JsName("SolveStretch")
  public open var solveStretch: Boolean

  @JsName("ProjectStretch")
  public open var projectStretch: Boolean

  @JsName("StretchDamping")
  public open var stretchDamping: Number

  @JsName("StretchStiffness")
  public open var stretchStiffness: Number

  @JsName("StretchScale")
  public open var stretchScale: RuntimeFloatCurve

  public open fun clone(): HairStretchConstraint

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairStretchConstraint

    @JsName("C")
    public fun copy(other: Any): HairStretchConstraint
  }
}

public open external class HairCollisionConstraint {
  @JsName("SolveCollision")
  public open var solveCollision: Boolean

  @JsName("ProjectCollision")
  public open var projectCollision: Boolean

  @JsName("StaticFriction")
  public open var staticFriction: Number

  @JsName("KineticFriction")
  public open var kineticFriction: Number

  @JsName("StrandsViscosity")
  public open var strandsViscosity: Number

  @JsName("GridDimension")
  public open var gridDimension: IntVector

  @JsName("CollisionRadius")
  public open var collisionRadius: Number

  @JsName("RadiusScale")
  public open var radiusScale: RuntimeFloatCurve

  public open fun clone(): HairCollisionConstraint

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairCollisionConstraint

    @JsName("C")
    public fun copy(other: Any): HairCollisionConstraint
  }
}

public open external class HairMaterialConstraints {
  @JsName("BendConstraint")
  public open var bendConstraint: HairBendConstraint

  @JsName("StretchConstraint")
  public open var stretchConstraint: HairStretchConstraint

  @JsName("CollisionConstraint")
  public open var collisionConstraint: HairCollisionConstraint

  public open fun clone(): HairMaterialConstraints

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairMaterialConstraints

    @JsName("C")
    public fun copy(other: Any): HairMaterialConstraints
  }
}

@JsName("EGroomStrandsSize")
public external object GroomStrandsSize {
  public var None: String

  public var Size2: String

  public var Size4: String

  public var Size8: String

  public var Size16: String

  public var Size32: String

  @JsName("EGroomStrandsSize_MAX")
  public var Max: String
}

public open external class HairStrandsParameters {
  @JsName("StrandsSize")
  public open var strandsSize: String

  @JsName("StrandsDensity")
  public open var strandsDensity: Number

  @JsName("StrandsSmoothing")
  public open var strandsSmoothing: Number

  @JsName("StrandsThickness")
  public open var strandsThickness: Number

  @JsName("ThicknessScale")
  public open var thicknessScale: RuntimeFloatCurve

  public open fun clone(): HairStrandsParameters

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairStrandsParameters

    @JsName("C")
    public fun copy(other: Any): HairStrandsParameters
  }
}

public open external class HairGroupsPhysics {
  @JsName("SolverSettings")
  public open var solverSettings: HairSolverSettings

  @JsName("ExternalForces")
  public open var externalForces: HairExternalForces

  @JsName("MaterialConstraints")
  public open var materialConstraints: HairMaterialConstraints

  @JsName("StrandsParameters")
  public open var strandsParameters: HairStrandsParameters

  public open fun clone(): HairGroupsPhysics

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsPhysics

    @JsName("C")
    public fun copy(other: Any): HairGroupsPhysics
  }
}

public open external class HairDecimationSettings {
  @JsName("CurveDecimation")
  public open var curveDecimation: Number

  @JsName("VertexDecimation")
  public open var vertexDecimation: Number

  public open fun clone(): HairDecimationSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairDecimationSettings

    @JsName("C")
    public fun copy(other: Any): HairDecimationSettings
  }
}

@JsName("EHairInterpolationQuality")
public external object HairInterpolationQuality {
  public var Low: String

  public var Medium: String

  public var High: String

  public var Unknown: String

  @JsName("EHairInterpolationQuality_MAX")
  public var Max: String
}

@JsName("EHairInterpolationWeight")
public external object HairInterpolationWeight {
  public var Parametric: String

  public var Root: String

  public var Index: String

  public var Unknown: String

  @JsName("EHairInterpolationWeight_MAX")
  public var Max: String
}

public open external class HairInterpolationSettings {
  @JsName("bOverrideGuides")
  public open var overrideGuides: Boolean

  @JsName("HairToGuideDensity")
  public open var hairToGuideDensity: Number

  @JsName("InterpolationQuality")
  public open var interpolationQuality: String

  @JsName("InterpolationDistance")
  public open var interpolationDistance: String

  @JsName("bRandomizeGuide")
  public open var randomizeGuide: Boolean

  @JsName("bUseUniqueGuide")
  public open var useUniqueGuide: Boolean

  public open fun clone(): HairInterpolationSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairInterpolationSettings

    @JsName("C")
    public fun copy(other: Any): HairInterpolationSettings
  }
}

public open external class HairGroupsInterpolation {
  @JsName("DecimationSettings")
  public open var decimationSettings: HairDecimationSettings

  @JsName("InterpolationSettings")
  public open var interpolationSettings: HairInterpolationSettings

  public open fun clone(): HairGroupsInterpolation

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsInterpolation

    @JsName("C")
    public fun copy(other: Any): HairGroupsInterpolation
  }
}

@JsName("EGroomGeometryType")
public external object GroomGeometryType {
  public var Strands: String

  public var Cards: String

  public var Meshes: String

  @JsName("EGroomGeometryType_MAX")
  public var Max: String
}

@JsName("EGroomBindingType")
public external object GroomBindingType {
  public var NoneBinding: String

  public var Rigid: String

  public var Skinning: String

  @JsName("EGroomBindingType_MAX")
  public var Max: String
}

@JsName("EGroomOverrideType")
public external object GroomOverrideType {
  public var Auto: String

  public var Enable: String

  public var Disable: String

  @JsName("EGroomOverrideType_MAX")
  public var Max: String
}

@JsName("HairLODSettings")
public open external class HairLodSettings {
  @JsName("CurveDecimation")
  public open var curveDecimation: Number

  @JsName("VertexDecimation")
  public open var vertexDecimation: Number

  @JsName("AngularThreshold")
  public open var angularThreshold: Number

  @JsName("ScreenSize")
  public open var screenSize: Number

  @JsName("ThicknessScale")
  public open var thicknessScale: Number

  @JsName("bVisible")
  public open var visible: Boolean

  @JsName("GeometryType")
  public open var geometryType: String

  @JsName("BindingType")
  public open var bindingType: String

  @JsName("Simulation")
  public open var simulation: String

  @JsName("GlobalInterpolation")
  public open var globalInterpolation: String

  public open fun clone(): HairLodSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairLodSettings

    @JsName("C")
    public fun copy(other: Any): HairLodSettings
  }
}

@JsName("HairGroupsLOD")
public open external class HairGroupsLod {
  @JsName("LODs")
  public open var loDs: Array<HairLodSettings>

  @JsName("ClusterWorldSize")
  public open var clusterWorldSize: Number

  @JsName("ClusterScreenSizeScale")
  public open var clusterScreenSizeScale: Number

  public open fun clone(): HairGroupsLod

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsLod

    @JsName("C")
    public fun copy(other: Any): HairGroupsLod
  }
}

@JsName("EHairCardsSourceType")
public external object HairCardsSourceType {
  public var Procedural: String

  public var Imported: String

  @JsName("EHairCardsSourceType_MAX")
  public var Max: String
}

@JsName("EHairCardsClusterType")
public external object HairCardsClusterType {
  public var Low: String

  public var High: String

  @JsName("EHairCardsClusterType_MAX")
  public var Max: String
}

public open external class HairCardsClusterSettings {
  @JsName("ClusterDecimation")
  public open var clusterDecimation: Number

  @JsName("Type")
  public open var type: String

  @JsName("bUseGuide")
  public open var useGuide: Boolean

  public open fun clone(): HairCardsClusterSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairCardsClusterSettings

    @JsName("C")
    public fun copy(other: Any): HairCardsClusterSettings
  }
}

@JsName("EHairCardsGenerationType")
public external object HairCardsGenerationType {
  public var CardsCount: String

  public var UseGuides: String

  @JsName("EHairCardsGenerationType_MAX")
  public var Max: String
}

public open external class HairCardsGeometrySettings {
  @JsName("GenerationType")
  public open var generationType: String

  @JsName("CardsCount")
  public open var cardsCount: Number

  @JsName("ClusterType")
  public open var clusterType: String

  @JsName("MinSegmentLength")
  public open var minSegmentLength: Number

  @JsName("AngularThreshold")
  public open var angularThreshold: Number

  @JsName("MinCardsLength")
  public open var minCardsLength: Number

  @JsName("MaxCardsLength")
  public open var maxCardsLength: Number

  public open fun clone(): HairCardsGeometrySettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairCardsGeometrySettings

    @JsName("C")
    public fun copy(other: Any): HairCardsGeometrySettings
  }
}

public open external class HairCardsTextureSettings {
  @JsName("AtlasMaxResolution")
  public open var atlasMaxResolution: Number

  @JsName("PixelPerCentimeters")
  public open var pixelPerCentimeters: Number

  @JsName("LengthTextureCount")
  public open var lengthTextureCount: Number

  @JsName("DensityTextureCount")
  public open var densityTextureCount: Number

  public open fun clone(): HairCardsTextureSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairCardsTextureSettings

    @JsName("C")
    public fun copy(other: Any): HairCardsTextureSettings
  }
}

public open external class HairGroupsProceduralCards {
  @JsName("ClusterSettings")
  public open var clusterSettings: HairCardsClusterSettings

  @JsName("GeometrySettings")
  public open var geometrySettings: HairCardsGeometrySettings

  @JsName("TextureSettings")
  public open var textureSettings: HairCardsTextureSettings

  @JsName("Version")
  public open var version: Number

  public open fun clone(): HairGroupsProceduralCards

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsProceduralCards

    @JsName("C")
    public fun copy(other: Any): HairGroupsProceduralCards
  }
}

public open external class HairGroupCardsTextures {
  @JsName("DepthTexture")
  public open var depthTexture: Texture2d

  @JsName("CoverageTexture")
  public open var coverageTexture: Texture2d

  @JsName("TangentTexture")
  public open var tangentTexture: Texture2d

  @JsName("AttributeTexture")
  public open var attributeTexture: Texture2d

  @JsName("AuxilaryDataTexture")
  public open var auxilaryDataTexture: Texture2d

  @JsName("MaterialTexture")
  public open var materialTexture: Texture2d

  public open fun clone(): HairGroupCardsTextures

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupCardsTextures

    @JsName("C")
    public fun copy(other: Any): HairGroupCardsTextures
  }
}

public open external class HairGroupCardsInfo {
  @JsName("NumCards")
  public open var numCards: Number

  @JsName("NumCardVertices")
  public open var numCardVertices: Number

  public open fun clone(): HairGroupCardsInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupCardsInfo

    @JsName("C")
    public fun copy(other: Any): HairGroupCardsInfo
  }
}

public open external class HairGroupsCardsSourceDescription {
  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("MaterialSlotName")
  public open var materialSlotName: String

  @JsName("SourceType")
  public open var sourceType: String

  @JsName("ProceduralMesh")
  public open var proceduralMesh: StaticMesh

  @JsName("ProceduralMeshKey")
  public open var proceduralMeshKey: String

  @JsName("ImportedMesh")
  public open var importedMesh: StaticMesh

  @JsName("ProceduralSettings")
  public open var proceduralSettings: HairGroupsProceduralCards

  @JsName("Textures")
  public open var textures: HairGroupCardsTextures

  @JsName("GroupIndex")
  public open var groupIndex: Number

  @JsName("LODIndex")
  public open var lodIndex: Number

  @JsName("CardsInfo")
  public open var cardsInfo: HairGroupCardsInfo

  @JsName("ImportedMeshKey")
  public open var importedMeshKey: String

  public open fun clone(): HairGroupsCardsSourceDescription

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsCardsSourceDescription

    @JsName("C")
    public fun copy(other: Any): HairGroupsCardsSourceDescription
  }
}

public open external class HairGroupsMeshesSourceDescription {
  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("MaterialSlotName")
  public open var materialSlotName: String

  @JsName("ImportedMesh")
  public open var importedMesh: StaticMesh

  @JsName("Textures")
  public open var textures: HairGroupCardsTextures

  @JsName("GroupIndex")
  public open var groupIndex: Number

  @JsName("LODIndex")
  public open var lodIndex: Number

  @JsName("ImportedMeshKey")
  public open var importedMeshKey: String

  public open fun clone(): HairGroupsMeshesSourceDescription

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsMeshesSourceDescription

    @JsName("C")
    public fun copy(other: Any): HairGroupsMeshesSourceDescription
  }
}

public open external class HairGroupsMaterial {
  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("SlotName")
  public open var slotName: String

  public open fun clone(): HairGroupsMaterial

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupsMaterial

    @JsName("C")
    public fun copy(other: Any): HairGroupsMaterial
  }
}

@JsName("EGroomInterpolationType")
public external object GroomInterpolationType {
  public var None: String

  public var RigidTransform: String

  public var OffsetTransform: String

  public var SmoothTransform: String

  @JsName("EGroomInterpolationType_MAX")
  public var Max: String
}

@JsName("EGroomBindingMeshType")
public external object GroomBindingMeshType {
  public var SkeletalMesh: String

  public var GeometryCache: String

  @JsName("EGroomBindingMeshType_MAX")
  public var Max: String
}

public open external class GoomBindingGroupInfo {
  @JsName("RenRootCount")
  public open var renRootCount: Number

  @JsName("RenLODCount")
  public open var renLodCount: Number

  @JsName("SimRootCount")
  public open var simRootCount: Number

  @JsName("SimLODCount")
  public open var simLodCount: Number

  public open fun clone(): GoomBindingGroupInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GoomBindingGroupInfo

    @JsName("C")
    public fun copy(other: Any): GoomBindingGroupInfo
  }
}

public open external class GroomBindingAsset(
  outer: UObject,
) : UObject {
  @JsName("GroomBindingType")
  public open var groomBindingType: String

  @JsName("Groom")
  public open var groom: GroomAsset

  @JsName("SourceSkeletalMesh")
  public open var sourceSkeletalMesh: SkeletalMesh

  @JsName("TargetSkeletalMesh")
  public open var targetSkeletalMesh: SkeletalMesh

  @JsName("SourceGeometryCache")
  public open var sourceGeometryCache: GeometryCache

  @JsName("TargetGeometryCache")
  public open var targetGeometryCache: GeometryCache

  @JsName("NumInterpolationPoints")
  public open var numInterpolationPoints: Number

  @JsName("MatchingSection")
  public open var matchingSection: Number

  @JsName("GroupInfos")
  public open var groupInfos: Array<GoomBindingGroupInfo>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomBindingAsset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomBindingAsset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomBindingAsset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomBindingAsset

    @JsName("C")
    public fun copy(other: UObject): GroomBindingAsset

    @JsName("C")
    public fun copy(other: Any): GroomBindingAsset
  }
}

public open external class GroomAsset(
  outer: UObject,
) : UObject {
  @JsName("HairGroupsInfo")
  public open var hairGroupsInfo: Array<HairGroupInfoWithVisibility>

  @JsName("HairGroupsRendering")
  public open var hairGroupsRendering: Array<HairGroupsRendering>

  @JsName("HairGroupsPhysics")
  public open var hairGroupsPhysics: Array<HairGroupsPhysics>

  @JsName("HairGroupsInterpolation")
  public open var hairGroupsInterpolation: Array<HairGroupsInterpolation>

  @JsName("HairGroupsLOD")
  public open var hairGroupsLod: Array<HairGroupsLod>

  @JsName("HairGroupsCards")
  public open var hairGroupsCards: Array<HairGroupsCardsSourceDescription>

  @JsName("HairGroupsMeshes")
  public open var hairGroupsMeshes: Array<HairGroupsMeshesSourceDescription>

  @JsName("HairGroupsMaterials")
  public open var hairGroupsMaterials: Array<HairGroupsMaterial>

  @JsName("EnableGlobalInterpolation")
  public open var enableGlobalInterpolation: Boolean

  @JsName("HairInterpolationType")
  public open var hairInterpolationType: String

  @JsName("MinLOD")
  public open var minLod: PerPlatformInt

  @JsName("DisableBelowMinLodStripping")
  public open var disableBelowMinLodStripping: PerPlatformBool

  @JsName("EffectiveLODBias")
  public open var effectiveLodBias: Array<Number>

  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  @JsName("AssetUserData")
  public open var assetUserData: Array<AssetUserData>

  @JsName("CreateNewGeometryCacheGroomBindingAsset")
  public open fun createNewGeometryCacheGroomBindingAsset(
    geometryCache: GeometryCache,
    numInterpolationPoints: Number,
    sourceGeometryCacheForTransfer: GeometryCache,
    matchingSection: Number,
  ): GroomBindingAsset

  @JsName("CreateNewGroomBindingAsset")
  public open fun createNewGroomBindingAsset(
    inSkeletalMesh: SkeletalMesh,
    inNumInterpolationPoints: Number,
    inSourceSkeletalMeshForTransfer: SkeletalMesh,
    inMatchingSection: Number,
  ): GroomBindingAsset

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomAsset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomAsset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomAsset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomAsset

    @JsName("C")
    public fun copy(other: UObject): GroomAsset

    @JsName("C")
    public fun copy(other: Any): GroomAsset

    @JsName("CreateNewGeometryCacheGroomBindingAsset")
    public fun createNewGeometryCacheGroomBindingAsset(
      groomAsset: GroomAsset,
      geometryCache: GeometryCache,
      numInterpolationPoints: Number,
      sourceGeometryCacheForTransfer: GeometryCache,
      matchingSection: Number,
    ): GroomBindingAsset

    @JsName("CreateNewGroomBindingAsset")
    public fun createNewGroomBindingAsset(
      inGroomAsset: GroomAsset,
      inSkeletalMesh: SkeletalMesh,
      inNumInterpolationPoints: Number,
      inSourceSkeletalMeshForTransfer: SkeletalMesh,
      inMatchingSection: Number,
    ): GroomBindingAsset
  }
}

@JsName("EGroomCacheType")
public external object GroomCacheType {
  public var None: String

  public var Strands: String

  public var Guides: String

  @JsName("EGroomCacheType_MAX")
  public var Max: String
}

@JsName("EGroomCacheAttributes")
public external object GroomCacheAttributes {
  public var None: String

  public var Position: String

  public var Width: String

  public var Color: String

  public var PositionWidth: String

  public var PositionColor: String

  public var WidthColor: String

  public var PositionWidthColor: String

  @JsName("EGroomCacheAttributes_MAX")
  public var Max: String
}

public open external class GroomAnimationInfo {
  @JsName("NumFrames")
  public open var numFrames: Any

  @JsName("SecondsPerFrame")
  public open var secondsPerFrame: Number

  @JsName("Duration")
  public open var duration: Number

  @JsName("StartTime")
  public open var startTime: Number

  @JsName("EndTime")
  public open var endTime: Number

  @JsName("StartFrame")
  public open var startFrame: Number

  @JsName("EndFrame")
  public open var endFrame: Number

  @JsName("Attributes")
  public open var attributes: String

  public open fun clone(): GroomAnimationInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GroomAnimationInfo

    @JsName("C")
    public fun copy(other: Any): GroomAnimationInfo
  }
}

public open external class GroomCacheInfo {
  @JsName("Version")
  public open var version: Number

  @JsName("Type")
  public open var type: String

  @JsName("AnimationInfo")
  public open var animationInfo: GroomAnimationInfo

  public open fun clone(): GroomCacheInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GroomCacheInfo

    @JsName("C")
    public fun copy(other: Any): GroomCacheInfo
  }
}

public open external class GroomCache(
  outer: UObject,
) : UObject {
  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  @JsName("GroomCacheInfo")
  public open var groomCacheInfo: GroomCacheInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCache

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCache

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCache

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCache

    @JsName("C")
    public fun copy(other: UObject): GroomCache

    @JsName("C")
    public fun copy(other: Any): GroomCache
  }
}

public open external class HairSimulationSetup {
  @JsName("bResetSimulation")
  public open var resetSimulation: Boolean

  @JsName("bDebugSimulation")
  public open var debugSimulation: Boolean

  @JsName("bLocalSimulation")
  public open var localSimulation: Boolean

  @JsName("LinearVelocityScale")
  public open var linearVelocityScale: Number

  @JsName("AngularVelocityScale")
  public open var angularVelocityScale: Number

  @JsName("LocalBone")
  public open var localBone: String

  @JsName("TeleportDistance")
  public open var teleportDistance: Number

  public open fun clone(): HairSimulationSetup

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSimulationSetup

    @JsName("C")
    public fun copy(other: Any): HairSimulationSetup
  }
}

public open external class HairSimulationSolver {
  @JsName("bEnableSimulation")
  public open var enableSimulation: Boolean

  public open fun clone(): HairSimulationSolver

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSimulationSolver

    @JsName("C")
    public fun copy(other: Any): HairSimulationSolver
  }
}

public open external class HairSimulationForces {
  @JsName("GravityVector")
  public open var gravityVector: Vector

  @JsName("AirDrag")
  public open var airDrag: Number

  @JsName("AirVelocity")
  public open var airVelocity: Vector

  public open fun clone(): HairSimulationForces

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSimulationForces

    @JsName("C")
    public fun copy(other: Any): HairSimulationForces
  }
}

public open external class HairSimulationConstraints {
  @JsName("BendDamping")
  public open var bendDamping: Number

  @JsName("BendStiffness")
  public open var bendStiffness: Number

  @JsName("StretchDamping")
  public open var stretchDamping: Number

  @JsName("StretchStiffness")
  public open var stretchStiffness: Number

  @JsName("StaticFriction")
  public open var staticFriction: Number

  @JsName("KineticFriction")
  public open var kineticFriction: Number

  @JsName("StrandsViscosity")
  public open var strandsViscosity: Number

  @JsName("CollisionRadius")
  public open var collisionRadius: Number

  public open fun clone(): HairSimulationConstraints

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSimulationConstraints

    @JsName("C")
    public fun copy(other: Any): HairSimulationConstraints
  }
}

public open external class HairSimulationSettings {
  @JsName("bOverrideSettings")
  public open var overrideSettings: Boolean

  @JsName("SimulationSetup")
  public open var simulationSetup: HairSimulationSetup

  @JsName("SolverSettings")
  public open var solverSettings: HairSimulationSolver

  @JsName("ExternalForces")
  public open var externalForces: HairSimulationForces

  @JsName("MaterialConstraints")
  public open var materialConstraints: HairSimulationConstraints

  public open fun clone(): HairSimulationSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairSimulationSettings

    @JsName("C")
    public fun copy(other: Any): HairSimulationSettings
  }
}

public open external class HairGroupDesc {
  @JsName("HairLength")
  public open var hairLength: Number

  @JsName("HairWidth")
  public open var hairWidth: Number

  @JsName("HairWidth_Override")
  public open var hairWidthOverride: Boolean

  @JsName("HairRootScale")
  public open var hairRootScale: Number

  @JsName("HairRootScale_Override")
  public open var hairRootScaleOverride: Boolean

  @JsName("HairTipScale")
  public open var hairTipScale: Number

  @JsName("HairTipScale_Override")
  public open var hairTipScaleOverride: Boolean

  @JsName("HairShadowDensity")
  public open var hairShadowDensity: Number

  @JsName("HairShadowDensity_Override")
  public open var hairShadowDensityOverride: Boolean

  @JsName("HairRaytracingRadiusScale")
  public open var hairRaytracingRadiusScale: Number

  @JsName("HairRaytracingRadiusScale_Override")
  public open var hairRaytracingRadiusScaleOverride: Boolean

  @JsName("bUseHairRaytracingGeometry")
  public open var useHairRaytracingGeometry: Boolean

  @JsName("bUseHairRaytracingGeometry_Override")
  public open var useHairRaytracingGeometryOverride: Boolean

  @JsName("LODBias")
  public open var lodBias: Number

  @JsName("bUseStableRasterization")
  public open var useStableRasterization: Boolean

  @JsName("bUseStableRasterization_Override")
  public open var useStableRasterizationOverride: Boolean

  @JsName("bScatterSceneLighting")
  public open var scatterSceneLighting: Boolean

  @JsName("bScatterSceneLighting_Override")
  public open var scatterSceneLightingOverride: Boolean

  @JsName("bSupportVoxelization")
  public open var supportVoxelization: Boolean

  @JsName("bSupportVoxelization_Override")
  public open var supportVoxelizationOverride: Boolean

  @JsName("HairLengthScale")
  public open var hairLengthScale: Number

  @JsName("HairLengthScale_Override")
  public open var hairLengthScaleOverride: Boolean

  public open fun clone(): HairGroupDesc

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HairGroupDesc

    @JsName("C")
    public fun copy(other: Any): HairGroupDesc
  }
}

public open external class GroomComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("GroomAsset")
  public open var groomAsset: GroomAsset

  @JsName("GroomCache")
  public open var groomCache: GroomCache

  @JsName("NiagaraComponents")
  public open var niagaraComponents: Array<NiagaraComponent>

  @JsName("SourceSkeletalMesh")
  public open var sourceSkeletalMesh: SkeletalMesh

  @JsName("BindingAsset")
  public open var bindingAsset: GroomBindingAsset

  @JsName("PhysicsAsset")
  public open var physicsAsset: PhysicsAsset

  @JsName("SimulationSettings")
  public open var simulationSettings: HairSimulationSettings

  @JsName("Strands_DebugMaterial")
  public open var strandsDebugMaterial: MaterialInterface

  @JsName("Strands_DefaultMaterial")
  public open var strandsDefaultMaterial: MaterialInterface

  @JsName("Cards_DefaultMaterial")
  public open var cardsDefaultMaterial: MaterialInterface

  @JsName("Meshes_DefaultMaterial")
  public open var meshesDefaultMaterial: MaterialInterface

  @JsName("AngularSpringsSystem")
  public open var angularSpringsSystem: NiagaraSystem

  @JsName("CosseratRodsSystem")
  public open var cosseratRodsSystem: NiagaraSystem

  @JsName("AttachmentName")
  public open var attachmentName: String

  @JsName("GroomGroupsDesc")
  public open var groomGroupsDesc: Array<HairGroupDesc>

  @JsName("bUseCards")
  public open var useCards: Boolean

  @JsName("bRunning")
  public open var running: Boolean

  @JsName("bLooping")
  public open var looping: Boolean

  @JsName("bManualTick")
  public open var manualTick: Boolean

  @JsName("ElapsedTime")
  public open var elapsedTime: Number

  @JsName("GroomAssetBeingLoaded")
  public open var groomAssetBeingLoaded: GroomAsset

  @JsName("BindingAssetBeingLoaded")
  public open var bindingAssetBeingLoaded: GroomBindingAsset

  @JsName("SetPhysicsAsset")
  public open fun setPhysicsAsset(inPhysicsAsset: PhysicsAsset): Unit

  @JsName("SetHairLengthScaleEnable")
  public open fun setHairLengthScaleEnable(enable: Boolean): Unit

  @JsName("SetHairLengthScale")
  public open fun setHairLengthScale(scale: Number): Unit

  @JsName("SetGroomAsset")
  public open fun setGroomAsset(asset: GroomAsset): Unit

  @JsName("SetEnableSimulation")
  public open fun setEnableSimulation(inEnableSimulation: Boolean): Unit

  @JsName("SetBindingAsset")
  public open fun setBindingAsset(inBinding: GroomBindingAsset): Unit

  @JsName("ResetSimulation")
  public open fun resetSimulation(): Unit

  @JsName("ResetCollisionComponents")
  public open fun resetCollisionComponents(): Unit

  @JsName("GetIsHairLengthScaleEnabled")
  public open fun getIsHairLengthScaleEnabled(): Boolean

  @JsName("AddCollisionComponent")
  public open fun addCollisionComponent(skeletalMeshComponent: SkeletalMeshComponent): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomComponent

    @JsName("C")
    public fun copy(other: UObject): GroomComponent

    @JsName("C")
    public fun copy(other: Any): GroomComponent
  }
}

public open external class GroomActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("GroomComponent")
  public open var groomComponent: GroomComponent

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomActor

    @JsName("C")
    public fun copy(other: UObject): GroomActor

    @JsName("C")
    public fun copy(other: Any): GroomActor
  }
}

public open external class GroomConversionSettings {
  @JsName("Rotation")
  public open var rotation: Vector

  @JsName("Scale")
  public open var scale: Vector

  public open fun clone(): GroomConversionSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GroomConversionSettings

    @JsName("C")
    public fun copy(other: Any): GroomConversionSettings
  }
}

public open external class GroomImportOptions(
  outer: UObject,
) : UObject {
  @JsName("ConversionSettings")
  public open var conversionSettings: GroomConversionSettings

  @JsName("InterpolationSettings")
  public open var interpolationSettings: Array<HairGroupsInterpolation>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomImportOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomImportOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomImportOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomImportOptions

    @JsName("C")
    public fun copy(other: UObject): GroomImportOptions

    @JsName("C")
    public fun copy(other: Any): GroomImportOptions
  }
}

public open external class GroomAssetImportData(
  outer: UObject,
) : AssetImportData {
  @JsName("ImportOptions")
  public open var importOptions: GroomImportOptions

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomAssetImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomAssetImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomAssetImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomAssetImportData

    @JsName("C")
    public fun copy(other: UObject): GroomAssetImportData

    @JsName("C")
    public fun copy(other: Any): GroomAssetImportData
  }
}

public open external class GroomBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomBlueprintLibrary

    @JsName("CreateNewGroomBindingAssetWithPath")
    public fun createNewGroomBindingAssetWithPath(
      inDesiredPackagePath: String,
      inGroomAsset: GroomAsset,
      inSkeletalMesh: SkeletalMesh,
      inNumInterpolationPoints: Number,
      inSourceSkeletalMeshForTransfer: SkeletalMesh,
      inMatchingSection: Number,
    ): GroomBindingAsset

    @JsName("CreateNewGroomBindingAsset")
    public fun createNewGroomBindingAsset(
      inGroomAsset: GroomAsset,
      inSkeletalMesh: SkeletalMesh,
      inNumInterpolationPoints: Number,
      inSourceSkeletalMeshForTransfer: SkeletalMesh,
      inMatchingSection: Number,
    ): GroomBindingAsset

    @JsName("CreateNewGeometryCacheGroomBindingAssetWithPath")
    public fun createNewGeometryCacheGroomBindingAssetWithPath(
      desiredPackagePath: String,
      groomAsset: GroomAsset,
      geometryCache: GeometryCache,
      numInterpolationPoints: Number,
      sourceGeometryCacheForTransfer: GeometryCache,
      matchingSection: Number,
    ): GroomBindingAsset

    @JsName("CreateNewGeometryCacheGroomBindingAsset")
    public fun createNewGeometryCacheGroomBindingAsset(
      groomAsset: GroomAsset,
      geometryCache: GeometryCache,
      numInterpolationPoints: Number,
      sourceGeometryCacheForTransfer: GeometryCache,
      matchingSection: Number,
    ): GroomBindingAsset

    @JsName("C")
    public fun copy(other: UObject): GroomBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): GroomBlueprintLibrary
  }
}

public open external class GroomCacheImportSettings {
  @JsName("bImportGroomCache")
  public open var importGroomCache: Boolean

  @JsName("FrameStart")
  public open var frameStart: Number

  @JsName("FrameEnd")
  public open var frameEnd: Number

  @JsName("bSkipEmptyFrames")
  public open var skipEmptyFrames: Boolean

  @JsName("bImportGroomAsset")
  public open var importGroomAsset: Boolean

  @JsName("GroomAsset")
  public open var groomAsset: SoftObjectPath

  public open fun clone(): GroomCacheImportSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GroomCacheImportSettings

    @JsName("C")
    public fun copy(other: Any): GroomCacheImportSettings
  }
}

public open external class GroomCacheImportOptions(
  outer: UObject,
) : UObject {
  @JsName("ImportSettings")
  public open var importSettings: GroomCacheImportSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCacheImportOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCacheImportOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCacheImportOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCacheImportOptions

    @JsName("C")
    public fun copy(other: UObject): GroomCacheImportOptions

    @JsName("C")
    public fun copy(other: Any): GroomCacheImportOptions
  }
}

public open external class GroomCacheImportData(
  outer: UObject,
) : AssetImportData {
  @JsName("Settings")
  public open var settings: GroomCacheImportSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCacheImportData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCacheImportData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCacheImportData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCacheImportData

    @JsName("C")
    public fun copy(other: UObject): GroomCacheImportData

    @JsName("C")
    public fun copy(other: Any): GroomCacheImportData
  }
}

public open external class GroomCreateBindingOptions(
  outer: UObject,
) : UObject {
  @JsName("GroomBindingType")
  public open var groomBindingType: String

  @JsName("SourceSkeletalMesh")
  public open var sourceSkeletalMesh: SkeletalMesh

  @JsName("TargetSkeletalMesh")
  public open var targetSkeletalMesh: SkeletalMesh

  @JsName("SourceGeometryCache")
  public open var sourceGeometryCache: GeometryCache

  @JsName("TargetGeometryCache")
  public open var targetGeometryCache: GeometryCache

  @JsName("NumInterpolationPoints")
  public open var numInterpolationPoints: Number

  @JsName("MatchingSection")
  public open var matchingSection: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCreateBindingOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCreateBindingOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCreateBindingOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCreateBindingOptions

    @JsName("C")
    public fun copy(other: UObject): GroomCreateBindingOptions

    @JsName("C")
    public fun copy(other: Any): GroomCreateBindingOptions
  }
}

@JsName("EFollicleMaskChannel")
public external object FollicleMaskChannel {
  @JsName("R")
  public var r: String

  @JsName("G")
  public var g: String

  @JsName("B")
  public var b: String

  @JsName("A")
  public var a: String

  @JsName("EFollicleMaskChannel_MAX")
  public var Max: String
}

public open external class FollicleMaskOptions {
  @JsName("Groom")
  public open var groom: GroomAsset

  @JsName("Channel")
  public open var channel: String

  public open fun clone(): FollicleMaskOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FollicleMaskOptions

    @JsName("C")
    public fun copy(other: Any): FollicleMaskOptions
  }
}

public open external class GroomCreateFollicleMaskOptions(
  outer: UObject,
) : UObject {
  @JsName("Resolution")
  public open var resolution: Number

  @JsName("RootRadius")
  public open var rootRadius: Number

  @JsName("Grooms")
  public open var grooms: Array<FollicleMaskOptions>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCreateFollicleMaskOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCreateFollicleMaskOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCreateFollicleMaskOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCreateFollicleMaskOptions

    @JsName("C")
    public fun copy(other: UObject): GroomCreateFollicleMaskOptions

    @JsName("C")
    public fun copy(other: Any): GroomCreateFollicleMaskOptions
  }
}

@JsName("EStrandsTexturesTraceType")
public external object StrandsTexturesTraceType {
  @JsName("TraceInside")
  public var Inside: String

  @JsName("TraceOuside")
  public var Ouside: String

  @JsName("TraceBidirectional")
  public var Bidirectional: String

  @JsName("EStrandsTexturesTraceType_MAX")
  public var Max: String
}

@JsName("EStrandsTexturesMeshType")
public external object StrandsTexturesMeshType {
  public var Static: String

  public var Skeletal: String

  @JsName("EStrandsTexturesMeshType_MAX")
  public var Max: String
}

public open external class GroomCreateStrandsTexturesOptions(
  outer: UObject,
) : UObject {
  @JsName("Resolution")
  public open var resolution: Number

  @JsName("TraceType")
  public open var traceType: String

  @JsName("TraceDistance")
  public open var traceDistance: Number

  @JsName("MeshType")
  public open var meshType: String

  @JsName("StaticMesh")
  public open var staticMesh: StaticMesh

  @JsName("SkeletalMesh")
  public open var skeletalMesh: SkeletalMesh

  @JsName("LODIndex")
  public open var lodIndex: Number

  @JsName("SectionIndex")
  public open var sectionIndex: Number

  @JsName("UVChannelIndex")
  public open var uvChannelIndex: Number

  @JsName("GroupIndex")
  public open var groupIndex: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomCreateStrandsTexturesOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomCreateStrandsTexturesOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomCreateStrandsTexturesOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomCreateStrandsTexturesOptions

    @JsName("C")
    public fun copy(other: UObject): GroomCreateStrandsTexturesOptions

    @JsName("C")
    public fun copy(other: Any): GroomCreateStrandsTexturesOptions
  }
}

public open external class GroomHairGroupPreview {
  @JsName("GroupName")
  public open var groupName: String

  @JsName("GroupID")
  public open var groupId: Number

  @JsName("CurveCount")
  public open var curveCount: Number

  @JsName("GuideCount")
  public open var guideCount: Number

  @JsName("bHasPrecomputedWeights")
  public open var hasPrecomputedWeights: Boolean

  @JsName("InterpolationSettings")
  public open var interpolationSettings: HairGroupsInterpolation

  public open fun clone(): GroomHairGroupPreview

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GroomHairGroupPreview

    @JsName("C")
    public fun copy(other: Any): GroomHairGroupPreview
  }
}

public open external class GroomHairGroupsPreview(
  outer: UObject,
) : UObject {
  @JsName("Groups")
  public open var groups: Array<GroomHairGroupPreview>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomHairGroupsPreview

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomHairGroupsPreview

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomHairGroupsPreview

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomHairGroupsPreview

    @JsName("C")
    public fun copy(other: UObject): GroomHairGroupsPreview

    @JsName("C")
    public fun copy(other: Any): GroomHairGroupsPreview
  }
}

public open external class GroomPluginSettings(
  outer: UObject,
) : UObject {
  @JsName("GroomCacheLookAheadBuffer")
  public open var groomCacheLookAheadBuffer: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroomPluginSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroomPluginSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroomPluginSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroomPluginSettings

    @JsName("C")
    public fun copy(other: UObject): GroomPluginSettings

    @JsName("C")
    public fun copy(other: Any): GroomPluginSettings
  }
}

public open external class MovieSceneGroomCacheParams {
  @JsName("GroomCache")
  public open var groomCache: GroomCache

  @JsName("FirstLoopStartFrameOffset")
  public open var firstLoopStartFrameOffset: FrameNumber

  @JsName("StartFrameOffset")
  public open var startFrameOffset: FrameNumber

  @JsName("EndFrameOffset")
  public open var endFrameOffset: FrameNumber

  @JsName("PlayRate")
  public open var playRate: Number

  @JsName("bReverse")
  public open var reverse: Boolean

  public open fun clone(): MovieSceneGroomCacheParams

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): MovieSceneGroomCacheParams

    @JsName("C")
    public fun copy(other: Any): MovieSceneGroomCacheParams
  }
}

public open external class MovieSceneGroomCacheSection(
  outer: UObject,
) : MovieSceneSection {
  @JsName("Params")
  public open var params: MovieSceneGroomCacheParams

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneGroomCacheSection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneGroomCacheSection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneGroomCacheSection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneGroomCacheSection

    @JsName("C")
    public fun copy(other: UObject): MovieSceneGroomCacheSection

    @JsName("C")
    public fun copy(other: Any): MovieSceneGroomCacheSection
  }
}

public open external class MovieSceneGroomCacheTrack(
  outer: UObject,
) : MovieSceneNameableTrack {
  @JsName("AnimationSections")
  public open var animationSections: Array<MovieSceneSection>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneGroomCacheTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneGroomCacheTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneGroomCacheTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneGroomCacheTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneGroomCacheTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneGroomCacheTrack
  }
}

public open external class NiagaraDataInterfaceHairStrands(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("DefaultSource")
  public open var defaultSource: GroomAsset

  @JsName("SourceActor")
  public open var sourceActor: Actor

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceHairStrands

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceHairStrands

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceHairStrands

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceHairStrands

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceHairStrands

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceHairStrands
  }
}

public open external class NiagaraDataInterfacePhysicsAsset(
  outer: UObject,
) : NiagaraDataInterface {
  @JsName("DefaultSource")
  public open var defaultSource: PhysicsAsset

  @JsName("SourceActor")
  public open var sourceActor: Actor

  @JsName("MeshUserParameter")
  public open var meshUserParameter: NiagaraUserParameterBinding

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfacePhysicsAsset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfacePhysicsAsset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfacePhysicsAsset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfacePhysicsAsset

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfacePhysicsAsset

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfacePhysicsAsset
  }
}

public open external class NiagaraDataInterfaceVelocityGrid(
  outer: UObject,
) : NiagaraDataInterfaceRwBase {
  @JsName("GridSize")
  public open var gridSize: IntVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfaceVelocityGrid

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfaceVelocityGrid

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfaceVelocityGrid

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfaceVelocityGrid

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfaceVelocityGrid

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfaceVelocityGrid
  }
}

public open external class NiagaraDataInterfacePressureGrid(
  outer: UObject,
) : NiagaraDataInterfaceVelocityGrid {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDataInterfacePressureGrid

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDataInterfacePressureGrid

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDataInterfacePressureGrid

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDataInterfacePressureGrid

    @JsName("C")
    public fun copy(other: UObject): NiagaraDataInterfacePressureGrid

    @JsName("C")
    public fun copy(other: Any): NiagaraDataInterfacePressureGrid
  }
}

public open external class ChaosDebugDrawComponent(
  outer: UObject,
) : ActorComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosDebugDrawComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosDebugDrawComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosDebugDrawComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosDebugDrawComponent

    @JsName("C")
    public fun copy(other: UObject): ChaosDebugDrawComponent

    @JsName("C")
    public fun copy(other: Any): ChaosDebugDrawComponent
  }
}

public open external class ChaosNotifyHandlerInterface(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosNotifyHandlerInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosNotifyHandlerInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosNotifyHandlerInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosNotifyHandlerInterface

    @JsName("C")
    public fun copy(other: UObject): ChaosNotifyHandlerInterface

    @JsName("C")
    public fun copy(other: Any): ChaosNotifyHandlerInterface
  }
}

public open external class ChaosPhysicsCollisionInfo {
  @JsName("Component")
  public open var component: PrimitiveComponent

  @JsName("OtherComponent")
  public open var otherComponent: PrimitiveComponent

  @JsName("Location")
  public open var location: Vector

  @JsName("Normal")
  public open var normal: Vector

  @JsName("AccumulatedImpulse")
  public open var accumulatedImpulse: Vector

  @JsName("Velocity")
  public open var velocity: Vector

  @JsName("OtherVelocity")
  public open var otherVelocity: Vector

  @JsName("AngularVelocity")
  public open var angularVelocity: Vector

  @JsName("OtherAngularVelocity")
  public open var otherAngularVelocity: Vector

  @JsName("Mass")
  public open var mass: Number

  @JsName("OtherMass")
  public open var otherMass: Number

  public open fun clone(): ChaosPhysicsCollisionInfo

  @JsName("ConvertPhysicsCollisionToHitResult")
  public open fun convertPhysicsCollisionToHitResult(): HitResult

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ChaosPhysicsCollisionInfo

    @JsName("C")
    public fun copy(other: Any): ChaosPhysicsCollisionInfo

    @JsName("ConvertPhysicsCollisionToHitResult")
    public fun convertPhysicsCollisionToHitResult(physicsCollision: ChaosPhysicsCollisionInfo):
        HitResult
  }
}

public open external class ChaosSolverEngineBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosSolverEngineBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosSolverEngineBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosSolverEngineBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosSolverEngineBlueprintLibrary

    @JsName("ConvertPhysicsCollisionToHitResult")
    public fun convertPhysicsCollisionToHitResult(physicsCollision: ChaosPhysicsCollisionInfo):
        HitResult

    @JsName("C")
    public fun copy(other: UObject): ChaosSolverEngineBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): ChaosSolverEngineBlueprintLibrary
  }
}

public open external class ChaosSolver(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosSolver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosSolver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosSolver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosSolver

    @JsName("C")
    public fun copy(other: UObject): ChaosSolver

    @JsName("C")
    public fun copy(other: Any): ChaosSolver
  }
}

public open external class ChaosSolverSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("DefaultChaosSolverActorClass")
  public open var defaultChaosSolverActorClass: SoftClassPath

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ChaosSolverSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ChaosSolverSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ChaosSolverSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ChaosSolverSettings

    @JsName("C")
    public fun copy(other: UObject): ChaosSolverSettings

    @JsName("C")
    public fun copy(other: Any): ChaosSolverSettings
  }
}

public open external class FieldSystem(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystem

    @JsName("C")
    public fun copy(other: UObject): FieldSystem

    @JsName("C")
    public fun copy(other: Any): FieldSystem
  }
}

public open external class FieldNodeBase(
  outer: UObject,
) : ActorComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldNodeBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldNodeBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldNodeBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldNodeBase

    @JsName("C")
    public fun copy(other: UObject): FieldNodeBase

    @JsName("C")
    public fun copy(other: Any): FieldNodeBase
  }
}

public open external class FieldSystemMetaData(
  outer: UObject,
) : ActorComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystemMetaData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystemMetaData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemMetaData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemMetaData

    @JsName("C")
    public fun copy(other: UObject): FieldSystemMetaData

    @JsName("C")
    public fun copy(other: Any): FieldSystemMetaData
  }
}

public open external class FieldObjectCommands {
  @JsName("TargetNames")
  public open var targetNames: Array<String>

  @JsName("RootNodes")
  public open var rootNodes: Array<FieldNodeBase>

  @JsName("MetaDatas")
  public open var metaDatas: Array<FieldSystemMetaData>

  public open fun clone(): FieldObjectCommands

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FieldObjectCommands

    @JsName("C")
    public fun copy(other: Any): FieldObjectCommands
  }
}

@JsName("EFieldPhysicsType")
public external object FieldPhysicsType {
  @JsName("Field_None")
  public var None: String

  @JsName("Field_DynamicState")
  public var DynamicState: String

  @JsName("Field_LinearForce")
  public var LinearForce: String

  @JsName("Field_ExternalClusterStrain")
  public var ExternalClusterStrain: String

  @JsName("Field_Kill")
  public var Kill: String

  @JsName("Field_LinearVelocity")
  public var LinearVelocity: String

  @JsName("Field_AngularVelociy")
  public var AngularVelociy: String

  @JsName("Field_AngularTorque")
  public var AngularTorque: String

  @JsName("Field_InternalClusterStrain")
  public var InternalClusterStrain: String

  @JsName("Field_DisableThreshold")
  public var DisableThreshold: String

  @JsName("Field_SleepingThreshold")
  public var SleepingThreshold: String

  @JsName("Field_PositionStatic")
  public var PositionStatic: String

  @JsName("Field_PositionAnimated")
  public var PositionAnimated: String

  @JsName("Field_PositionTarget")
  public var PositionTarget: String

  @JsName("Field_DynamicConstraint")
  public var DynamicConstraint: String

  @JsName("Field_CollisionGroup")
  public var CollisionGroup: String

  @JsName("Field_ActivateDisabled")
  public var ActivateDisabled: String

  @JsName("Field_InitialLinearVelocity")
  public var InitialLinearVelocity: String

  @JsName("Field_InitialAngularVelocity")
  public var InitialAngularVelocity: String

  @JsName("Field_PhysicsType_Max")
  public var PhysicsTypeMax: String
}

public open external class FieldSystemComponent(
  outer: UObject,
) : PrimitiveComponent {
  @JsName("FieldSystem")
  public open var fieldSystem: FieldSystem

  @JsName("bIsWorldField")
  public open var isWorldField: Boolean

  @JsName("bIsChaosField")
  public open var isChaosField: Boolean

  @JsName("SupportedSolvers")
  public open var supportedSolvers: Array<ChaosSolverActor>

  @JsName("ConstructionCommands")
  public open var constructionCommands: FieldObjectCommands

  @JsName("BufferCommands")
  public open var bufferCommands: FieldObjectCommands

  @JsName("ResetFieldSystem")
  public open fun resetFieldSystem(): Unit

  @JsName("RemovePersistentFields")
  public open fun removePersistentFields(): Unit

  @JsName("ApplyUniformVectorFalloffForce")
  public open fun applyUniformVectorFalloffForce(
    enabled: Boolean,
    position: Vector,
    direction: Vector,
    radius: Number,
    magnitude: Number,
  ): Unit

  @JsName("ApplyStrainField")
  public open fun applyStrainField(
    enabled: Boolean,
    position: Vector,
    radius: Number,
    magnitude: Number,
    iterations: Number,
  ): Unit

  @JsName("ApplyStayDynamicField")
  public open fun applyStayDynamicField(
    enabled: Boolean,
    position: Vector,
    radius: Number,
  ): Unit

  @JsName("ApplyRadialVectorFalloffForce")
  public open fun applyRadialVectorFalloffForce(
    enabled: Boolean,
    position: Vector,
    radius: Number,
    magnitude: Number,
  ): Unit

  @JsName("ApplyRadialForce")
  public open fun applyRadialForce(
    enabled: Boolean,
    position: Vector,
    magnitude: Number,
  ): Unit

  @JsName("ApplyPhysicsField")
  public open fun applyPhysicsField(
    enabled: Boolean,
    target: String,
    metaData: FieldSystemMetaData,
    field: FieldNodeBase,
  ): Unit

  @JsName("ApplyLinearForce")
  public open fun applyLinearForce(
    enabled: Boolean,
    direction: Vector,
    magnitude: Number,
  ): Unit

  @JsName("AddPersistentField")
  public open fun addPersistentField(
    enabled: Boolean,
    target: String,
    metaData: FieldSystemMetaData,
    field: FieldNodeBase,
  ): Unit

  @JsName("AddFieldCommand")
  public open fun addFieldCommand(
    enabled: Boolean,
    target: String,
    metaData: FieldSystemMetaData,
    field: FieldNodeBase,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystemComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystemComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemComponent

    @JsName("C")
    public fun copy(other: UObject): FieldSystemComponent

    @JsName("C")
    public fun copy(other: Any): FieldSystemComponent
  }
}

public open external class FieldSystemActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("FieldSystemComponent")
  public open var fieldSystemComponent: FieldSystemComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemActor

    @JsName("C")
    public fun copy(other: UObject): FieldSystemActor

    @JsName("C")
    public fun copy(other: Any): FieldSystemActor
  }
}

public open external class FieldSystemMetaDataIteration(
  outer: UObject,
) : FieldSystemMetaData {
  @JsName("Iterations")
  public open var iterations: Number

  @JsName("SetMetaDataIteration")
  public open fun setMetaDataIteration(iterations: Number): FieldSystemMetaDataIteration

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystemMetaDataIteration

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystemMetaDataIteration

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemMetaDataIteration

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemMetaDataIteration

    @JsName("C")
    public fun copy(other: UObject): FieldSystemMetaDataIteration

    @JsName("C")
    public fun copy(other: Any): FieldSystemMetaDataIteration
  }
}

@JsName("EFieldResolutionType")
public external object FieldResolutionType {
  @JsName("Field_Resolution_Minimal")
  public var Minimal: String

  @JsName("Field_Resolution_DisabledParents")
  public var DisabledParents: String

  @JsName("Field_Resolution_Maximum")
  public var Maximum: String

  @JsName("Field_Resolution_Max")
  public var Max: String
}

public open external class FieldSystemMetaDataProcessingResolution(
  outer: UObject,
) : FieldSystemMetaData {
  @JsName("ResolutionType")
  public open var resolutionType: String

  @JsName("SetMetaDataaProcessingResolutionType")
  public open fun setMetaDataaProcessingResolutionType(resolutionType: String):
      FieldSystemMetaDataProcessingResolution

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystemMetaDataProcessingResolution

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystemMetaDataProcessingResolution

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemMetaDataProcessingResolution

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemMetaDataProcessingResolution

    @JsName("C")
    public fun copy(other: UObject): FieldSystemMetaDataProcessingResolution

    @JsName("C")
    public fun copy(other: Any): FieldSystemMetaDataProcessingResolution
  }
}

@JsName("EFieldFilterType")
public external object FieldFilterType {
  @JsName("Field_Filter_Dynamic")
  public var Dynamic: String

  @JsName("Field_Filter_Kinematic")
  public var Kinematic: String

  @JsName("Field_Filter_Static")
  public var Static: String

  @JsName("Field_Filter_All")
  public var All: String

  @JsName("Field_Filter_Sleeping")
  public var Sleeping: String

  @JsName("Field_Filter_Disabled")
  public var Disabled: String

  @JsName("Field_Filter_Max")
  public var Max: String
}

@JsName("EFieldObjectType")
public external object FieldObjectType {
  @JsName("Field_Object_Rigid")
  public var Rigid: String

  @JsName("Field_Object_Cloth")
  public var Cloth: String

  @JsName("Field_Object_Destruction")
  public var Destruction: String

  @JsName("Field_Object_Character")
  public var Character: String

  @JsName("Field_Object_All")
  public var All: String

  @JsName("Field_Object_Max")
  public var Max: String
}

@JsName("EFieldPositionType")
public external object FieldPositionType {
  @JsName("Field_Position_CenterOfMass")
  public var CenterOfMass: String

  @JsName("Field_Position_PivotPoint")
  public var PivotPoint: String

  @JsName("Field_Position_Max")
  public var Max: String
}

public open external class FieldSystemMetaDataFilter(
  outer: UObject,
) : FieldSystemMetaData {
  @JsName("FilterType")
  public open var filterType: String

  @JsName("ObjectType")
  public open var objectType: String

  @JsName("PositionType")
  public open var positionType: String

  @JsName("SetMetaDataFilterType")
  public open fun setMetaDataFilterType(
    filterType: String,
    objectType: String,
    positionType: String,
  ): FieldSystemMetaDataFilter

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldSystemMetaDataFilter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldSystemMetaDataFilter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldSystemMetaDataFilter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldSystemMetaDataFilter

    @JsName("C")
    public fun copy(other: UObject): FieldSystemMetaDataFilter

    @JsName("C")
    public fun copy(other: Any): FieldSystemMetaDataFilter
  }
}

public open external class FieldNodeInt(
  outer: UObject,
) : FieldNodeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldNodeInt

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldNodeInt

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldNodeInt

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldNodeInt

    @JsName("C")
    public fun copy(other: UObject): FieldNodeInt

    @JsName("C")
    public fun copy(other: Any): FieldNodeInt
  }
}

public open external class FieldNodeFloat(
  outer: UObject,
) : FieldNodeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldNodeFloat

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldNodeFloat

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldNodeFloat

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldNodeFloat

    @JsName("C")
    public fun copy(other: UObject): FieldNodeFloat

    @JsName("C")
    public fun copy(other: Any): FieldNodeFloat
  }
}

public open external class FieldNodeVector(
  outer: UObject,
) : FieldNodeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FieldNodeVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FieldNodeVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FieldNodeVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FieldNodeVector

    @JsName("C")
    public fun copy(other: UObject): FieldNodeVector

    @JsName("C")
    public fun copy(other: Any): FieldNodeVector
  }
}

public open external class UniformInteger(
  outer: UObject,
) : FieldNodeInt {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("SetUniformInteger")
  public open fun setUniformInteger(magnitude: Number): UniformInteger

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UniformInteger

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UniformInteger

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UniformInteger

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UniformInteger

    @JsName("C")
    public fun copy(other: UObject): UniformInteger

    @JsName("C")
    public fun copy(other: Any): UniformInteger
  }
}

@JsName("ESetMaskConditionType")
public external object SetMaskConditionType {
  @JsName("Field_Set_Always")
  public var SetAlways: String

  @JsName("Field_Set_IFF_NOT_Interior")
  public var SetIffnotInterior: String

  @JsName("Field_Set_IFF_NOT_Exterior")
  public var SetIffnotExterior: String

  @JsName("Field_MaskCondition_Max")
  public var MaskConditionMax: String

  @JsName("Field_MAX")
  public var Max: String
}

public open external class RadialIntMask(
  outer: UObject,
) : FieldNodeInt {
  @JsName("Radius")
  public open var radius: Number

  public open var position: Vector

  @JsName("InteriorValue")
  public open var interiorValue: Number

  @JsName("ExteriorValue")
  public open var exteriorValue: Number

  @JsName("SetMaskCondition")
  public open var setMaskCondition: String

  @JsName("SetRadialIntMask")
  public open fun setRadialIntMask(
    radius: Number,
    position: Vector,
    interiorValue: Number,
    exteriorValue: Number,
    setMaskConditionIn: String,
  ): RadialIntMask

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RadialIntMask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RadialIntMask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RadialIntMask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RadialIntMask

    @JsName("C")
    public fun copy(other: UObject): RadialIntMask

    @JsName("C")
    public fun copy(other: Any): RadialIntMask
  }
}

public open external class UniformScalar(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("SetUniformScalar")
  public open fun setUniformScalar(magnitude: Number): UniformScalar

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UniformScalar

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UniformScalar

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UniformScalar

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UniformScalar

    @JsName("C")
    public fun copy(other: UObject): UniformScalar

    @JsName("C")
    public fun copy(other: Any): UniformScalar
  }
}

@JsName("EWaveFunctionType")
public external object WaveFunctionType {
  @JsName("Field_Wave_Cosine")
  public var Cosine: String

  @JsName("Field_Wave_Gaussian")
  public var Gaussian: String

  @JsName("Field_Wave_Falloff")
  public var Falloff: String

  @JsName("Field_Wave_Decay")
  public var Decay: String

  @JsName("Field_Wave_Max")
  public var Max: String
}

@JsName("EFieldFalloffType")
public external object FieldFalloffType {
  @JsName("Field_FallOff_None")
  public var FallOffNone: String

  @JsName("Field_Falloff_Linear")
  public var FalloffLinear: String

  @JsName("Field_Falloff_Inverse")
  public var FalloffInverse: String

  @JsName("Field_Falloff_Squared")
  public var FalloffSquared: String

  @JsName("Field_Falloff_Logarithmic")
  public var FalloffLogarithmic: String

  @JsName("Field_Falloff_Max")
  public var FalloffMax: String
}

public open external class WaveScalar(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("Magnitude")
  public open var magnitude: Number

  public open var position: Vector

  @JsName("Wavelength")
  public open var wavelength: Number

  @JsName("Period")
  public open var period: Number

  @JsName("UFunction")
  public open var uFunction: String

  @JsName("Falloff")
  public open var falloff: String

  @JsName("SetWaveScalar")
  public open fun setWaveScalar(
    magnitude: Number,
    position: Vector,
    wavelength: Number,
    period: Number,
    time: Number,
    uFunction: String,
    falloff: String,
  ): WaveScalar

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WaveScalar

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WaveScalar

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WaveScalar

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WaveScalar

    @JsName("C")
    public fun copy(other: UObject): WaveScalar

    @JsName("C")
    public fun copy(other: Any): WaveScalar
  }
}

public open external class RadialFalloff(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("MinRange")
  public open var minRange: Number

  @JsName("MaxRange")
  public open var maxRange: Number

  @JsName("Default")
  public open var default: Number

  @JsName("Radius")
  public open var radius: Number

  public open var position: Vector

  @JsName("Falloff")
  public open var falloff: String

  @JsName("SetRadialFalloff")
  public open fun setRadialFalloff(
    magnitude: Number,
    minRange: Number,
    maxRange: Number,
    default: Number,
    radius: Number,
    position: Vector,
    falloff: String,
  ): RadialFalloff

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RadialFalloff

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RadialFalloff

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RadialFalloff

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RadialFalloff

    @JsName("C")
    public fun copy(other: UObject): RadialFalloff

    @JsName("C")
    public fun copy(other: Any): RadialFalloff
  }
}

public open external class PlaneFalloff(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("MinRange")
  public open var minRange: Number

  @JsName("MaxRange")
  public open var maxRange: Number

  @JsName("Default")
  public open var default: Number

  @JsName("Distance")
  public open var distance: Number

  public open var position: Vector

  @JsName("Normal")
  public open var normal: Vector

  @JsName("Falloff")
  public open var falloff: String

  @JsName("SetPlaneFalloff")
  public open fun setPlaneFalloff(
    magnitude: Number,
    minRange: Number,
    maxRange: Number,
    default: Number,
    distance: Number,
    position: Vector,
    normal: Vector,
    falloff: String,
  ): PlaneFalloff

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlaneFalloff

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlaneFalloff

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlaneFalloff

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlaneFalloff

    @JsName("C")
    public fun copy(other: UObject): PlaneFalloff

    @JsName("C")
    public fun copy(other: Any): PlaneFalloff
  }
}

public open external class BoxFalloff(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("MinRange")
  public open var minRange: Number

  @JsName("MaxRange")
  public open var maxRange: Number

  @JsName("Default")
  public open var default: Number

  @JsName("Transform")
  public open var transform: Transform

  @JsName("Falloff")
  public open var falloff: String

  @JsName("SetBoxFalloff")
  public open fun setBoxFalloff(
    magnitude: Number,
    minRange: Number,
    maxRange: Number,
    default: Number,
    transform: Transform,
    falloff: String,
  ): BoxFalloff

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BoxFalloff

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BoxFalloff

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BoxFalloff

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BoxFalloff

    @JsName("C")
    public fun copy(other: UObject): BoxFalloff

    @JsName("C")
    public fun copy(other: Any): BoxFalloff
  }
}

public open external class NoiseField(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("MinRange")
  public open var minRange: Number

  @JsName("MaxRange")
  public open var maxRange: Number

  @JsName("Transform")
  public open var transform: Transform

  @JsName("SetNoiseField")
  public open fun setNoiseField(
    minRange: Number,
    maxRange: Number,
    transform: Transform,
  ): NoiseField

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NoiseField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NoiseField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NoiseField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NoiseField

    @JsName("C")
    public fun copy(other: UObject): NoiseField

    @JsName("C")
    public fun copy(other: Any): NoiseField
  }
}

public open external class UniformVector(
  outer: UObject,
) : FieldNodeVector {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("Direction")
  public open var direction: Vector

  @JsName("SetUniformVector")
  public open fun setUniformVector(magnitude: Number, direction: Vector): UniformVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UniformVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UniformVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UniformVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UniformVector

    @JsName("C")
    public fun copy(other: UObject): UniformVector

    @JsName("C")
    public fun copy(other: Any): UniformVector
  }
}

public open external class RadialVector(
  outer: UObject,
) : FieldNodeVector {
  @JsName("Magnitude")
  public open var magnitude: Number

  public open var position: Vector

  @JsName("SetRadialVector")
  public open fun setRadialVector(magnitude: Number, position: Vector): RadialVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RadialVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RadialVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RadialVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RadialVector

    @JsName("C")
    public fun copy(other: UObject): RadialVector

    @JsName("C")
    public fun copy(other: Any): RadialVector
  }
}

public open external class RandomVector(
  outer: UObject,
) : FieldNodeVector {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("SetRandomVector")
  public open fun setRandomVector(magnitude: Number): RandomVector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RandomVector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RandomVector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RandomVector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RandomVector

    @JsName("C")
    public fun copy(other: UObject): RandomVector

    @JsName("C")
    public fun copy(other: Any): RandomVector
  }
}

@JsName("EFieldOperationType")
public external object FieldOperationType {
  @JsName("Field_Multiply")
  public var Multiply: String

  @JsName("Field_Divide")
  public var Divide: String

  @JsName("Field_Add")
  public var Add: String

  @JsName("Field_Substract")
  public var Substract: String

  @JsName("Field_Operation_Max")
  public var OperationMax: String
}

public open external class OperatorField(
  outer: UObject,
) : FieldNodeBase {
  @JsName("Magnitude")
  public open var magnitude: Number

  @JsName("RightField")
  public open var rightField: FieldNodeBase

  @JsName("LeftField")
  public open var leftField: FieldNodeBase

  @JsName("Operation")
  public open var operation: String

  @JsName("SetOperatorField")
  public open fun setOperatorField(
    magnitude: Number,
    leftField: FieldNodeBase,
    rightField: FieldNodeBase,
    operation: String,
  ): OperatorField

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OperatorField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OperatorField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OperatorField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OperatorField

    @JsName("C")
    public fun copy(other: UObject): OperatorField

    @JsName("C")
    public fun copy(other: Any): OperatorField
  }
}

public open external class ToIntegerField(
  outer: UObject,
) : FieldNodeInt {
  @JsName("FloatField")
  public open var floatField: FieldNodeFloat

  @JsName("SetToIntegerField")
  public open fun setToIntegerField(floatField: FieldNodeFloat): ToIntegerField

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToIntegerField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ToIntegerField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToIntegerField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToIntegerField

    @JsName("C")
    public fun copy(other: UObject): ToIntegerField

    @JsName("C")
    public fun copy(other: Any): ToIntegerField
  }
}

public open external class ToFloatField(
  outer: UObject,
) : FieldNodeFloat {
  @JsName("IntField")
  public open var intField: FieldNodeInt

  @JsName("SetToFloatField")
  public open fun setToFloatField(integerField: FieldNodeInt): ToFloatField

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToFloatField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ToFloatField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToFloatField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToFloatField

    @JsName("C")
    public fun copy(other: UObject): ToFloatField

    @JsName("C")
    public fun copy(other: Any): ToFloatField
  }
}

@JsName("EFieldCullingOperationType")
public external object FieldCullingOperationType {
  @JsName("Field_Culling_Inside")
  public var Inside: String

  @JsName("Field_Culling_Outside")
  public var Outside: String

  @JsName("Field_Culling_Operation_Max")
  public var OperationMax: String

  @JsName("Field_Culling_MAX")
  public var Max: String
}

public open external class CullingField(
  outer: UObject,
) : FieldNodeBase {
  @JsName("Culling")
  public open var culling: FieldNodeBase

  @JsName("Field")
  public open var field: FieldNodeBase

  @JsName("Operation")
  public open var operation: String

  @JsName("SetCullingField")
  public open fun setCullingField(
    culling: FieldNodeBase,
    field: FieldNodeBase,
    operation: String,
  ): CullingField

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CullingField

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CullingField

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CullingField

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CullingField

    @JsName("C")
    public fun copy(other: UObject): CullingField

    @JsName("C")
    public fun copy(other: Any): CullingField
  }
}

public open external class ReturnResultsTerminal(
  outer: UObject,
) : FieldNodeBase {
  @JsName("SetReturnResultsTerminal")
  public open fun setReturnResultsTerminal(): ReturnResultsTerminal

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReturnResultsTerminal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReturnResultsTerminal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReturnResultsTerminal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReturnResultsTerminal

    @JsName("C")
    public fun copy(other: UObject): ReturnResultsTerminal

    @JsName("C")
    public fun copy(other: Any): ReturnResultsTerminal
  }
}

@JsName("ECompilerVersion")
public external object CompilerVersion {
  public var Default: String

  public var VisualStudio2015: String

  public var VisualStudio2017: String

  public var VisualStudio2019: String

  public var VisualStudio2022: String

  @JsName("ECompilerVersion_MAX")
  public var Max: String
}

@JsName("EDefaultGraphicsRHI")
public external object DefaultGraphicsRHI {
  @JsName("DefaultGraphicsRHI_Default")
  public var Default: String

  @JsName("DefaultGraphicsRHI_DX11")
  public var Dx11: String

  @JsName("DefaultGraphicsRHI_DX12")
  public var Dx12: String

  @JsName("DefaultGraphicsRHI_Vulkan")
  public var Vulkan: String

  @JsName("DefaultGraphicsRHI_MAX")
  public var Max: String
}

public open external class PlatformRuntimeAudioCompressionOverrides {
  @JsName("bOverrideCompressionTimes")
  public open var overrideCompressionTimes: Boolean

  @JsName("DurationThreshold")
  public open var durationThreshold: Number

  @JsName("MaxNumRandomBranches")
  public open var maxNumRandomBranches: Number

  @JsName("SoundCueQualityIndex")
  public open var soundCueQualityIndex: Number

  public open fun clone(): PlatformRuntimeAudioCompressionOverrides

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PlatformRuntimeAudioCompressionOverrides

    @JsName("C")
    public fun copy(other: Any): PlatformRuntimeAudioCompressionOverrides
  }
}

public open external class WindowsTargetSettings(
  outer: UObject,
) : UObject {
  @JsName("Compiler")
  public open var compiler: String

  @JsName("TargetedRHIs")
  public open var targetedRhIs: Array<String>

  @JsName("DefaultGraphicsRHI")
  public open var defaultGraphicsRhi: String

  @JsName("AudioSampleRate")
  public open var audioSampleRate: Number

  @JsName("AudioCallbackBufferFrameSize")
  public open var audioCallbackBufferFrameSize: Number

  @JsName("AudioNumBuffersToEnqueue")
  public open var audioNumBuffersToEnqueue: Number

  @JsName("AudioMaxChannels")
  public open var audioMaxChannels: Number

  @JsName("AudioNumSourceWorkers")
  public open var audioNumSourceWorkers: Number

  @JsName("SpatializationPlugin")
  public open var spatializationPlugin: String

  @JsName("SourceDataOverridePlugin")
  public open var sourceDataOverridePlugin: String

  @JsName("ReverbPlugin")
  public open var reverbPlugin: String

  @JsName("OcclusionPlugin")
  public open var occlusionPlugin: String

  @JsName("CompressionOverrides")
  public open var compressionOverrides: PlatformRuntimeAudioCompressionOverrides

  @JsName("CacheSizeKB")
  public open var cacheSizeKb: Number

  @JsName("MaxChunkSizeOverrideKB")
  public open var maxChunkSizeOverrideKb: Number

  @JsName("bResampleForDevice")
  public open var resampleForDevice: Boolean

  @JsName("MaxSampleRate")
  public open var maxSampleRate: Number

  @JsName("HighSampleRate")
  public open var highSampleRate: Number

  @JsName("MedSampleRate")
  public open var medSampleRate: Number

  @JsName("LowSampleRate")
  public open var lowSampleRate: Number

  @JsName("MinSampleRate")
  public open var minSampleRate: Number

  @JsName("CompressionQualityModifier")
  public open var compressionQualityModifier: Number

  @JsName("AutoStreamingThreshold")
  public open var autoStreamingThreshold: Number

  @JsName("SoundCueCookQualityIndex")
  public open var soundCueCookQualityIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WindowsTargetSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WindowsTargetSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WindowsTargetSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WindowsTargetSettings

    @JsName("C")
    public fun copy(other: UObject): WindowsTargetSettings

    @JsName("C")
    public fun copy(other: Any): WindowsTargetSettings
  }
}

public open external class SourceCodeAccessSettings(
  outer: UObject,
) : UObject {
  @JsName("PreferredAccessor")
  public open var preferredAccessor: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SourceCodeAccessSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SourceCodeAccessSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SourceCodeAccessSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SourceCodeAccessSettings

    @JsName("C")
    public fun copy(other: UObject): SourceCodeAccessSettings

    @JsName("C")
    public fun copy(other: Any): SourceCodeAccessSettings
  }
}

public open external class LandscapeBlueprintBrush(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : LandscapeBlueprintBrushBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LandscapeBlueprintBrush

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LandscapeBlueprintBrush

    @JsName("C")
    public fun copy(other: UObject): LandscapeBlueprintBrush

    @JsName("C")
    public fun copy(other: Any): LandscapeBlueprintBrush
  }
}

public open external class PropertyViewBase(
  outer: UObject,
) : Widget {
  @JsName("UObject")
  public open var uObject: UObject

  @JsName("SoftObjectPath")
  public open var softObjectPath: SoftObjectPath

  @JsName("bAutoLoadAsset")
  public open var autoLoadAsset: Boolean

  @JsName("OnPropertyChanged")
  public open var onPropertyChanged: UnrealEngineMulticastDelegate<(PropertyName: String) -> Unit>

  @JsName("SetObject")
  public open fun setObject(newObject: UObject): Unit

  @JsName("GetObject")
  public open fun getObject(): UObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PropertyViewBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PropertyViewBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PropertyViewBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PropertyViewBase

    @JsName("C")
    public fun copy(other: UObject): PropertyViewBase

    @JsName("C")
    public fun copy(other: Any): PropertyViewBase
  }
}

public open external class DetailsView(
  outer: UObject,
) : PropertyViewBase {
  @JsName("bAllowFiltering")
  public open var allowFiltering: Boolean

  @JsName("bAllowFavoriteSystem")
  public open var allowFavoriteSystem: Boolean

  @JsName("bShowModifiedPropertiesOption")
  public open var showModifiedPropertiesOption: Boolean

  @JsName("bShowKeyablePropertiesOption")
  public open var showKeyablePropertiesOption: Boolean

  @JsName("bShowAnimatedPropertiesOption")
  public open var showAnimatedPropertiesOption: Boolean

  @JsName("ColumnWidth")
  public open var columnWidth: Number

  @JsName("bShowScrollBar")
  public open var showScrollBar: Boolean

  @JsName("bForceHiddenPropertyVisibility")
  public open var forceHiddenPropertyVisibility: Boolean

  @JsName("ViewIdentifier")
  public open var viewIdentifier: String

  @JsName("CategoriesToShow")
  public open var categoriesToShow: Array<String>

  @JsName("PropertiesToShow")
  public open var propertiesToShow: Array<String>

  @JsName("bShowOnlyAllowed")
  public open var showOnlyAllowed: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DetailsView

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DetailsView

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DetailsView

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DetailsView

    @JsName("C")
    public fun copy(other: UObject): DetailsView

    @JsName("C")
    public fun copy(other: Any): DetailsView
  }
}

@JsName("K2Node_CreateDragDropOperation")
public open external class K2NodeCreateDragDropOperation(
  outer: UObject,
) : K2NodeConstructObjectFromClass {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeCreateDragDropOperation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeCreateDragDropOperation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeCreateDragDropOperation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeCreateDragDropOperation

    @JsName("C")
    public fun copy(other: UObject): K2NodeCreateDragDropOperation

    @JsName("C")
    public fun copy(other: Any): K2NodeCreateDragDropOperation
  }
}

@JsName("K2Node_CreateWidget")
public open external class K2NodeCreateWidget(
  outer: UObject,
) : K2NodeConstructObjectFromClass {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeCreateWidget

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeCreateWidget

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeCreateWidget

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeCreateWidget

    @JsName("C")
    public fun copy(other: UObject): K2NodeCreateWidget

    @JsName("C")
    public fun copy(other: Any): K2NodeCreateWidget
  }
}

@JsName("K2Node_PlayAnimation")
public open external class K2NodePlayAnimation(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodePlayAnimation

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodePlayAnimation

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodePlayAnimation

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodePlayAnimation

    @JsName("C")
    public fun copy(other: UObject): K2NodePlayAnimation

    @JsName("C")
    public fun copy(other: Any): K2NodePlayAnimation
  }
}

@JsName("K2Node_PlayAnimationTimeRange")
public open external class K2NodePlayAnimationTimeRange(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodePlayAnimationTimeRange

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodePlayAnimationTimeRange

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodePlayAnimationTimeRange

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodePlayAnimationTimeRange

    @JsName("C")
    public fun copy(other: UObject): K2NodePlayAnimationTimeRange

    @JsName("C")
    public fun copy(other: Any): K2NodePlayAnimationTimeRange
  }
}

public open external class EditorPropertyPathSegment {
  public open var struct: Struct

  @JsName("MemberName")
  public open var memberName: String

  @JsName("MemberGuid")
  public open var memberGuid: Guid

  @JsName("IsProperty")
  public open var isProperty: Boolean

  public open fun clone(): EditorPropertyPathSegment

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): EditorPropertyPathSegment

    @JsName("C")
    public fun copy(other: Any): EditorPropertyPathSegment
  }
}

public open external class EditorPropertyPath {
  @JsName("Segments")
  public open var segments: Array<EditorPropertyPathSegment>

  public open fun clone(): EditorPropertyPath

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): EditorPropertyPath

    @JsName("C")
    public fun copy(other: Any): EditorPropertyPath
  }
}

public open external class DelegateEditorBinding {
  @JsName("ObjectName")
  public open var objectName: String

  @JsName("PropertyName")
  public open var propertyName: String

  @JsName("FunctionName")
  public open var functionName: String

  @JsName("SourceProperty")
  public open var sourceProperty: String

  @JsName("SourcePath")
  public open var sourcePath: EditorPropertyPath

  @JsName("MemberGuid")
  public open var memberGuid: Guid

  @JsName("Kind")
  public open var kind: String

  public open fun clone(): DelegateEditorBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DelegateEditorBinding

    @JsName("C")
    public fun copy(other: Any): DelegateEditorBinding
  }
}

@JsName("WidgetAnimation_DEPRECATED")
public open external class WidgetAnimationDeprecated {
  @JsName("MovieScene")
  public open var movieScene: MovieScene

  @JsName("AnimationBindings")
  public open var animationBindings: Array<WidgetAnimationBinding>

  public open fun clone(): WidgetAnimationDeprecated

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WidgetAnimationDeprecated

    @JsName("C")
    public fun copy(other: Any): WidgetAnimationDeprecated
  }
}

@JsName("EWidgetCompileTimeTickPrediction")
public external object WidgetCompileTimeTickPrediction {
  public var WontTick: String

  public var OnDemand: String

  public var WillTick: String

  @JsName("EWidgetCompileTimeTickPrediction_MAX")
  public var Max: String
}

@JsName("EThumbnailPreviewSizeMode")
public external object ThumbnailPreviewSizeMode {
  public var MatchDesignerMode: String

  public var FillScreen: String

  public var Custom: String

  public var Desired: String

  @JsName("EThumbnailPreviewSizeMode_MAX")
  public var Max: String
}

public open external class WidgetBlueprint(
  outer: UObject,
) : BaseWidgetBlueprint {
  @JsName("Bindings")
  public open var bindings: Array<DelegateEditorBinding>

  @JsName("AnimationData")
  public open var animationData: Array<WidgetAnimationDeprecated>

  @JsName("Animations")
  public open var animations: Array<WidgetAnimation>

  @JsName("PaletteCategory")
  public open var paletteCategory: String

  @JsName("TickFrequency")
  public open var tickFrequency: String

  @JsName("TickPrediction")
  public open var tickPrediction: String

  @JsName("TickPredictionReason")
  public open var tickPredictionReason: String

  @JsName("PropertyBindings")
  public open var propertyBindings: Number

  @JsName("ThumbnailSizeMode")
  public open var thumbnailSizeMode: String

  @JsName("ThumbnailCustomSize")
  public open var thumbnailCustomSize: Vector2d

  @JsName("ThumbnailImage")
  public open var thumbnailImage: Texture2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetBlueprint

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetBlueprint

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetBlueprint

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetBlueprint

    @JsName("C")
    public fun copy(other: UObject): WidgetBlueprint

    @JsName("C")
    public fun copy(other: Any): WidgetBlueprint
  }
}

@JsName("K2Node_WidgetAnimationEvent")
public open external class K2NodeWidgetAnimationEvent(
  outer: UObject,
) : K2NodeEvent {
  @JsName("Action")
  public open var action: String

  @JsName("AnimationPropertyName")
  public open var animationPropertyName: String

  @JsName("UserTag")
  public open var userTag: String

  @JsName("SourceWidgetBlueprint")
  public open var sourceWidgetBlueprint: WidgetBlueprint

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeWidgetAnimationEvent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeWidgetAnimationEvent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeWidgetAnimationEvent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeWidgetAnimationEvent

    @JsName("C")
    public fun copy(other: UObject): K2NodeWidgetAnimationEvent

    @JsName("C")
    public fun copy(other: Any): K2NodeWidgetAnimationEvent
  }
}

public open external class SinglePropertyView(
  outer: UObject,
) : PropertyViewBase {
  @JsName("PropertyName")
  public open var propertyName: String

  @JsName("NameOverride")
  public open var nameOverride: String

  @JsName("SetPropertyName")
  public open fun setPropertyName(newPropertyName: String): Unit

  @JsName("SetNameOverride")
  public open fun setNameOverride(newPropertyName: String): Unit

  @JsName("GetPropertyName")
  public open fun getPropertyName(): String

  @JsName("GetNameOverride")
  public open fun getNameOverride(): String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SinglePropertyView

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SinglePropertyView

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SinglePropertyView

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SinglePropertyView

    @JsName("C")
    public fun copy(other: UObject): SinglePropertyView

    @JsName("C")
    public fun copy(other: Any): SinglePropertyView
  }
}

public open external class SlateVectorArtDataFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SlateVectorArtDataFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SlateVectorArtDataFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SlateVectorArtDataFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SlateVectorArtDataFactory

    @JsName("C")
    public fun copy(other: UObject): SlateVectorArtDataFactory

    @JsName("C")
    public fun copy(other: Any): SlateVectorArtDataFactory
  }
}

@JsName("EPropertyBindingPermissionLevel")
public external object PropertyBindingPermissionLevel {
  public var Allow: String

  public var Prevent: String

  public var PreventAndWarn: String

  public var PreventAndError: String

  @JsName("EPropertyBindingPermissionLevel_MAX")
  public var Max: String
}

public open external class WidgetCompilerOptions {
  @JsName("bAllowBlueprintTick")
  public open var allowBlueprintTick: Boolean

  @JsName("bAllowBlueprintPaint")
  public open var allowBlueprintPaint: Boolean

  @JsName("PropertyBindingRule")
  public open var propertyBindingRule: String

  @JsName("Rules")
  public open var rules: Array<Class>

  public open fun clone(): WidgetCompilerOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WidgetCompilerOptions

    @JsName("C")
    public fun copy(other: Any): WidgetCompilerOptions
  }
}

public open external class DirectoryWidgetCompilerOptions {
  @JsName("Directory")
  public open var directory: DirectoryPath

  @JsName("IgnoredWidgets")
  public open var ignoredWidgets: Array<WidgetBlueprint>

  @JsName("Options")
  public open var options: WidgetCompilerOptions

  public open fun clone(): DirectoryWidgetCompilerOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DirectoryWidgetCompilerOptions

    @JsName("C")
    public fun copy(other: Any): DirectoryWidgetCompilerOptions
  }
}

public open external class DebugResolution {
  @JsName("Width")
  public open var width: Number

  @JsName("Height")
  public open var height: Number

  @JsName("Description")
  public open var description: String

  @JsName("Color")
  public open var color: LinearColor

  public open fun clone(): DebugResolution

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): DebugResolution

    @JsName("C")
    public fun copy(other: Any): DebugResolution
  }
}

@JsName("UMGEditorProjectSettings")
public open external class UmgEditorProjectSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("DefaultCompilerOptions")
  public open var defaultCompilerOptions: WidgetCompilerOptions

  @JsName("DirectoryCompilerOptions")
  public open var directoryCompilerOptions: Array<DirectoryWidgetCompilerOptions>

  @JsName("bShowWidgetsFromEngineContent")
  public open var showWidgetsFromEngineContent: Boolean

  @JsName("bShowWidgetsFromDeveloperContent")
  public open var showWidgetsFromDeveloperContent: Boolean

  @JsName("CategoriesToHide")
  public open var categoriesToHide: Array<String>

  @JsName("WidgetClassesToHide")
  public open var widgetClassesToHide: Array<SoftClassPath>

  @JsName("bUseWidgetTemplateSelector")
  public open var useWidgetTemplateSelector: Boolean

  @JsName("DefaultRootWidget")
  public open var defaultRootWidget: UnrealEngineClass

  @JsName("DefaultWidgetParentClass")
  public open var defaultWidgetParentClass: Class

  @JsName("DebugResolutions")
  public open var debugResolutions: Array<DebugResolution>

  @JsName("Version")
  public open var version: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UmgEditorProjectSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UmgEditorProjectSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UmgEditorProjectSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UmgEditorProjectSettings

    @JsName("C")
    public fun copy(other: UObject): UmgEditorProjectSettings

    @JsName("C")
    public fun copy(other: Any): UmgEditorProjectSettings
  }
}

public open external class WidgetBlueprintFactory(
  outer: UObject,
) : Factory {
  @JsName("BlueprintType")
  public open var blueprintType: String

  @JsName("ParentClass")
  public open var parentClass: UnrealEngineClass

  @JsName("RootWidgetClass")
  public open var rootWidgetClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetBlueprintFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetBlueprintFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetBlueprintFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetBlueprintFactory

    @JsName("C")
    public fun copy(other: UObject): WidgetBlueprintFactory

    @JsName("C")
    public fun copy(other: Any): WidgetBlueprintFactory
  }
}

public open external class WidgetBlueprintThumbnailRenderer(
  outer: UObject,
) : DefaultSizedThumbnailRenderer {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetBlueprintThumbnailRenderer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetBlueprintThumbnailRenderer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetBlueprintThumbnailRenderer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetBlueprintThumbnailRenderer

    @JsName("C")
    public fun copy(other: UObject): WidgetBlueprintThumbnailRenderer

    @JsName("C")
    public fun copy(other: Any): WidgetBlueprintThumbnailRenderer
  }
}

public open external class WidgetCompilerRule(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetCompilerRule

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetCompilerRule

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetCompilerRule

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetCompilerRule

    @JsName("C")
    public fun copy(other: UObject): WidgetCompilerRule

    @JsName("C")
    public fun copy(other: Any): WidgetCompilerRule
  }
}

@JsName("EDisplayOnCompile")
public external object DisplayOnCompile {
  @JsName("DoC_ErrorsOrWarnings")
  public var ErrorsOrWarnings: String

  @JsName("DoC_ErrorsOnly")
  public var ErrorsOnly: String

  @JsName("DoC_WarningsOnly")
  public var WarningsOnly: String

  @JsName("DoC_Never")
  public var Never: String

  @JsName("DoC_MAX")
  public var Max: String
}

public open external class WidgetPaletteFavorites(
  outer: UObject,
) : UObject {
  @JsName("Favorites")
  public open var favorites: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetPaletteFavorites

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetPaletteFavorites

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetPaletteFavorites

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetPaletteFavorites

    @JsName("C")
    public fun copy(other: UObject): WidgetPaletteFavorites

    @JsName("C")
    public fun copy(other: Any): WidgetPaletteFavorites
  }
}

public open external class WidgetDesignerSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("GridSnapEnabled")
  public open var gridSnapEnabled: Boolean

  @JsName("GridSnapSize")
  public open var gridSnapSize: Number

  @JsName("bLockToPanelOnDragByDefault")
  public open var lockToPanelOnDragByDefault: Boolean

  @JsName("bShowOutlines")
  public open var showOutlines: Boolean

  @JsName("bExecutePreConstructEvent")
  public open var executePreConstructEvent: Boolean

  @JsName("bRespectLocks")
  public open var respectLocks: Boolean

  @JsName("CreateOnCompile")
  public open var createOnCompile: String

  @JsName("DismissOnCompile")
  public open var dismissOnCompile: String

  @JsName("Favorites")
  public open var favorites: WidgetPaletteFavorites

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetDesignerSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetDesignerSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetDesignerSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetDesignerSettings

    @JsName("C")
    public fun copy(other: UObject): WidgetDesignerSettings

    @JsName("C")
    public fun copy(other: Any): WidgetDesignerSettings
  }
}

public open external class WidgetGraphSchema(
  outer: UObject,
) : EdGraphSchemaK2 {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetGraphSchema

    @JsName("C")
    public fun copy(other: UObject): WidgetGraphSchema

    @JsName("C")
    public fun copy(other: Any): WidgetGraphSchema
  }
}

public open external class WidgetSlotPair(
  outer: UObject,
) : UObject {
  @JsName("WidgetName")
  public open var widgetName: String

  @JsName("SlotPropertyNames")
  public open var slotPropertyNames: Array<String>

  @JsName("SlotPropertyValues")
  public open var slotPropertyValues: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetSlotPair

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetSlotPair

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetSlotPair

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetSlotPair

    @JsName("C")
    public fun copy(other: UObject): WidgetSlotPair

    @JsName("C")
    public fun copy(other: Any): WidgetSlotPair
  }
}

public open external class AutomationTestExcludelistEntry {
  @JsName("Map")
  public open var map: String

  @JsName("Test")
  public open var test: String

  @JsName("Reason")
  public open var reason: String

  @JsName("RHIs")
  public open var rhIs: Any

  @JsName("Warn")
  public open var warn: Boolean

  public open fun clone(): AutomationTestExcludelistEntry

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AutomationTestExcludelistEntry

    @JsName("C")
    public fun copy(other: Any): AutomationTestExcludelistEntry
  }
}

public open external class AutomationTestExcludelist(
  outer: UObject,
) : UObject {
  @JsName("ExcludeTest")
  public open var excludeTest: Array<AutomationTestExcludelistEntry>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AutomationTestExcludelist

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AutomationTestExcludelist

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AutomationTestExcludelist

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AutomationTestExcludelist

    @JsName("C")
    public fun copy(other: UObject): AutomationTestExcludelist

    @JsName("C")
    public fun copy(other: Any): AutomationTestExcludelist
  }
}

public open external class AutomatedTestFilter {
  @JsName("Contains")
  public open var contains: String

  @JsName("MatchFromStart")
  public open var matchFromStart: Boolean

  @JsName("MatchFromEnd")
  public open var matchFromEnd: Boolean

  public open fun clone(): AutomatedTestFilter

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AutomatedTestFilter

    @JsName("C")
    public fun copy(other: Any): AutomatedTestFilter
  }
}

public open external class AutomatedTestGroup {
  @JsName("Name")
  public open var name: String

  @JsName("Filters")
  public open var filters: Array<AutomatedTestFilter>

  public open fun clone(): AutomatedTestGroup

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AutomatedTestGroup

    @JsName("C")
    public fun copy(other: Any): AutomatedTestGroup
  }
}

public open external class AutomationControllerSettings(
  outer: UObject,
) : UObject {
  @JsName("Groups")
  public open var groups: Array<AutomatedTestGroup>

  @JsName("bSuppressLogErrors")
  public open var suppressLogErrors: Boolean

  @JsName("bSuppressLogWarnings")
  public open var suppressLogWarnings: Boolean

  @JsName("bElevateLogWarningsToErrors")
  public open var elevateLogWarningsToErrors: Boolean

  @JsName("bTreatLogWarningsAsTestErrors")
  public open var treatLogWarningsAsTestErrors: Boolean

  @JsName("CheckTestIntervalSeconds")
  public open var checkTestIntervalSeconds: Number

  @JsName("GameInstanceLostTimerSeconds")
  public open var gameInstanceLostTimerSeconds: Number

  @JsName("TelemetryDirectory")
  public open var telemetryDirectory: String

  @JsName("bResetTelemetryStorageOnNewSession")
  public open var resetTelemetryStorageOnNewSession: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AutomationControllerSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AutomationControllerSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AutomationControllerSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AutomationControllerSettings

    @JsName("C")
    public fun copy(other: UObject): AutomationControllerSettings

    @JsName("C")
    public fun copy(other: Any): AutomationControllerSettings
  }
}

public open external class AutomationEditorTask(
  outer: UObject,
) : UObject {
  @JsName("IsValidTask")
  public open fun isValidTask(): Boolean

  @JsName("IsTaskDone")
  public open fun isTaskDone(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AutomationEditorTask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AutomationEditorTask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AutomationEditorTask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AutomationEditorTask

    @JsName("C")
    public fun copy(other: UObject): AutomationEditorTask

    @JsName("C")
    public fun copy(other: Any): AutomationEditorTask
  }
}

public open external class AutomationBlueprintFunctionLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AutomationBlueprintFunctionLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AutomationBlueprintFunctionLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AutomationBlueprintFunctionLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AutomationBlueprintFunctionLibrary

    @JsName("TakeHighResScreenshot")
    public fun takeHighResScreenshot(
      resX: Number,
      resY: Number,
      filename: String,
      camera: CameraActor,
      maskEnabled: Boolean,
      captureHdr: Boolean,
      comparisonTolerance: String,
      comparisonNotes: String,
      delay: Number,
    ): AutomationEditorTask

    @JsName("TakeAutomationScreenshotOfUI")
    public fun takeAutomationScreenshotOfUi(
      worldContextObject: UObject,
      latentInfo: LatentActionInfo,
      name: String,
      options: AutomationScreenshotOptions,
    ): Unit

    @JsName("TakeAutomationScreenshotAtCamera")
    public fun takeAutomationScreenshotAtCamera(
      worldContextObject: UObject,
      latentInfo: LatentActionInfo,
      camera: CameraActor,
      nameOverride: String,
      notes: String,
      options: AutomationScreenshotOptions,
    ): Unit

    @JsName("TakeAutomationScreenshot")
    public fun takeAutomationScreenshot(
      worldContextObject: UObject,
      latentInfo: LatentActionInfo,
      name: String,
      notes: String,
      options: AutomationScreenshotOptions,
    ): Unit

    @JsName("SetTestTelemetryStorage")
    public fun setTestTelemetryStorage(storageName: String): Unit

    @JsName("SetScalabilityQualityToLow")
    public fun setScalabilityQualityToLow(worldContextObject: UObject): Unit

    @JsName("SetScalabilityQualityToEpic")
    public fun setScalabilityQualityToEpic(worldContextObject: UObject): Unit

    @JsName("SetScalabilityQualityLevelRelativeToMax")
    public fun setScalabilityQualityLevelRelativeToMax(worldContextObject: UObject,
        value: Number): Unit

    @JsName("GetStatIncMax")
    public fun getStatIncMax(statName: String): Number

    @JsName("GetStatIncAverage")
    public fun getStatIncAverage(statName: String): Number

    @JsName("GetStatExcMax")
    public fun getStatExcMax(statName: String): Number

    @JsName("GetStatExcAverage")
    public fun getStatExcAverage(statName: String): Number

    @JsName("GetStatCallCount")
    public fun getStatCallCount(statName: String): Number

    @JsName("GetDefaultScreenshotOptionsForRendering")
    public fun getDefaultScreenshotOptionsForRendering(tolerance: String, delay: Number):
        AutomationScreenshotOptions

    @JsName("GetDefaultScreenshotOptionsForGameplay")
    public fun getDefaultScreenshotOptionsForGameplay(tolerance: String, delay: Number):
        AutomationScreenshotOptions

    @JsName("FinishLoadingBeforeScreenshot")
    public fun finishLoadingBeforeScreenshot(): Unit

    @JsName("EnableStatGroup")
    public fun enableStatGroup(worldContextObject: UObject, groupName: String): Unit

    @JsName("DisableStatGroup")
    public fun disableStatGroup(worldContextObject: UObject, groupName: String): Unit

    @JsName("CompareImageAgainstReference")
    public fun compareImageAgainstReference(
      imageFilePath: String,
      comparisonName: String,
      comparisonTolerance: String,
      comparisonNotes: String,
      worldContextObject: UObject,
    ): Boolean

    @JsName("AutomationWaitForLoading")
    public fun automationWaitForLoading(
      worldContextObject: UObject,
      latentInfo: LatentActionInfo,
      options: AutomationWaitForLoadingOptions,
    ): Unit

    @JsName("AreAutomatedTestsRunning")
    public fun areAutomatedTestsRunning(): Boolean

    @JsName("AddTestTelemetryData")
    public fun addTestTelemetryData(
      dataPoint: String,
      measurement: Number,
      context: String,
    ): Unit

    @JsName("AddExpectedLogError")
    public fun addExpectedLogError(
      expectedPatternString: String,
      occurrences: Number,
      exactMatch: Boolean,
    ): Unit

    @JsName("C")
    public fun copy(other: UObject): AutomationBlueprintFunctionLibrary

    @JsName("C")
    public fun copy(other: Any): AutomationBlueprintFunctionLibrary
  }
}

public open external class FuncTestRenderingComponent(
  outer: UObject,
) : PrimitiveComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FuncTestRenderingComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FuncTestRenderingComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FuncTestRenderingComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FuncTestRenderingComponent

    @JsName("C")
    public fun copy(other: UObject): FuncTestRenderingComponent

    @JsName("C")
    public fun copy(other: Any): FuncTestRenderingComponent
  }
}

@JsName("EFunctionalTestLogHandling")
public external object FunctionalTestLogHandling {
  public var ProjectDefault: String

  public var OutputIsError: String

  public var OutputIgnored: String

  @JsName("EFunctionalTestLogHandling_MAX")
  public var Max: String
}

@JsName("EFunctionalTestResult")
public external object FunctionalTestResult {
  public var Default: String

  public var Invalid: String

  public var Error: String

  public var Running: String

  public var Failed: String

  public var Succeeded: String

  @JsName("EFunctionalTestResult_MAX")
  public var Max: String
}

@JsName("EComparisonMethod")
public external object ComparisonMethod {
  @JsName("Equal_To")
  public var EqualTo: String

  @JsName("Not_Equal_To")
  public var NotEqualTo: String

  @JsName("Greater_Than_Or_Equal_To")
  public var GreaterThanOrEqualTo: String

  @JsName("Less_Than_Or_Equal_To")
  public var LessThanOrEqualTo: String

  @JsName("Greater_Than")
  public var GreaterThan: String

  @JsName("Less_Than")
  public var LessThan: String

  @JsName("EComparisonMethod_MAX")
  public var Max: String
}

public open external class FunctionalTest(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("TestLabel")
  public open var testLabel: String

  @JsName("SpriteComponent")
  public open var spriteComponent: BillboardComponent

  @JsName("bIsEnabled")
  public open var isEnabled: Boolean

  @JsName("LogErrorHandling")
  public open var logErrorHandling: String

  @JsName("LogWarningHandling")
  public open var logWarningHandling: String

  @JsName("Author")
  public open var author: String

  @JsName("Description")
  public open var description: String

  @JsName("ObservationPoint")
  public open var observationPoint: Actor

  @JsName("RandomNumbersStream")
  public open var randomNumbersStream: RandomStream

  @JsName("Result")
  public open var result: String

  @JsName("PreparationTimeLimit")
  public open var preparationTimeLimit: Number

  @JsName("TimeLimit")
  public open var timeLimit: Number

  @JsName("TimesUpMessage")
  public open var timesUpMessage: String

  @JsName("TimesUpResult")
  public open var timesUpResult: String

  @JsName("OnTestPrepare")
  public open var onTestPrepare: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnTestStart")
  public open var onTestStart: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnTestFinished")
  public open var onTestFinished: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("AutoDestroyActors")
  public open var autoDestroyActors: Array<Actor>

  @JsName("RenderComp")
  public open var renderComp: FuncTestRenderingComponent

  @JsName("TestName")
  public open var testName: TextRenderComponent

  @JsName("bIsRunning")
  public open var isRunning: Boolean

  @JsName("TotalTime")
  public open var totalTime: Number

  @JsName("SetTimeLimit")
  public open fun setTimeLimit(newTimeLimit: Number, resultWhenTimeRunsOut: String): Unit

  @JsName("RegisterAutoDestroyActor")
  public open fun registerAutoDestroyActor(actorToAutoDestroy: Actor): Unit

  @JsName("ReceiveStartTest")
  public open fun receiveStartTest(): Unit

  @JsName("ReceivePrepareTest")
  public open fun receivePrepareTest(): Unit

  @JsName("OnWantsReRunCheck")
  public open fun onWantsReRunCheck(): Boolean

  @JsName("OnAdditionalTestFinishedMessageRequest")
  public open fun onAdditionalTestFinishedMessageRequest(testResult: String): String

  @JsName("LogMessage")
  public open fun logMessage(message: String): Unit

  @JsName("IsRunning")
  public open fun isRunning(): Boolean

  @JsName("IsReady")
  public open fun isReady(): Boolean

  @JsName("IsEnabled")
  public open fun isEnabled(): Boolean

  @JsName("GetCurrentRerunReason")
  public open fun getCurrentRerunReason(): String

  @JsName("FinishTest")
  public open fun finishTest(testResult: String, message: String): Unit

  @JsName("DebugGatherRelevantActors")
  public open fun debugGatherRelevantActors(): Array<Actor>

  @JsName("AssertValue_Int")
  public open fun assertValueInt(
    actual: Number,
    shouldBe: String,
    expected: Number,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertValue_Float")
  public open fun assertValueFloat(
    actual: Number,
    shouldBe: String,
    expected: Number,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertValue_Double")
  public open fun assertValueDouble(
    actual: Any,
    shouldBe: String,
    expected: Any,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertValue_DateTime")
  public open fun assertValueDateTime(
    actual: DateTime,
    shouldBe: String,
    expected: DateTime,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertTrue")
  public open fun assertTrue(
    condition: Boolean,
    message: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertNotEqual_Vector")
  public open fun assertNotEqualVector(
    actual: Vector,
    notExpected: Vector,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertNotEqual_Transform")
  public open fun assertNotEqualTransform(
    actual: Transform,
    notExpected: Transform,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertNotEqual_String")
  public open fun assertNotEqualString(
    actual: String,
    notExpected: String,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertNotEqual_Rotator")
  public open fun assertNotEqualRotator(
    actual: Rotator,
    notExpected: Rotator,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertIsValid")
  public open fun assertIsValid(
    uObject: UObject,
    message: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertFalse")
  public open fun assertFalse(
    condition: Boolean,
    message: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Vector")
  public open fun assertEqualVector(
    actual: Vector,
    expected: Vector,
    what: String,
    tolerance: Number,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Transform")
  public open fun assertEqualTransform(
    actual: Transform,
    expected: Transform,
    what: String,
    tolerance: Number,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_TraceQueryResults")
  public open fun assertEqualTraceQueryResults(
    actual: TraceQueryTestResults,
    expected: TraceQueryTestResults,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_String")
  public open fun assertEqualString(
    actual: String,
    expected: String,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Rotator")
  public open fun assertEqualRotator(
    actual: Rotator,
    expected: Rotator,
    what: String,
    tolerance: Number,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Object")
  public open fun assertEqualObject(
    actual: UObject,
    expected: UObject,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Name")
  public open fun assertEqualName(
    actual: String,
    expected: String,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Int")
  public open fun assertEqualInt(
    actual: Number,
    expected: Number,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Float")
  public open fun assertEqualFloat(
    actual: Number,
    expected: Number,
    what: String,
    tolerance: Number,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Double")
  public open fun assertEqualDouble(
    actual: Any,
    expected: Any,
    what: String,
    tolerance: Any,
    contextObject: UObject,
  ): Boolean

  @JsName("AssertEqual_Bool")
  public open fun assertEqualBool(
    actual: Boolean,
    expected: Boolean,
    what: String,
    contextObject: UObject,
  ): Boolean

  @JsName("AddWarning")
  public open fun addWarning(message: String): Unit

  @JsName("AddRerun")
  public open fun addRerun(reason: String): Unit

  @JsName("AddError")
  public open fun addError(message: String): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTest

    @JsName("C")
    public fun copy(other: UObject): FunctionalTest

    @JsName("C")
    public fun copy(other: Any): FunctionalTest
  }
}

public open external class PendingDelayedSpawn {
  public open fun clone(): PendingDelayedSpawn

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PendingDelayedSpawn

    @JsName("C")
    public fun copy(other: Any): PendingDelayedSpawn
  }
}

@JsName("FunctionalAITestBase")
public open external class FunctionalAiTestBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : FunctionalTest {
  @JsName("SpawnLocationRandomizationRange")
  public open var spawnLocationRandomizationRange: Number

  @JsName("SpawnedPawns")
  public open var spawnedPawns: Array<Pawn>

  @JsName("PendingDelayedSpawns")
  public open var pendingDelayedSpawns: Array<PendingDelayedSpawn>

  @JsName("CurrentSpawnSetIndex")
  public open var currentSpawnSetIndex: Number

  @JsName("CurrentSpawnSetName")
  public open var currentSpawnSetName: String

  @JsName("OnAISpawned")
  public open var onAiSpawned: UnrealEngineMulticastDelegate<(Controller: AiController,
      Pawn: Pawn) -> Unit>

  @JsName("OnAllAISPawned")
  public open var onAllAisPawned: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("NavMeshDebugOrigin")
  public open var navMeshDebugOrigin: Vector

  @JsName("NavMeshDebugExtent")
  public open var navMeshDebugExtent: Vector

  @JsName("bWaitForNavMesh")
  public open var waitForNavMesh: Boolean

  @JsName("bDebugNavMeshOnTimeout")
  public open var debugNavMeshOnTimeout: Boolean

  @JsName("IsOneOfSpawnedPawns")
  public open fun isOneOfSpawnedPawns(actor: Actor): Boolean

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalAiTestBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalAiTestBase

    @JsName("C")
    public fun copy(other: UObject): FunctionalAiTestBase

    @JsName("C")
    public fun copy(other: Any): FunctionalAiTestBase
  }
}

@JsName("AITestSpawnSetBase")
public open external class AiTestSpawnSetBase {
  @JsName("Name")
  public open var name: String

  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("FallbackSpawnLocation")
  public open var fallbackSpawnLocation: Actor

  public open fun clone(): AiTestSpawnSetBase

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AiTestSpawnSetBase

    @JsName("C")
    public fun copy(other: Any): AiTestSpawnSetBase
  }
}

@JsName("AITestSpawnInfoBase")
public open external class AiTestSpawnInfoBase {
  @JsName("SpawnLocation")
  public open var spawnLocation: Actor

  @JsName("NumberToSpawn")
  public open var numberToSpawn: Number

  @JsName("SpawnDelay")
  public open var spawnDelay: Number

  @JsName("PreSpawnDelay")
  public open var preSpawnDelay: Number

  public open fun clone(): AiTestSpawnInfoBase

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AiTestSpawnInfoBase

    @JsName("C")
    public fun copy(other: Any): AiTestSpawnInfoBase
  }
}

public open external class GenericTeamId {
  @JsName("TeamID")
  public open var teamId: Number

  public open fun clone(): GenericTeamId

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GenericTeamId

    @JsName("C")
    public fun copy(other: Any): GenericTeamId
  }
}

@JsName("AITestSpawnInfo")
public open external class AiTestSpawnInfo : AiTestSpawnInfoBase {
  @JsName("PawnClass")
  public open var pawnClass: UnrealEngineClass

  @JsName("ControllerClass")
  public open var controllerClass: UnrealEngineClass

  @JsName("TeamID")
  public open var teamId: GenericTeamId

  @JsName("BehaviorTree")
  public open var behaviorTree: BehaviorTree

  public override fun clone(): AiTestSpawnInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AiTestSpawnInfo

    @JsName("C")
    public fun copy(other: Any): AiTestSpawnInfo
  }
}

@JsName("AITestSpawnSet")
public open external class AiTestSpawnSet : AiTestSpawnSetBase {
  @JsName("SpawnInfoContainer")
  public open var spawnInfoContainer: Array<AiTestSpawnInfo>

  public override fun clone(): AiTestSpawnSet

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AiTestSpawnSet

    @JsName("C")
    public fun copy(other: Any): AiTestSpawnSet
  }
}

@JsName("FunctionalAITest")
public open external class FunctionalAiTest(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : FunctionalAiTestBase {
  @JsName("SpawnSets")
  public open var spawnSets: Array<AiTestSpawnSet>

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalAiTest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalAiTest

    @JsName("C")
    public fun copy(other: UObject): FunctionalAiTest

    @JsName("C")
    public fun copy(other: Any): FunctionalAiTest
  }
}

public open external class AutomationPerformaceHelper(
  outer: UObject,
) : UObject {
  @JsName("WriteLogFile")
  public open fun writeLogFile(captureDir: String, captureExtension: String): Unit

  @JsName("TriggerGPUTraceIfRecordFallsBelowBudget")
  public open fun triggerGpuTraceIfRecordFallsBelowBudget(): Unit

  @JsName("Tick")
  public open fun tick(deltaSeconds: Number): Unit

  @JsName("StopCPUProfiling")
  public open fun stopCpuProfiling(): Unit

  @JsName("StartCPUProfiling")
  public open fun startCpuProfiling(): Unit

  @JsName("Sample")
  public open fun sample(deltaSeconds: Number): Unit

  @JsName("OnBeginTests")
  public open fun onBeginTests(): Unit

  @JsName("OnAllTestsComplete")
  public open fun onAllTestsComplete(): Unit

  @JsName("IsRecording")
  public open fun isRecording(): Boolean

  @JsName("IsCurrentRecordWithinRenderThreadBudget")
  public open fun isCurrentRecordWithinRenderThreadBudget(): Boolean

  @JsName("IsCurrentRecordWithinGPUBudget")
  public open fun isCurrentRecordWithinGpuBudget(): Boolean

  @JsName("IsCurrentRecordWithinGameThreadBudget")
  public open fun isCurrentRecordWithinGameThreadBudget(): Boolean

  @JsName("EndStatsFile")
  public open fun endStatsFile(): Unit

  @JsName("EndRecordingBaseline")
  public open fun endRecordingBaseline(): Unit

  @JsName("EndRecording")
  public open fun endRecording(): Unit

  @JsName("BeginStatsFile")
  public open fun beginStatsFile(recordName: String): Unit

  @JsName("BeginRecordingBaseline")
  public open fun beginRecordingBaseline(recordName: String): Unit

  @JsName("BeginRecording")
  public open fun beginRecording(
    recordName: String,
    inGpuBudget: Number,
    inRenderThreadBudget: Number,
    inGameThreadBudget: Number,
  ): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AutomationPerformaceHelper

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AutomationPerformaceHelper

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AutomationPerformaceHelper

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AutomationPerformaceHelper

    @JsName("C")
    public fun copy(other: UObject): AutomationPerformaceHelper

    @JsName("C")
    public fun copy(other: Any): AutomationPerformaceHelper
  }
}

public open external class FunctionalTestGameMode(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : GameModeBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestGameMode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestGameMode

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestGameMode

    @JsName("C")
    public fun copy(other: Any): FunctionalTestGameMode
  }
}

public open external class FunctionalTestingManager(
  outer: UObject,
) : BlueprintFunctionLibrary {
  @JsName("TestsLeft")
  public open var testsLeft: Array<FunctionalTest>

  @JsName("AllTests")
  public open var allTests: Array<FunctionalTest>

  @JsName("OnSetupTests")
  public open var onSetupTests: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnTestsComplete")
  public open var onTestsComplete: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("OnTestsBegin")
  public open var onTestsBegin: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FunctionalTestingManager

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FunctionalTestingManager

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestingManager

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestingManager

    @JsName("RunAllFunctionalTests")
    public fun runAllFunctionalTests(
      worldContextObject: UObject,
      newLog: Boolean,
      runLooped: Boolean,
      failedTestsReproString: String,
    ): Boolean

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestingManager

    @JsName("C")
    public fun copy(other: Any): FunctionalTestingManager
  }
}

public open external class PhasedAutomationActorBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("OnFunctionalTestingComplete")
  public open fun onFunctionalTestingComplete(): Unit

  @JsName("OnFunctionalTestingBegin")
  public open fun onFunctionalTestingBegin(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhasedAutomationActorBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhasedAutomationActorBase

    @JsName("C")
    public fun copy(other: UObject): PhasedAutomationActorBase

    @JsName("C")
    public fun copy(other: Any): PhasedAutomationActorBase
  }
}

public open external class FunctionalTestLevelScript(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : LevelScriptActor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestLevelScript

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestLevelScript

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestLevelScript

    @JsName("C")
    public fun copy(other: Any): FunctionalTestLevelScript
  }
}

public open external class FunctionalTestUtilityLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FunctionalTestUtilityLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FunctionalTestUtilityLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestUtilityLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestUtilityLibrary

    @JsName("TraceChannelTestUtil")
    public fun traceChannelTestUtil(
      worldContextObject: UObject,
      batchOptions: TraceChannelTestBatchOptions,
      start: Vector,
      end: Vector,
      sphereCapsuleRadius: Number,
      capsuleHalfHeight: Number,
      boxHalfSize: Vector,
      orientation: Rotator,
      traceChannel: String,
      objectTypes: Array<String>,
      profileName: String,
      traceComplex: Boolean,
      actorsToIgnore: Array<Actor>,
      ignoreSelf: Boolean,
      drawDebugType: String,
      traceColor: LinearColor,
      traceHitColor: LinearColor,
      drawTime: Number,
    ): TraceQueryTestResults

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestUtilityLibrary

    @JsName("C")
    public fun copy(other: Any): FunctionalTestUtilityLibrary
  }
}

public open external class ScreenshotFunctionalTestBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : FunctionalTest {
  @JsName("Notes")
  public open var notes: String

  @JsName("ScreenshotCamera")
  public open var screenshotCamera: CameraComponent

  @JsName("ScreenshotOptions")
  public open var screenshotOptions: AutomationScreenshotOptions

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ScreenshotFunctionalTestBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ScreenshotFunctionalTestBase

    @JsName("C")
    public fun copy(other: UObject): ScreenshotFunctionalTestBase

    @JsName("C")
    public fun copy(other: Any): ScreenshotFunctionalTestBase
  }
}

@JsName("EWidgetTestAppearLocation")
public external object WidgetTestAppearLocation {
  public var Viewport: String

  public var PlayerScreen: String

  @JsName("EWidgetTestAppearLocation_MAX")
  public var Max: String
}

@JsName("FunctionalUIScreenshotTest")
public open external class FunctionalUiScreenshotTest(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : ScreenshotFunctionalTestBase {
  @JsName("WidgetClass")
  public open var widgetClass: UnrealEngineClass

  @JsName("SpawnedWidget")
  public open var spawnedWidget: UserWidget

  @JsName("WidgetLocation")
  public open var widgetLocation: String

  @JsName("ScreenshotRT")
  public open var screenshotRt: TextureRenderTarget2d

  @JsName("bHideDebugCanvas")
  public open var hideDebugCanvas: Boolean

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalUiScreenshotTest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalUiScreenshotTest

    @JsName("C")
    public fun copy(other: UObject): FunctionalUiScreenshotTest

    @JsName("C")
    public fun copy(other: Any): FunctionalUiScreenshotTest
  }
}

public open external class GroundTruthData(
  outer: UObject,
) : UObject {
  @JsName("bResetGroundTruth")
  public open var resetGroundTruth: Boolean

  @JsName("ObjectData")
  public open var objectData: UObject

  @JsName("SaveObject")
  public open fun saveObject(groundTruth: UObject): Unit

  @JsName("LoadObject")
  public open fun loadObject(): UObject

  @JsName("CanModify")
  public open fun canModify(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GroundTruthData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GroundTruthData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GroundTruthData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GroundTruthData

    @JsName("C")
    public fun copy(other: UObject): GroundTruthData

    @JsName("C")
    public fun copy(other: Any): GroundTruthData
  }
}

public open external class ScreenshotFunctionalTest(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : ScreenshotFunctionalTestBase {
  @JsName("bCameraCutOnScreenshotPrep")
  public open var cameraCutOnScreenshotPrep: Boolean

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ScreenshotFunctionalTest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ScreenshotFunctionalTest

    @JsName("C")
    public fun copy(other: UObject): ScreenshotFunctionalTest

    @JsName("C")
    public fun copy(other: Any): ScreenshotFunctionalTest
  }
}

public open external class TestPhaseComponent(
  outer: UObject,
) : SceneComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestPhaseComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestPhaseComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestPhaseComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestPhaseComponent

    @JsName("C")
    public fun copy(other: UObject): TestPhaseComponent

    @JsName("C")
    public fun copy(other: Any): TestPhaseComponent
  }
}

@JsName("AIGraph")
public open external class AiGraph(
  outer: UObject,
) : EdGraph {
  @JsName("GraphVersion")
  public open var graphVersion: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AiGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AiGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AiGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AiGraph

    @JsName("C")
    public fun copy(other: UObject): AiGraph

    @JsName("C")
    public fun copy(other: Any): AiGraph
  }
}

public open external class GraphNodeClassData {
  @JsName("AssetName")
  public open var assetName: String

  @JsName("GeneratedClassPackage")
  public open var generatedClassPackage: String

  @JsName("ClassName")
  public open var className: String

  @JsName("Category")
  public open var category: String

  public open fun clone(): GraphNodeClassData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GraphNodeClassData

    @JsName("C")
    public fun copy(other: Any): GraphNodeClassData
  }
}

@JsName("AIGraphNode")
public open external class AiGraphNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("ClassData")
  public open var classData: GraphNodeClassData

  @JsName("NodeInstance")
  public open var nodeInstance: UObject

  @JsName("ParentNode")
  public open var parentNode: AiGraphNode

  @JsName("SubNodes")
  public open var subNodes: Array<AiGraphNode>

  @JsName("CopySubNodeIndex")
  public open var copySubNodeIndex: Number

  @JsName("bIsReadOnly")
  public open var isReadOnly: Boolean

  @JsName("bIsSubNode")
  public open var isSubNode: Boolean

  @JsName("ErrorMessage")
  public open var errorMessage: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AiGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AiGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AiGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AiGraphNode

    @JsName("C")
    public fun copy(other: UObject): AiGraphNode

    @JsName("C")
    public fun copy(other: Any): AiGraphNode
  }
}

@JsName("AIGraphSchema")
public open external class AiGraphSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AiGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AiGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AiGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AiGraphSchema

    @JsName("C")
    public fun copy(other: UObject): AiGraphSchema

    @JsName("C")
    public fun copy(other: Any): AiGraphSchema
  }
}

@JsName("K2Node_AIMoveTo")
public open external class K2NodeAiMoveTo(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeAiMoveTo

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeAiMoveTo

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeAiMoveTo

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeAiMoveTo

    @JsName("C")
    public fun copy(other: UObject): K2NodeAiMoveTo

    @JsName("C")
    public fun copy(other: Any): K2NodeAiMoveTo
  }
}

public open external class BehaviorTreeDecoratorGraph(
  outer: UObject,
) : EdGraph {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeDecoratorGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeDecoratorGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeDecoratorGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeDecoratorGraph

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeDecoratorGraph

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeDecoratorGraph
  }
}

public open external class BehaviorTreeDecoratorGraphNode(
  outer: UObject,
) : EdGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeDecoratorGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeDecoratorGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeDecoratorGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeDecoratorGraphNode

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeDecoratorGraphNode

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeDecoratorGraphNode
  }
}

@JsName("BehaviorTreeDecoratorGraphNode_Decorator")
public open external class BehaviorTreeDecoratorGraphNodeDecorator(
  outer: UObject,
) : BehaviorTreeDecoratorGraphNode {
  @JsName("NodeInstance")
  public open var nodeInstance: UObject

  @JsName("ClassData")
  public open var classData: GraphNodeClassData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeDecoratorGraphNodeDecorator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeDecoratorGraphNodeDecorator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeDecoratorGraphNodeDecorator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeDecoratorGraphNodeDecorator

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeDecoratorGraphNodeDecorator

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeDecoratorGraphNodeDecorator
  }
}

@JsName("EDecoratorLogicMode")
public external object DecoratorLogicMode {
  public var Sink: String

  public var And: String

  public var Or: String

  public var Not: String

  @JsName("EDecoratorLogicMode_MAX")
  public var Max: String
}

@JsName("BehaviorTreeDecoratorGraphNode_Logic")
public open external class BehaviorTreeDecoratorGraphNodeLogic(
  outer: UObject,
) : BehaviorTreeDecoratorGraphNode {
  @JsName("LogicMode")
  public open var logicMode: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeDecoratorGraphNodeLogic

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeDecoratorGraphNodeLogic

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeDecoratorGraphNodeLogic

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeDecoratorGraphNodeLogic

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeDecoratorGraphNodeLogic

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeDecoratorGraphNodeLogic
  }
}

public open external class BehaviorTreeEditorTypes(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeEditorTypes

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeEditorTypes

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeEditorTypes

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeEditorTypes

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeEditorTypes

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeEditorTypes
  }
}

public open external class BehaviorTreeFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeFactory

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeFactory

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeFactory
  }
}

public open external class BehaviorTreeGraph(
  outer: UObject,
) : AiGraph {
  @JsName("ModCounter")
  public open var modCounter: Number

  @JsName("bIsUsingModCounter")
  public open var isUsingModCounter: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraph

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraph

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraph
  }
}

public open external class BehaviorTreeGraphNode(
  outer: UObject,
) : AiGraphNode {
  @JsName("Decorators")
  public open var decorators: Array<BehaviorTreeGraphNode>

  @JsName("Services")
  public open var services: Array<BehaviorTreeGraphNode>

  @JsName("bInjectedNode")
  public open var injectedNode: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNode

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNode

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNode
  }
}

@JsName("BehaviorTreeGraphNode_Composite")
public open external class BehaviorTreeGraphNodeComposite(
  outer: UObject,
) : BehaviorTreeGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeComposite

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeComposite

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeComposite

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeComposite

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeComposite

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeComposite
  }
}

@JsName("BehaviorTreeGraphNode_CompositeDecorator")
public open external class BehaviorTreeGraphNodeCompositeDecorator(
  outer: UObject,
) : BehaviorTreeGraphNode {
  @JsName("BoundGraph")
  public open var boundGraph: EdGraph

  @JsName("CompositeName")
  public open var compositeName: String

  @JsName("bShowOperations")
  public open var showOperations: Boolean

  @JsName("bCanAbortFlow")
  public open var canAbortFlow: Boolean

  @JsName("ParentNodeInstance")
  public open var parentNodeInstance: BtCompositeNode

  @JsName("CachedDescription")
  public open var cachedDescription: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeCompositeDecorator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeCompositeDecorator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeCompositeDecorator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeCompositeDecorator

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeCompositeDecorator

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeCompositeDecorator
  }
}

@JsName("BehaviorTreeGraphNode_Decorator")
public open external class BehaviorTreeGraphNodeDecorator(
  outer: UObject,
) : BehaviorTreeGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeDecorator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeDecorator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeDecorator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeDecorator

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeDecorator

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeDecorator
  }
}

@JsName("BehaviorTreeGraphNode_Root")
public open external class BehaviorTreeGraphNodeRoot(
  outer: UObject,
) : BehaviorTreeGraphNode {
  @JsName("BlackboardAsset")
  public open var blackboardAsset: BlackboardData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeRoot

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeRoot

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeRoot

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeRoot

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeRoot

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeRoot
  }
}

@JsName("BehaviorTreeGraphNode_Service")
public open external class BehaviorTreeGraphNodeService(
  outer: UObject,
) : BehaviorTreeGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeService

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeService

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeService

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeService

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeService

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeService
  }
}

@JsName("BehaviorTreeGraphNode_SimpleParallel")
public open external class BehaviorTreeGraphNodeSimpleParallel(
  outer: UObject,
) : BehaviorTreeGraphNodeComposite {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeSimpleParallel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeSimpleParallel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeSimpleParallel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeSimpleParallel

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeSimpleParallel

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeSimpleParallel
  }
}

@JsName("BehaviorTreeGraphNode_Task")
public open external class BehaviorTreeGraphNodeTask(
  outer: UObject,
) : BehaviorTreeGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeTask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeTask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeTask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeTask

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeTask

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeTask
  }
}

@JsName("BehaviorTreeGraphNode_SubtreeTask")
public open external class BehaviorTreeGraphNodeSubtreeTask(
  outer: UObject,
) : BehaviorTreeGraphNodeTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BehaviorTreeGraphNodeSubtreeTask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BehaviorTreeGraphNodeSubtreeTask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BehaviorTreeGraphNodeSubtreeTask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BehaviorTreeGraphNodeSubtreeTask

    @JsName("C")
    public fun copy(other: UObject): BehaviorTreeGraphNodeSubtreeTask

    @JsName("C")
    public fun copy(other: Any): BehaviorTreeGraphNodeSubtreeTask
  }
}

public open external class BlackboardDataFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BlackboardDataFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BlackboardDataFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BlackboardDataFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BlackboardDataFactory

    @JsName("C")
    public fun copy(other: UObject): BlackboardDataFactory

    @JsName("C")
    public fun copy(other: Any): BlackboardDataFactory
  }
}

@JsName("EdGraphSchema_BehaviorTree")
public open external class EdGraphSchemaBehaviorTree(
  outer: UObject,
) : AiGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphSchemaBehaviorTree

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphSchemaBehaviorTree

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphSchemaBehaviorTree

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphSchemaBehaviorTree

    @JsName("C")
    public fun copy(other: UObject): EdGraphSchemaBehaviorTree

    @JsName("C")
    public fun copy(other: Any): EdGraphSchemaBehaviorTree
  }
}

@JsName("EdGraphSchema_BehaviorTreeDecorator")
public open external class EdGraphSchemaBehaviorTreeDecorator(
  outer: UObject,
) : EdGraphSchema {
  @JsName("PC_Boolean")
  public open var pcBoolean: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphSchemaBehaviorTreeDecorator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphSchemaBehaviorTreeDecorator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphSchemaBehaviorTreeDecorator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphSchemaBehaviorTreeDecorator

    @JsName("C")
    public fun copy(other: UObject): EdGraphSchemaBehaviorTreeDecorator

    @JsName("C")
    public fun copy(other: Any): EdGraphSchemaBehaviorTreeDecorator
  }
}

@JsName("K2Node_LatentGameplayTaskCall")
public open external class K2NodeLatentGameplayTaskCall(
  outer: UObject,
) : K2NodeBaseAsyncTask {
  @JsName("SpawnParamPins")
  public open var spawnParamPins: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeLatentGameplayTaskCall

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeLatentGameplayTaskCall

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeLatentGameplayTaskCall

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeLatentGameplayTaskCall

    @JsName("C")
    public fun copy(other: UObject): K2NodeLatentGameplayTaskCall

    @JsName("C")
    public fun copy(other: Any): K2NodeLatentGameplayTaskCall
  }
}

public open external class Overlays(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): Overlays

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): Overlays

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Overlays

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Overlays

    @JsName("C")
    public fun copy(other: UObject): Overlays

    @JsName("C")
    public fun copy(other: Any): Overlays
  }
}

public open external class OverlayItem {
  @JsName("StartTime")
  public open var startTime: Timespan

  @JsName("EndTime")
  public open var endTime: Timespan

  public open var text: String

  public open var position: Vector2d

  public open fun clone(): OverlayItem

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): OverlayItem

    @JsName("C")
    public fun copy(other: Any): OverlayItem
  }
}

public open external class BasicOverlays(
  outer: UObject,
) : Overlays {
  @JsName("Overlays")
  public open var overlays: Array<OverlayItem>

  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BasicOverlays

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BasicOverlays

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BasicOverlays

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BasicOverlays

    @JsName("C")
    public fun copy(other: UObject): BasicOverlays

    @JsName("C")
    public fun copy(other: Any): BasicOverlays
  }
}

public open external class LocalizedOverlays(
  outer: UObject,
) : Overlays {
  @JsName("DefaultOverlays")
  public open var defaultOverlays: BasicOverlays

  @JsName("LocaleToOverlaysMap")
  public open var localeToOverlaysMap: Any

  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LocalizedOverlays

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LocalizedOverlays

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LocalizedOverlays

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LocalizedOverlays

    @JsName("C")
    public fun copy(other: UObject): LocalizedOverlays

    @JsName("C")
    public fun copy(other: Any): LocalizedOverlays
  }
}

public open external class BasicOverlaysFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BasicOverlaysFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BasicOverlaysFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BasicOverlaysFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BasicOverlaysFactory

    @JsName("C")
    public fun copy(other: UObject): BasicOverlaysFactory

    @JsName("C")
    public fun copy(other: Any): BasicOverlaysFactory
  }
}

public open external class BasicOverlaysFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BasicOverlaysFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): BasicOverlaysFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BasicOverlaysFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BasicOverlaysFactoryNew

    @JsName("C")
    public fun copy(other: UObject): BasicOverlaysFactoryNew

    @JsName("C")
    public fun copy(other: Any): BasicOverlaysFactoryNew
  }
}

public open external class LocalizedOverlaysFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LocalizedOverlaysFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LocalizedOverlaysFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LocalizedOverlaysFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LocalizedOverlaysFactoryNew

    @JsName("C")
    public fun copy(other: UObject): LocalizedOverlaysFactoryNew

    @JsName("C")
    public fun copy(other: Any): LocalizedOverlaysFactoryNew
  }
}

public open external class ReimportBasicOverlaysFactory(
  outer: UObject,
) : BasicOverlaysFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReimportBasicOverlaysFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReimportBasicOverlaysFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReimportBasicOverlaysFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReimportBasicOverlaysFactory

    @JsName("C")
    public fun copy(other: UObject): ReimportBasicOverlaysFactory

    @JsName("C")
    public fun copy(other: Any): ReimportBasicOverlaysFactory
  }
}

@JsName("EClothingWindMethodNv")
public external object ClothingWindMethodNv {
  public var Legacy: String

  public var Accurate: String

  @JsName("EClothingWindMethodNv_MAX")
  public var Max: String
}

public open external class ClothConstraintSetupNv {
  @JsName("Stiffness")
  public open var stiffness: Number

  @JsName("StiffnessMultiplier")
  public open var stiffnessMultiplier: Number

  @JsName("StretchLimit")
  public open var stretchLimit: Number

  @JsName("CompressionLimit")
  public open var compressionLimit: Number

  public open fun clone(): ClothConstraintSetupNv

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ClothConstraintSetupNv

    @JsName("C")
    public fun copy(other: Any): ClothConstraintSetupNv
  }
}

public open external class ClothConfigNv(
  outer: UObject,
) : ClothConfigCommon {
  @JsName("ClothingWindMethod")
  public open var clothingWindMethod: String

  @JsName("VerticalConstraint")
  public open var verticalConstraint: ClothConstraintSetupNv

  @JsName("HorizontalConstraint")
  public open var horizontalConstraint: ClothConstraintSetupNv

  @JsName("BendConstraint")
  public open var bendConstraint: ClothConstraintSetupNv

  @JsName("ShearConstraint")
  public open var shearConstraint: ClothConstraintSetupNv

  @JsName("SelfCollisionRadius")
  public open var selfCollisionRadius: Number

  @JsName("SelfCollisionStiffness")
  public open var selfCollisionStiffness: Number

  @JsName("SelfCollisionCullScale")
  public open var selfCollisionCullScale: Number

  @JsName("Damping")
  public open var damping: Vector

  @JsName("Friction")
  public open var friction: Number

  @JsName("WindDragCoefficient")
  public open var windDragCoefficient: Number

  @JsName("WindLiftCoefficient")
  public open var windLiftCoefficient: Number

  @JsName("LinearDrag")
  public open var linearDrag: Vector

  @JsName("AngularDrag")
  public open var angularDrag: Vector

  @JsName("LinearInertiaScale")
  public open var linearInertiaScale: Vector

  @JsName("AngularInertiaScale")
  public open var angularInertiaScale: Vector

  @JsName("CentrifugalInertiaScale")
  public open var centrifugalInertiaScale: Vector

  @JsName("SolverFrequency")
  public open var solverFrequency: Number

  @JsName("StiffnessFrequency")
  public open var stiffnessFrequency: Number

  @JsName("GravityScale")
  public open var gravityScale: Number

  @JsName("GravityOverride")
  public open var gravityOverride: Vector

  @JsName("bUseGravityOverride")
  public open var useGravityOverride: Boolean

  @JsName("TetherStiffness")
  public open var tetherStiffness: Number

  @JsName("TetherLimit")
  public open var tetherLimit: Number

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("AnimDriveSpringStiffness")
  public open var animDriveSpringStiffness: Number

  @JsName("AnimDriveDamperStiffness")
  public open var animDriveDamperStiffness: Number

  @JsName("WindMethod")
  public open var windMethod: String

  @JsName("VerticalConstraintConfig")
  public open var verticalConstraintConfig: ClothConstraintSetupLegacy

  @JsName("HorizontalConstraintConfig")
  public open var horizontalConstraintConfig: ClothConstraintSetupLegacy

  @JsName("BendConstraintConfig")
  public open var bendConstraintConfig: ClothConstraintSetupLegacy

  @JsName("ShearConstraintConfig")
  public open var shearConstraintConfig: ClothConstraintSetupLegacy

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothConfigNv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothConfigNv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothConfigNv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothConfigNv

    @JsName("C")
    public fun copy(other: UObject): ClothConfigNv

    @JsName("C")
    public fun copy(other: Any): ClothConfigNv
  }
}

public open external class ClothingSimulationFactoryNv(
  outer: UObject,
) : ClothingSimulationFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothingSimulationFactoryNv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothingSimulationFactoryNv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothingSimulationFactoryNv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothingSimulationFactoryNv

    @JsName("C")
    public fun copy(other: UObject): ClothingSimulationFactoryNv

    @JsName("C")
    public fun copy(other: Any): ClothingSimulationFactoryNv
  }
}

public open external class ClothingSimulationInteractorNv(
  outer: UObject,
) : ClothingSimulationInteractor {
  @JsName("SetAnimDriveDamperStiffness")
  public open fun setAnimDriveDamperStiffness(inStiffness: Number): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothingSimulationInteractorNv

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothingSimulationInteractorNv

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothingSimulationInteractorNv

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothingSimulationInteractorNv

    @JsName("C")
    public fun copy(other: UObject): ClothingSimulationInteractorNv

    @JsName("C")
    public fun copy(other: Any): ClothingSimulationInteractorNv
  }
}

@JsName("ClothPhysicalMeshDataNv_Legacy")
public open external class ClothPhysicalMeshDataNvLegacy(
  outer: UObject,
) : ClothPhysicalMeshDataBaseLegacy {
  @JsName("MaxDistances")
  public open var maxDistances: Array<Number>

  @JsName("BackstopDistances")
  public open var backstopDistances: Array<Number>

  @JsName("BackstopRadiuses")
  public open var backstopRadiuses: Array<Number>

  @JsName("AnimDriveMultipliers")
  public open var animDriveMultipliers: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPhysicalMeshDataNvLegacy

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPhysicalMeshDataNvLegacy

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPhysicalMeshDataNvLegacy

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPhysicalMeshDataNvLegacy

    @JsName("C")
    public fun copy(other: UObject): ClothPhysicalMeshDataNvLegacy

    @JsName("C")
    public fun copy(other: Any): ClothPhysicalMeshDataNvLegacy
  }
}

public open external class ClothingAssetFactory(
  outer: UObject,
) : ClothingAssetFactoryBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothingAssetFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothingAssetFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothingAssetFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothingAssetFactory

    @JsName("C")
    public fun copy(other: UObject): ClothingAssetFactory

    @JsName("C")
    public fun copy(other: Any): ClothingAssetFactory
  }
}

public open external class AnimDataController(
  outer: UObject,
) : UObject {
  @JsName("Model")
  public open var model: AnimDataModel

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimDataController

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimDataController

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimDataController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimDataController

    @JsName("C")
    public fun copy(other: UObject): AnimDataController

    @JsName("C")
    public fun copy(other: Any): AnimDataController
  }
}

@JsName("EAFSActiveType")
public external object AFSActiveType {
  public var None: String

  @JsName("USBOnly")
  public var UsbOnly: String

  public var NetworkOnly: String

  public var Combined: String

  @JsName("EAFSActiveType_MAX")
  public var Max: String
}

@JsName("AndroidFileServerBPLibrary")
public open external class AndroidFileServerBpLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AndroidFileServerBpLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AndroidFileServerBpLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AndroidFileServerBpLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AndroidFileServerBpLibrary

    @JsName("StopFileServer")
    public fun stopFileServer(USB: Boolean, network: Boolean): Boolean

    @JsName("StartFileServer")
    public fun startFileServer(
      USB: Boolean,
      network: Boolean,
      port: Number,
    ): Boolean

    @JsName("IsFileServerRunning")
    public fun isFileServerRunning(): String

    @JsName("C")
    public fun copy(other: UObject): AndroidFileServerBpLibrary

    @JsName("C")
    public fun copy(other: Any): AndroidFileServerBpLibrary
  }
}

@JsName("EdGraphSchema_EnvironmentQuery")
public open external class EdGraphSchemaEnvironmentQuery(
  outer: UObject,
) : AiGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphSchemaEnvironmentQuery

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphSchemaEnvironmentQuery

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphSchemaEnvironmentQuery

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphSchemaEnvironmentQuery

    @JsName("C")
    public fun copy(other: UObject): EdGraphSchemaEnvironmentQuery

    @JsName("C")
    public fun copy(other: Any): EdGraphSchemaEnvironmentQuery
  }
}

public open external class EnvironmentQueryFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryFactory

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryFactory

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryFactory
  }
}

public open external class EnvironmentQueryGraph(
  outer: UObject,
) : AiGraph {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryGraph

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryGraph

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryGraph
  }
}

public open external class EnvironmentQueryGraphNode(
  outer: UObject,
) : AiGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryGraphNode

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryGraphNode

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryGraphNode
  }
}

@JsName("EnvironmentQueryGraphNode_Option")
public open external class EnvironmentQueryGraphNodeOption(
  outer: UObject,
) : EnvironmentQueryGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryGraphNodeOption

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryGraphNodeOption

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryGraphNodeOption

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryGraphNodeOption

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryGraphNodeOption

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryGraphNodeOption
  }
}

@JsName("EnvironmentQueryGraphNode_Root")
public open external class EnvironmentQueryGraphNodeRoot(
  outer: UObject,
) : EnvironmentQueryGraphNode {
  @JsName("DebugMessages")
  public open var debugMessages: Array<String>

  @JsName("bHasDebugError")
  public open var hasDebugError: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryGraphNodeRoot

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryGraphNodeRoot

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryGraphNodeRoot

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryGraphNodeRoot

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryGraphNodeRoot

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryGraphNodeRoot
  }
}

@JsName("EnvironmentQueryGraphNode_Test")
public open external class EnvironmentQueryGraphNodeTest(
  outer: UObject,
) : EnvironmentQueryGraphNode {
  @JsName("TestWeightPct")
  public open var testWeightPct: Number

  @JsName("bHasNamedWeight")
  public open var hasNamedWeight: Boolean

  @JsName("bTestEnabled")
  public open var testEnabled: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EnvironmentQueryGraphNodeTest

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EnvironmentQueryGraphNodeTest

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EnvironmentQueryGraphNodeTest

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EnvironmentQueryGraphNodeTest

    @JsName("C")
    public fun copy(other: UObject): EnvironmentQueryGraphNodeTest

    @JsName("C")
    public fun copy(other: Any): EnvironmentQueryGraphNodeTest
  }
}

public open external class CameraAnimationSequenceSubsystem(
  outer: UObject,
) : WorldSubsystem {
  @JsName("Linker")
  public open var linker: MovieSceneEntitySystemLinker

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CameraAnimationSequenceSubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CameraAnimationSequenceSubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CameraAnimationSequenceSubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CameraAnimationSequenceSubsystem

    @JsName("C")
    public fun copy(other: UObject): CameraAnimationSequenceSubsystem

    @JsName("C")
    public fun copy(other: Any): CameraAnimationSequenceSubsystem
  }
}

public open external class SequenceCameraShakeTestUtil(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SequenceCameraShakeTestUtil

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SequenceCameraShakeTestUtil

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SequenceCameraShakeTestUtil

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SequenceCameraShakeTestUtil

    @JsName("GetPostProcessBlendCache")
    public fun getPostProcessBlendCache(
      playerController: PlayerController,
      ppIndex: Number,
      outPpSettings: PostProcessSettings,
      outPpBlendWeight: Number,
    ): Object277

    @JsName("GetLastFrameCameraCachePOV")
    public fun getLastFrameCameraCachePov(playerController: PlayerController): MinimalViewInfo

    @JsName("GetCameraCachePOV")
    public fun getCameraCachePov(playerController: PlayerController): MinimalViewInfo

    @JsName("C")
    public fun copy(other: UObject): SequenceCameraShakeTestUtil

    @JsName("C")
    public fun copy(other: Any): SequenceCameraShakeTestUtil
  }
}

@JsName("T$819")
public external interface Object819 {
  @JsName("OutActor")
  public var outActor: TemplateSequenceActor

  @JsName("$")
  public var value: TemplateSequencePlayer
}

public open external class TemplateSequencePlayer(
  outer: UObject,
) : MovieSceneSequencePlayer {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequencePlayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TemplateSequencePlayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequencePlayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequencePlayer

    @JsName("CreateTemplateSequencePlayer")
    public fun createTemplateSequencePlayer(
      worldContextObject: UObject,
      templateSequence: TemplateSequence,
      settings: MovieSceneSequencePlaybackSettings,
      outActor: TemplateSequenceActor,
    ): Object819

    @JsName("C")
    public fun copy(other: UObject): TemplateSequencePlayer

    @JsName("C")
    public fun copy(other: Any): TemplateSequencePlayer
  }
}

public open external class TemplateSequenceBindingOverrideData {
  @JsName("UObject")
  public open var uObject: Any

  @JsName("bOverridesDefault")
  public open var overridesDefault: Boolean

  public open fun clone(): TemplateSequenceBindingOverrideData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TemplateSequenceBindingOverrideData

    @JsName("C")
    public fun copy(other: Any): TemplateSequenceBindingOverrideData
  }
}

public open external class TemplateSequenceActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("PlaybackSettings")
  public open var playbackSettings: MovieSceneSequencePlaybackSettings

  @JsName("SequencePlayer")
  public open var sequencePlayer: TemplateSequencePlayer

  @JsName("TemplateSequence")
  public open var templateSequence: SoftObjectPath

  @JsName("BindingOverride")
  public open var bindingOverride: TemplateSequenceBindingOverrideData

  @JsName("SetSequence")
  public open fun setSequence(inSequence: TemplateSequence): Unit

  @JsName("SetBinding")
  public open fun setBinding(actor: Actor, overridesDefault: Boolean): Unit

  @JsName("LoadSequence")
  public open fun loadSequence(): TemplateSequence

  @JsName("GetSequencePlayer")
  public open fun getSequencePlayer(): TemplateSequencePlayer

  @JsName("GetSequence")
  public open fun getSequence(): TemplateSequence

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequenceActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequenceActor

    @JsName("C")
    public fun copy(other: UObject): TemplateSequenceActor

    @JsName("C")
    public fun copy(other: Any): TemplateSequenceActor
  }
}

@JsName("ETemplateSectionPropertyScaleType")
public external object TemplateSectionPropertyScaleType {
  public var FloatProperty: String

  public var TransformPropertyLocationOnly: String

  public var TransformPropertyRotationOnly: String

  @JsName("ETemplateSectionPropertyScaleType_MAX")
  public var Max: String
}

public open external class TemplateSectionPropertyScale {
  @JsName("ObjectBinding")
  public open var objectBinding: Guid

  @JsName("PropertyBinding")
  public open var propertyBinding: MovieScenePropertyBinding

  @JsName("PropertyScaleType")
  public open var propertyScaleType: String

  @JsName("FloatChannel")
  public open var floatChannel: MovieSceneFloatChannel

  public open fun clone(): TemplateSectionPropertyScale

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): TemplateSectionPropertyScale

    @JsName("C")
    public fun copy(other: Any): TemplateSectionPropertyScale
  }
}

public open external class TemplateSequenceSection(
  outer: UObject,
) : MovieSceneSubSection {
  @JsName("PropertyScales")
  public open var propertyScales: Array<TemplateSectionPropertyScale>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequenceSection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TemplateSequenceSection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequenceSection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequenceSection

    @JsName("C")
    public fun copy(other: UObject): TemplateSequenceSection

    @JsName("C")
    public fun copy(other: Any): TemplateSequenceSection
  }
}

public open external class TemplateSequenceSystem(
  outer: UObject,
) : MovieSceneEntitySystem {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequenceSystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TemplateSequenceSystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequenceSystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequenceSystem

    @JsName("C")
    public fun copy(other: UObject): TemplateSequenceSystem

    @JsName("C")
    public fun copy(other: Any): TemplateSequenceSystem
  }
}

public open external class TemplateSequencePropertyScalingInstantiatorSystem(
  outer: UObject,
) : MovieSceneEntitySystem {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequencePropertyScalingInstantiatorSystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        TemplateSequencePropertyScalingInstantiatorSystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequencePropertyScalingInstantiatorSystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequencePropertyScalingInstantiatorSystem

    @JsName("C")
    public fun copy(other: UObject): TemplateSequencePropertyScalingInstantiatorSystem

    @JsName("C")
    public fun copy(other: Any): TemplateSequencePropertyScalingInstantiatorSystem
  }
}

public open external class TemplateSequencePropertyScalingEvaluatorSystem(
  outer: UObject,
) : MovieSceneEntitySystem {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequencePropertyScalingEvaluatorSystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        TemplateSequencePropertyScalingEvaluatorSystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequencePropertyScalingEvaluatorSystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequencePropertyScalingEvaluatorSystem

    @JsName("C")
    public fun copy(other: UObject): TemplateSequencePropertyScalingEvaluatorSystem

    @JsName("C")
    public fun copy(other: Any): TemplateSequencePropertyScalingEvaluatorSystem
  }
}

public open external class TemplateSequenceTrack(
  outer: UObject,
) : MovieSceneSubTrack {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TemplateSequenceTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TemplateSequenceTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TemplateSequenceTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TemplateSequenceTrack

    @JsName("C")
    public fun copy(other: UObject): TemplateSequenceTrack

    @JsName("C")
    public fun copy(other: Any): TemplateSequenceTrack
  }
}

@JsName("ECameraAnimationEasingType")
public external object CameraAnimationEasingType {
  public var Linear: String

  public var Sinusoidal: String

  public var Quadratic: String

  public var Cubic: String

  public var Quartic: String

  public var Quintic: String

  public var Exponential: String

  public var Circular: String

  @JsName("ECameraAnimationEasingType_MAX")
  public var Max: String
}

@JsName("ECameraAnimationPlaySpace")
public external object CameraAnimationPlaySpace {
  public var CameraLocal: String

  public var World: String

  public var UserDefined: String

  @JsName("ECameraAnimationPlaySpace_MAX")
  public var Max: String
}

public open external class CameraAnimationParams {
  @JsName("PlayRate")
  public open var playRate: Number

  @JsName("Scale")
  public open var scale: Number

  @JsName("EaseInType")
  public open var easeInType: String

  @JsName("EaseInDuration")
  public open var easeInDuration: Number

  @JsName("EaseOutType")
  public open var easeOutType: String

  @JsName("EaseOutDuration")
  public open var easeOutDuration: Number

  @JsName("bLoop")
  public open var loop: Boolean

  @JsName("bRandomStartTime")
  public open var randomStartTime: Boolean

  @JsName("DurationOverride")
  public open var durationOverride: Number

  @JsName("PlaySpace")
  public open var playSpace: String

  @JsName("UserPlaySpaceRot")
  public open var userPlaySpaceRot: Rotator

  public open fun clone(): CameraAnimationParams

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CameraAnimationParams

    @JsName("C")
    public fun copy(other: Any): CameraAnimationParams
  }
}

public open external class CameraAnimationHandle {
  public open fun clone(): CameraAnimationHandle

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CameraAnimationHandle

    @JsName("C")
    public fun copy(other: Any): CameraAnimationHandle
  }
}

public open external class ActiveCameraAnimationInfo {
  @JsName("Sequence")
  public open var sequence: CameraAnimationSequence

  @JsName("Params")
  public open var params: CameraAnimationParams

  @JsName("Handle")
  public open var handle: CameraAnimationHandle

  @JsName("Player")
  public open var player: CameraAnimationSequencePlayer

  @JsName("CameraStandIn")
  public open var cameraStandIn: CameraAnimationSequenceCameraStandIn

  @JsName("EaseInCurrentTime")
  public open var easeInCurrentTime: Number

  @JsName("EaseOutCurrentTime")
  public open var easeOutCurrentTime: Number

  @JsName("bIsEasingIn")
  public open var isEasingIn: Boolean

  @JsName("bIsEasingOut")
  public open var isEasingOut: Boolean

  public open fun clone(): ActiveCameraAnimationInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ActiveCameraAnimationInfo

    @JsName("C")
    public fun copy(other: Any): ActiveCameraAnimationInfo
  }
}

public open external class CameraAnimationCameraModifier(
  outer: UObject,
) : CameraModifier {
  @JsName("ActiveAnimations")
  public open var activeAnimations: Array<ActiveCameraAnimationInfo>

  @JsName("InstanceSerialNumber")
  public open var instanceSerialNumber: Any

  @JsName("StopCameraAnimation")
  public open fun stopCameraAnimation(handle: CameraAnimationHandle, immediate: Boolean): Unit

  @JsName("StopAllCameraAnimationsOf")
  public open fun stopAllCameraAnimationsOf(sequence: CameraAnimationSequence, immediate: Boolean):
      Unit

  @JsName("StopAllCameraAnimations")
  public open fun stopAllCameraAnimations(immediate: Boolean): Unit

  @JsName("PlayCameraAnimation")
  public open fun playCameraAnimation(sequence: CameraAnimationSequence,
      params: CameraAnimationParams): CameraAnimationHandle

  @JsName("IsCameraAnimationActive")
  public open fun isCameraAnimationActive(handle: CameraAnimationHandle): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CameraAnimationCameraModifier

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CameraAnimationCameraModifier

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CameraAnimationCameraModifier

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CameraAnimationCameraModifier

    @JsName("GetCameraAnimationCameraModifierFromPlayerController")
    public
        fun getCameraAnimationCameraModifierFromPlayerController(playerController: PlayerController):
        CameraAnimationCameraModifier

    @JsName("GetCameraAnimationCameraModifierFromID")
    public fun getCameraAnimationCameraModifierFromId(worldContextObject: UObject,
        controllerId: Number): CameraAnimationCameraModifier

    @JsName("GetCameraAnimationCameraModifier")
    public fun getCameraAnimationCameraModifier(worldContextObject: UObject, playerIndex: Number):
        CameraAnimationCameraModifier

    @JsName("C")
    public fun copy(other: UObject): CameraAnimationCameraModifier

    @JsName("C")
    public fun copy(other: Any): CameraAnimationCameraModifier
  }
}

public open external class TestCameraShake(
  outer: UObject,
) : CameraShakeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestCameraShake

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestCameraShake

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestCameraShake

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestCameraShake

    @JsName("C")
    public fun copy(other: UObject): TestCameraShake

    @JsName("C")
    public fun copy(other: Any): TestCameraShake
  }
}

public open external class SimpleCameraShakePattern(
  outer: UObject,
) : CameraShakePattern {
  @JsName("Duration")
  public open var duration: Number

  @JsName("BlendInTime")
  public open var blendInTime: Number

  @JsName("BlendOutTime")
  public open var blendOutTime: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SimpleCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SimpleCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SimpleCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SimpleCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): SimpleCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): SimpleCameraShakePattern
  }
}

public open external class ConstantCameraShakePattern(
  outer: UObject,
) : SimpleCameraShakePattern {
  @JsName("LocationOffset")
  public open var locationOffset: Vector

  @JsName("RotationOffset")
  public open var rotationOffset: Rotator

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ConstantCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ConstantCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ConstantCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ConstantCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): ConstantCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): ConstantCameraShakePattern
  }
}

public open external class CompositeCameraShakePattern(
  outer: UObject,
) : CameraShakePattern {
  @JsName("ChildPatterns")
  public open var childPatterns: Array<CameraShakePattern>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CompositeCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CompositeCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CompositeCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CompositeCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): CompositeCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): CompositeCameraShakePattern
  }
}

public open external class DefaultCameraShakeBase(
  outer: UObject,
) : CameraShakeBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DefaultCameraShakeBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DefaultCameraShakeBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DefaultCameraShakeBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DefaultCameraShakeBase

    @JsName("C")
    public fun copy(other: UObject): DefaultCameraShakeBase

    @JsName("C")
    public fun copy(other: Any): DefaultCameraShakeBase
  }
}

public open external class MatineeCameraShakePattern(
  outer: UObject,
) : CameraShakePattern {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MatineeCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MatineeCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MatineeCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MatineeCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): MatineeCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): MatineeCameraShakePattern
  }
}

public open external class MovieSceneMatineeCameraShakeEvaluator(
  outer: UObject,
) : MovieSceneCameraShakeEvaluator {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneMatineeCameraShakeEvaluator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneMatineeCameraShakeEvaluator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneMatineeCameraShakeEvaluator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneMatineeCameraShakeEvaluator

    @JsName("C")
    public fun copy(other: UObject): MovieSceneMatineeCameraShakeEvaluator

    @JsName("C")
    public fun copy(other: Any): MovieSceneMatineeCameraShakeEvaluator
  }
}

public open external class MatineeCameraShakeFunctionLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MatineeCameraShakeFunctionLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MatineeCameraShakeFunctionLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MatineeCameraShakeFunctionLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MatineeCameraShakeFunctionLibrary

    @JsName("Conv_MatineeCameraShake")
    public fun convertMatineeCameraShake(cameraShake: CameraShakeBase): MatineeCameraShake

    @JsName("C")
    public fun copy(other: UObject): MatineeCameraShakeFunctionLibrary

    @JsName("C")
    public fun copy(other: Any): MatineeCameraShakeFunctionLibrary
  }
}

public open external class PerlinNoiseShaker {
  @JsName("Amplitude")
  public open var amplitude: Number

  @JsName("Frequency")
  public open var frequency: Number

  public open fun clone(): PerlinNoiseShaker

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PerlinNoiseShaker

    @JsName("C")
    public fun copy(other: Any): PerlinNoiseShaker
  }
}

public open external class PerlinNoiseCameraShakePattern(
  outer: UObject,
) : SimpleCameraShakePattern {
  @JsName("LocationAmplitudeMultiplier")
  public open var locationAmplitudeMultiplier: Number

  @JsName("LocationFrequencyMultiplier")
  public open var locationFrequencyMultiplier: Number

  @JsName("X")
  public open var x: PerlinNoiseShaker

  @JsName("Y")
  public open var y: PerlinNoiseShaker

  @JsName("Z")
  public open var z: PerlinNoiseShaker

  @JsName("RotationAmplitudeMultiplier")
  public open var rotationAmplitudeMultiplier: Number

  @JsName("RotationFrequencyMultiplier")
  public open var rotationFrequencyMultiplier: Number

  @JsName("Pitch")
  public open var pitch: PerlinNoiseShaker

  @JsName("Yaw")
  public open var yaw: PerlinNoiseShaker

  @JsName("Roll")
  public open var roll: PerlinNoiseShaker

  public open var FOV: PerlinNoiseShaker

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PerlinNoiseCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PerlinNoiseCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PerlinNoiseCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PerlinNoiseCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): PerlinNoiseCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): PerlinNoiseCameraShakePattern
  }
}

@JsName("EInitialWaveOscillatorOffsetType")
public external object InitialWaveOscillatorOffsetType {
  public var Random: String

  public var Zero: String

  @JsName("EInitialWaveOscillatorOffsetType_MAX")
  public var Max: String
}

public open external class WaveOscillator {
  @JsName("Amplitude")
  public open var amplitude: Number

  @JsName("Frequency")
  public open var frequency: Number

  @JsName("InitialOffsetType")
  public open var initialOffsetType: String

  public open fun clone(): WaveOscillator

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): WaveOscillator

    @JsName("C")
    public fun copy(other: Any): WaveOscillator
  }
}

public open external class WaveOscillatorCameraShakePattern(
  outer: UObject,
) : SimpleCameraShakePattern {
  @JsName("LocationAmplitudeMultiplier")
  public open var locationAmplitudeMultiplier: Number

  @JsName("LocationFrequencyMultiplier")
  public open var locationFrequencyMultiplier: Number

  @JsName("X")
  public open var x: WaveOscillator

  @JsName("Y")
  public open var y: WaveOscillator

  @JsName("Z")
  public open var z: WaveOscillator

  @JsName("RotationAmplitudeMultiplier")
  public open var rotationAmplitudeMultiplier: Number

  @JsName("RotationFrequencyMultiplier")
  public open var rotationFrequencyMultiplier: Number

  @JsName("Pitch")
  public open var pitch: WaveOscillator

  @JsName("Yaw")
  public open var yaw: WaveOscillator

  @JsName("Roll")
  public open var roll: WaveOscillator

  public open var FOV: WaveOscillator

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WaveOscillatorCameraShakePattern

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WaveOscillatorCameraShakePattern

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WaveOscillatorCameraShakePattern

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WaveOscillatorCameraShakePattern

    @JsName("C")
    public fun copy(other: UObject): WaveOscillatorCameraShakePattern

    @JsName("C")
    public fun copy(other: Any): WaveOscillatorCameraShakePattern
  }
}

public open external class SignificanceManager(
  outer: UObject,
) : UObject {
  @JsName("SignificanceManagerClassName")
  public open var significanceManagerClassName: SoftClassPath

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SignificanceManager

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SignificanceManager

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SignificanceManager

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SignificanceManager

    @JsName("C")
    public fun copy(other: UObject): SignificanceManager

    @JsName("C")
    public fun copy(other: Any): SignificanceManager
  }
}

@JsName("T$820")
public external interface Object820 {
  @JsName("OutState")
  public var outState: Number

  @JsName("bShouldProcess")
  public var shouldProcess: Boolean
}

public open external class AnimationSharingStateProcessor(
  outer: UObject,
) : UObject {
  @JsName("AnimationStateEnum")
  public open var animationStateEnum: Enum

  @JsName("ProcessActorState")
  public open fun processActorState(
    outState: Number,
    inActor: Actor,
    currentState: Number,
    onDemandState: Number,
    shouldProcess: Boolean,
  ): Object820

  @JsName("GetAnimationStateEnum")
  public open fun getAnimationStateEnum(): Enum

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationSharingStateProcessor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationSharingStateProcessor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationSharingStateProcessor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationSharingStateProcessor

    @JsName("C")
    public fun copy(other: UObject): AnimationSharingStateProcessor

    @JsName("C")
    public fun copy(other: Any): AnimationSharingStateProcessor
  }
}

public open external class AnimSharingInstance(
  outer: UObject,
) : UObject {
  @JsName("RegisteredActors")
  public open var registeredActors: Array<Actor>

  @JsName("StateProcessor")
  public open var stateProcessor: AnimationSharingStateProcessor

  @JsName("UsedAnimationSequences")
  public open var usedAnimationSequences: Array<AnimSequence>

  @JsName("StateEnum")
  public open var stateEnum: Enum

  @JsName("SharingActor")
  public open var sharingActor: Actor

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimSharingInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimSharingInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimSharingInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimSharingInstance

    @JsName("C")
    public fun copy(other: UObject): AnimSharingInstance

    @JsName("C")
    public fun copy(other: Any): AnimSharingInstance
  }
}

@JsName("T$821")
public external interface ActorsProvider {
  @JsName("Actors")
  public var actors: Array<Actor>
}

public open external class AnimSharingStateInstance(
  outer: UObject,
) : AnimInstance {
  @JsName("AnimationToPlay")
  public open var animationToPlay: AnimSequence

  @JsName("PermutationTimeOffset")
  public open var permutationTimeOffset: Number

  @JsName("PlayRate")
  public open var playRate: Number

  @JsName("bStateBool")
  public open var stateBool: Boolean

  @JsName("Instance")
  public open var instance: AnimSharingInstance

  @JsName("GetInstancedActors")
  public open fun getInstancedActors(actors: Array<Actor>): ActorsProvider

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimSharingStateInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimSharingStateInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimSharingStateInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimSharingStateInstance

    @JsName("C")
    public fun copy(other: UObject): AnimSharingStateInstance

    @JsName("C")
    public fun copy(other: Any): AnimSharingStateInstance
  }
}

public open external class AnimSharingTransitionInstance(
  outer: UObject,
) : AnimInstance {
  @JsName("FromComponent")
  public open var fromComponent: Any

  @JsName("ToComponent")
  public open var toComponent: Any

  @JsName("BlendTime")
  public open var blendTime: Number

  @JsName("bBlendBool")
  public open var blendBool: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimSharingTransitionInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimSharingTransitionInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimSharingTransitionInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimSharingTransitionInstance

    @JsName("C")
    public fun copy(other: UObject): AnimSharingTransitionInstance

    @JsName("C")
    public fun copy(other: Any): AnimSharingTransitionInstance
  }
}

public open external class AnimSharingAdditiveInstance(
  outer: UObject,
) : AnimInstance {
  @JsName("BaseComponent")
  public open var baseComponent: Any

  @JsName("AdditiveAnimation")
  public open var additiveAnimation: Any

  @JsName("Alpha")
  public open var alpha: Number

  @JsName("bStateBool")
  public open var stateBool: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimSharingAdditiveInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimSharingAdditiveInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimSharingAdditiveInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimSharingAdditiveInstance

    @JsName("C")
    public fun copy(other: UObject): AnimSharingAdditiveInstance

    @JsName("C")
    public fun copy(other: Any): AnimSharingAdditiveInstance
  }
}

public open external class AnimationSetup {
  @JsName("AnimSequence")
  public open var animSequence: AnimSequence

  @JsName("AnimBlueprint")
  public open var animBlueprint: UnrealEngineClass

  @JsName("NumRandomizedInstances")
  public open var numRandomizedInstances: PerPlatformInt

  @JsName("Enabled")
  public open var enabled: PerPlatformBool

  public open fun clone(): AnimationSetup

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimationSetup

    @JsName("C")
    public fun copy(other: Any): AnimationSetup
  }
}

public open external class AnimationStateEntry {
  @JsName("State")
  public open var state: Number

  @JsName("AnimationSetups")
  public open var animationSetups: Array<AnimationSetup>

  @JsName("bOnDemand")
  public open var onDemand: Boolean

  @JsName("bAdditive")
  public open var additive: Boolean

  @JsName("BlendTime")
  public open var blendTime: Number

  @JsName("bReturnToPreviousState")
  public open var returnToPreviousState: Boolean

  @JsName("bSetNextState")
  public open var setNextState: Boolean

  @JsName("NextState")
  public open var nextState: Number

  @JsName("MaximumNumberOfConcurrentInstances")
  public open var maximumNumberOfConcurrentInstances: PerPlatformInt

  @JsName("WiggleTimePercentage")
  public open var wiggleTimePercentage: Number

  @JsName("bRequiresCurves")
  public open var requiresCurves: Boolean

  public open fun clone(): AnimationStateEntry

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimationStateEntry

    @JsName("C")
    public fun copy(other: Any): AnimationStateEntry
  }
}

public open external class PerSkeletonAnimationSharingSetup {
  @JsName("Skeleton")
  public open var skeleton: Skeleton

  @JsName("SkeletalMesh")
  public open var skeletalMesh: SkeletalMesh

  @JsName("BlendAnimBlueprint")
  public open var blendAnimBlueprint: UnrealEngineClass

  @JsName("AdditiveAnimBlueprint")
  public open var additiveAnimBlueprint: UnrealEngineClass

  @JsName("StateProcessorClass")
  public open var stateProcessorClass: UnrealEngineClass

  @JsName("AnimationStates")
  public open var animationStates: Array<AnimationStateEntry>

  public open fun clone(): PerSkeletonAnimationSharingSetup

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PerSkeletonAnimationSharingSetup

    @JsName("C")
    public fun copy(other: Any): PerSkeletonAnimationSharingSetup
  }
}

public open external class AnimationSharingScalability {
  @JsName("UseBlendTransitions")
  public open var useBlendTransitions: PerPlatformBool

  @JsName("BlendSignificanceValue")
  public open var blendSignificanceValue: PerPlatformFloat

  @JsName("MaximumNumberConcurrentBlends")
  public open var maximumNumberConcurrentBlends: PerPlatformInt

  @JsName("TickSignificanceValue")
  public open var tickSignificanceValue: PerPlatformFloat

  public open fun clone(): AnimationSharingScalability

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimationSharingScalability

    @JsName("C")
    public fun copy(other: Any): AnimationSharingScalability
  }
}

public open external class AnimationSharingSetup(
  outer: UObject,
) : UObject {
  @JsName("SkeletonSetups")
  public open var skeletonSetups: Array<PerSkeletonAnimationSharingSetup>

  @JsName("ScalabilitySettings")
  public open var scalabilitySettings: AnimationSharingScalability

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationSharingSetup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationSharingSetup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationSharingSetup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationSharingSetup

    @JsName("C")
    public fun copy(other: UObject): AnimationSharingSetup

    @JsName("C")
    public fun copy(other: Any): AnimationSharingSetup
  }
}

public open external class AnimationSharingManager(
  outer: UObject,
) : UObject {
  @JsName("Skeletons")
  public open var skeletons: Array<Skeleton>

  @JsName("PerSkeletonData")
  public open var perSkeletonData: Array<AnimSharingInstance>

  @JsName("RegisterActorWithSkeletonBP")
  public open fun registerActorWithSkeletonBp(inActor: Actor, sharingSkeleton: Skeleton): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationSharingManager

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationSharingManager

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationSharingManager

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationSharingManager

    @JsName("GetAnimationSharingManager")
    public fun getAnimationSharingManager(worldContextObject: UObject): AnimationSharingManager

    @JsName("CreateAnimationSharingManager")
    public fun createAnimationSharingManager(worldContextObject: UObject,
        setup: AnimationSharingSetup): Boolean

    @JsName("AnimationSharingEnabled")
    public fun animationSharingEnabled(): Boolean

    @JsName("C")
    public fun copy(other: UObject): AnimationSharingManager

    @JsName("C")
    public fun copy(other: Any): AnimationSharingManager
  }
}

@JsName("K2Node_PropertyAccess")
public open external class K2NodePropertyAccess(
  outer: UObject,
) : K2Node {
  @JsName("Path")
  public open var path: Array<String>

  @JsName("TextPath")
  public open var textPath: String

  @JsName("ResolvedPinType")
  public open var resolvedPinType: EdGraphPinType

  @JsName("GeneratedPropertyName")
  public open var generatedPropertyName: String

  @JsName("ContextId")
  public open var contextId: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodePropertyAccess

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodePropertyAccess

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodePropertyAccess

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodePropertyAccess

    @JsName("C")
    public fun copy(other: UObject): K2NodePropertyAccess

    @JsName("C")
    public fun copy(other: Any): K2NodePropertyAccess
  }
}

public open external class FilterData {
  @JsName("Name")
  public open var name: String

  @JsName("AllowlistedNames")
  public open var allowlistedNames: Array<String>

  public open fun clone(): FilterData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): FilterData

    @JsName("C")
    public fun copy(other: Any): FilterData
  }
}

public open external class LocalFilterPresetContainer(
  outer: UObject,
) : UObject {
  @JsName("UserPresets")
  public open var userPresets: Array<FilterData>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LocalFilterPresetContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LocalFilterPresetContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LocalFilterPresetContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LocalFilterPresetContainer

    @JsName("C")
    public fun copy(other: UObject): LocalFilterPresetContainer

    @JsName("C")
    public fun copy(other: Any): LocalFilterPresetContainer
  }
}

public open external class SharedFilterPresetContainer(
  outer: UObject,
) : UObject {
  @JsName("SharedPresets")
  public open var sharedPresets: Array<FilterData>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SharedFilterPresetContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SharedFilterPresetContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SharedFilterPresetContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SharedFilterPresetContainer

    @JsName("C")
    public fun copy(other: UObject): SharedFilterPresetContainer

    @JsName("C")
    public fun copy(other: Any): SharedFilterPresetContainer
  }
}

public open external class EngineFilterPresetContainer(
  outer: UObject,
) : UObject {
  @JsName("EnginePresets")
  public open var enginePresets: Array<FilterData>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EngineFilterPresetContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EngineFilterPresetContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EngineFilterPresetContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EngineFilterPresetContainer

    @JsName("C")
    public fun copy(other: UObject): EngineFilterPresetContainer

    @JsName("C")
    public fun copy(other: Any): EngineFilterPresetContainer
  }
}

public open external class MaterialExpressionSpriteTextureSampler(
  outer: UObject,
) : MaterialExpressionTextureSampleParameter2d {
  @JsName("bSampleAdditionalTextures")
  public open var sampleAdditionalTextures: Boolean

  @JsName("AdditionalSlotIndex")
  public open var additionalSlotIndex: Number

  @JsName("SlotDisplayName")
  public open var slotDisplayName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MaterialExpressionSpriteTextureSampler

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MaterialExpressionSpriteTextureSampler

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MaterialExpressionSpriteTextureSampler

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MaterialExpressionSpriteTextureSampler

    @JsName("C")
    public fun copy(other: UObject): MaterialExpressionSpriteTextureSampler

    @JsName("C")
    public fun copy(other: Any): MaterialExpressionSpriteTextureSampler
  }
}

public open external class PaperSpriteSocket {
  @JsName("LocalTransform")
  public open var localTransform: Transform

  @JsName("SocketName")
  public open var socketName: String

  public open fun clone(): PaperSpriteSocket

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperSpriteSocket

    @JsName("C")
    public fun copy(other: Any): PaperSpriteSocket
  }
}

@JsName("ESpriteCollisionMode")
public external object SpriteCollisionMode {
  public var None: String

  @JsName("Use2DPhysics")
  public var Use2dPhysics: String

  @JsName("Use3DPhysics")
  public var Use3dPhysics: String

  @JsName("ESpriteCollisionMode_MAX")
  public var Max: String
}

@JsName("ESpritePivotMode")
public external object SpritePivotMode {
  @JsName("Top_Left")
  public var TopLeft: String

  @JsName("Top_Center")
  public var TopCenter: String

  @JsName("Top_Right")
  public var TopRight: String

  @JsName("Center_Left")
  public var CenterLeft: String

  @JsName("Center_Center")
  public var CenterCenter: String

  @JsName("Center_Right")
  public var CenterRight: String

  @JsName("Bottom_Left")
  public var BottomLeft: String

  @JsName("Bottom_Center")
  public var BottomCenter: String

  @JsName("Bottom_Right")
  public var BottomRight: String

  public var Custom: String

  @JsName("ESpritePivotMode_MAX")
  public var Max: String
}

@JsName("ESpriteShapeType")
public external object SpriteShapeType {
  public var Box: String

  public var Circle: String

  public var Polygon: String

  @JsName("ESpriteShapeType_MAX")
  public var Max: String
}

public open external class SpriteGeometryShape {
  @JsName("ShapeType")
  public open var shapeType: String

  @JsName("Vertices")
  public open var vertices: Array<Vector2d>

  @JsName("BoxSize")
  public open var boxSize: Vector2d

  @JsName("BoxPosition")
  public open var boxPosition: Vector2d

  @JsName("Rotation")
  public open var rotation: Number

  @JsName("bNegativeWinding")
  public open var negativeWinding: Boolean

  public open fun clone(): SpriteGeometryShape

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpriteGeometryShape

    @JsName("C")
    public fun copy(other: Any): SpriteGeometryShape
  }
}

@JsName("ESpritePolygonMode")
public external object SpritePolygonMode {
  public var SourceBoundingBox: String

  public var TightBoundingBox: String

  public var ShrinkWrapped: String

  public var FullyCustom: String

  public var Diced: String

  @JsName("ESpritePolygonMode_MAX")
  public var Max: String
}

public open external class SpriteGeometryCollection {
  @JsName("Shapes")
  public open var shapes: Array<SpriteGeometryShape>

  @JsName("GeometryType")
  public open var geometryType: String

  @JsName("PixelsPerSubdivisionX")
  public open var pixelsPerSubdivisionX: Number

  @JsName("PixelsPerSubdivisionY")
  public open var pixelsPerSubdivisionY: Number

  @JsName("bAvoidVertexMerging")
  public open var avoidVertexMerging: Boolean

  @JsName("AlphaThreshold")
  public open var alphaThreshold: Number

  @JsName("DetailAmount")
  public open var detailAmount: Number

  @JsName("SimplifyEpsilon")
  public open var simplifyEpsilon: Number

  public open fun clone(): SpriteGeometryCollection

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpriteGeometryCollection

    @JsName("C")
    public fun copy(other: Any): SpriteGeometryCollection
  }
}

@JsName("EPaperSpriteAtlasPadding")
public external object PaperSpriteAtlasPadding {
  public var DilateBorder: String

  public var PadWithZero: String

  @JsName("EPaperSpriteAtlasPadding_MAX")
  public var Max: String
}

public open external class PaperSpriteAtlasSlot {
  @JsName("SpriteRef")
  public open var spriteRef: PaperSprite

  @JsName("AtlasIndex")
  public open var atlasIndex: Number

  @JsName("X")
  public open var x: Number

  @JsName("Y")
  public open var y: Number

  @JsName("Width")
  public open var width: Number

  @JsName("Height")
  public open var height: Number

  public open fun clone(): PaperSpriteAtlasSlot

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperSpriteAtlasSlot

    @JsName("C")
    public fun copy(other: Any): PaperSpriteAtlasSlot
  }
}

public open external class PaperSpriteAtlas(
  outer: UObject,
) : UObject {
  @JsName("AtlasDescription")
  public open var atlasDescription: String

  @JsName("MaxWidth")
  public open var maxWidth: Number

  @JsName("MaxHeight")
  public open var maxHeight: Number

  @JsName("MipCount")
  public open var mipCount: Number

  @JsName("PaddingType")
  public open var paddingType: String

  @JsName("Padding")
  public open var padding: Number

  @JsName("CompressionSettings")
  public open var compressionSettings: String

  @JsName("Filter")
  public open var filter: String

  @JsName("GeneratedTextures")
  public open var generatedTextures: Array<Texture>

  @JsName("AtlasGUID")
  public open var atlasGuid: Guid

  @JsName("bRebuildAtlas")
  public open var rebuildAtlas: Boolean

  @JsName("AtlasSlots")
  public open var atlasSlots: Array<PaperSpriteAtlasSlot>

  @JsName("NumIncrementalBuilds")
  public open var numIncrementalBuilds: Number

  @JsName("BuiltWidth")
  public open var builtWidth: Number

  @JsName("BuiltHeight")
  public open var builtHeight: Number

  @JsName("BuiltPadding")
  public open var builtPadding: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperSpriteAtlas

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperSpriteAtlas

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperSpriteAtlas

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperSpriteAtlas

    @JsName("C")
    public fun copy(other: UObject): PaperSpriteAtlas

    @JsName("C")
    public fun copy(other: Any): PaperSpriteAtlas
  }
}

public open external class PaperSprite(
  outer: UObject,
) : UObject {
  @JsName("OriginInSourceImageBeforeTrimming")
  public open var originInSourceImageBeforeTrimming: Vector2d

  @JsName("SourceImageDimensionBeforeTrimming")
  public open var sourceImageDimensionBeforeTrimming: Vector2d

  @JsName("bTrimmedInSourceImage")
  public open var trimmedInSourceImage: Boolean

  @JsName("bRotatedInSourceImage")
  public open var rotatedInSourceImage: Boolean

  @JsName("SourceTextureDimension")
  public open var sourceTextureDimension: Vector2d

  @JsName("SourceUV")
  public open var sourceUv: Vector2d

  @JsName("SourceDimension")
  public open var sourceDimension: Vector2d

  @JsName("SourceTexture")
  public open var sourceTexture: Texture2d

  @JsName("SourceTextureCacheNeverSerialized")
  public open var sourceTextureCacheNeverSerialized: Texture2d

  @JsName("AdditionalSourceTextures")
  public open var additionalSourceTextures: Array<Texture>

  @JsName("BakedSourceUV")
  public open var bakedSourceUv: Vector2d

  @JsName("BakedSourceDimension")
  public open var bakedSourceDimension: Vector2d

  @JsName("BakedSourceTexture")
  public open var bakedSourceTexture: Texture2d

  @JsName("DefaultMaterial")
  public open var defaultMaterial: MaterialInterface

  @JsName("AlternateMaterial")
  public open var alternateMaterial: MaterialInterface

  @JsName("Sockets")
  public open var sockets: Array<PaperSpriteSocket>

  @JsName("SpriteCollisionDomain")
  public open var spriteCollisionDomain: String

  @JsName("PixelsPerUnrealUnit")
  public open var pixelsPerUnrealUnit: Number

  @JsName("BodySetup")
  public open var bodySetup: BodySetup

  @JsName("PivotMode")
  public open var pivotMode: String

  @JsName("CustomPivotPoint")
  public open var customPivotPoint: Vector2d

  @JsName("bSnapPivotToPixelGrid")
  public open var snapPivotToPixelGrid: Boolean

  @JsName("CollisionGeometry")
  public open var collisionGeometry: SpriteGeometryCollection

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("RenderGeometry")
  public open var renderGeometry: SpriteGeometryCollection

  @JsName("AtlasGroup")
  public open var atlasGroup: PaperSpriteAtlas

  @JsName("AlternateMaterialSplitIndex")
  public open var alternateMaterialSplitIndex: Number

  @JsName("BakedRenderData")
  public open var bakedRenderData: Array<Vector4>

  @JsName("MakeBrushFromSprite")
  public open fun makeBrushFromSprite(width: Number, height: Number): SlateBrush

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperSprite

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperSprite

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperSprite

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperSprite

    @JsName("C")
    public fun copy(other: UObject): PaperSprite

    @JsName("C")
    public fun copy(other: Any): PaperSprite

    @JsName("MakeBrushFromSprite")
    public fun makeBrushFromSprite(
      sprite: PaperSprite,
      width: Number,
      height: Number,
    ): SlateBrush
  }
}

public open external class PaperFlipbookKeyFrame {
  @JsName("Sprite")
  public open var sprite: PaperSprite

  @JsName("FrameRun")
  public open var frameRun: Number

  public open fun clone(): PaperFlipbookKeyFrame

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperFlipbookKeyFrame

    @JsName("C")
    public fun copy(other: Any): PaperFlipbookKeyFrame
  }
}

@JsName("EFlipbookCollisionMode")
public external object FlipbookCollisionMode {
  public var NoCollision: String

  public var FirstFrameCollision: String

  public var EachFrameCollision: String

  @JsName("EFlipbookCollisionMode_MAX")
  public var Max: String
}

public open external class PaperFlipbook(
  outer: UObject,
) : UObject {
  @JsName("FramesPerSecond")
  public open var framesPerSecond: Number

  @JsName("KeyFrames")
  public open var keyFrames: Array<PaperFlipbookKeyFrame>

  @JsName("DefaultMaterial")
  public open var defaultMaterial: MaterialInterface

  @JsName("CollisionSource")
  public open var collisionSource: String

  @JsName("IsValidKeyFrameIndex")
  public open fun isValidKeyFrameIndex(index: Number): Boolean

  @JsName("GetTotalDuration")
  public open fun getTotalDuration(): Number

  @JsName("GetSpriteAtTime")
  public open fun getSpriteAtTime(time: Number, clampToEnds: Boolean): PaperSprite

  @JsName("GetSpriteAtFrame")
  public open fun getSpriteAtFrame(frameIndex: Number): PaperSprite

  @JsName("GetNumKeyFrames")
  public open fun getNumKeyFrames(): Number

  @JsName("GetNumFrames")
  public open fun getNumFrames(): Number

  @JsName("GetKeyFrameIndexAtTime")
  public open fun getKeyFrameIndexAtTime(time: Number, clampToEnds: Boolean): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperFlipbook

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperFlipbook

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperFlipbook

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperFlipbook

    @JsName("C")
    public fun copy(other: UObject): PaperFlipbook

    @JsName("C")
    public fun copy(other: Any): PaperFlipbook
  }
}

public open external class PaperFlipbookComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("SourceFlipbook")
  public open var sourceFlipbook: PaperFlipbook

  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("PlayRate")
  public open var playRate: Number

  @JsName("bLooping")
  public open var looping: Boolean

  @JsName("bReversePlayback")
  public open var reversePlayback: Boolean

  @JsName("bPlaying")
  public open var playing: Boolean

  @JsName("AccumulatedTime")
  public open var accumulatedTime: Number

  @JsName("CachedFrameIndex")
  public open var cachedFrameIndex: Number

  @JsName("SpriteColor")
  public open var spriteColor: LinearColor

  @JsName("CachedBodySetup")
  public open var cachedBodySetup: BodySetup

  @JsName("OnFinishedPlaying")
  public open var onFinishedPlaying: UnrealEngineMulticastDelegate<() -> Unit>

  @JsName("Stop")
  public open fun stop(): Unit

  @JsName("SetSpriteColor")
  public open fun setSpriteColor(newColor: LinearColor): Unit

  @JsName("SetPlayRate")
  public open fun setPlayRate(newRate: Number): Unit

  @JsName("SetPlaybackPositionInFrames")
  public open fun setPlaybackPositionInFrames(newFramePosition: Number, fireEvents: Boolean): Unit

  @JsName("SetPlaybackPosition")
  public open fun setPlaybackPosition(newPosition: Number, fireEvents: Boolean): Unit

  @JsName("SetNewTime")
  public open fun setNewTime(newTime: Number): Unit

  @JsName("SetLooping")
  public open fun setLooping(newLooping: Boolean): Unit

  @JsName("SetFlipbook")
  public open fun setFlipbook(newFlipbook: PaperFlipbook): Boolean

  @JsName("ReverseFromEnd")
  public open fun reverseFromEnd(): Unit

  @JsName("Reverse")
  public open fun reverse(): Unit

  @JsName("PlayFromStart")
  public open fun playFromStart(): Unit

  @JsName("Play")
  public open fun play(): Unit

  @JsName("OnRep_SourceFlipbook")
  public open fun onRepSourceFlipbook(oldFlipbook: PaperFlipbook): Unit

  @JsName("IsReversing")
  public open fun isReversing(): Boolean

  @JsName("IsPlaying")
  public open fun isPlaying(): Boolean

  @JsName("IsLooping")
  public open fun isLooping(): Boolean

  @JsName("GetSpriteColor")
  public open fun getSpriteColor(): LinearColor

  @JsName("GetPlayRate")
  public open fun getPlayRate(): Number

  @JsName("GetPlaybackPositionInFrames")
  public open fun getPlaybackPositionInFrames(): Number

  @JsName("GetPlaybackPosition")
  public open fun getPlaybackPosition(): Number

  @JsName("GetFlipbookLengthInFrames")
  public open fun getFlipbookLengthInFrames(): Number

  @JsName("GetFlipbookLength")
  public open fun getFlipbookLength(): Number

  @JsName("GetFlipbookFramerate")
  public open fun getFlipbookFramerate(): Number

  @JsName("GetFlipbook")
  public open fun getFlipbook(): PaperFlipbook

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperFlipbookComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperFlipbookComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperFlipbookComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperFlipbookComponent

    @JsName("C")
    public fun copy(other: UObject): PaperFlipbookComponent

    @JsName("C")
    public fun copy(other: Any): PaperFlipbookComponent
  }
}

public open external class PaperCharacter(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Character {
  @JsName("Sprite")
  public open var sprite: PaperFlipbookComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperCharacter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperCharacter

    @JsName("C")
    public fun copy(other: UObject): PaperCharacter

    @JsName("C")
    public fun copy(other: Any): PaperCharacter
  }
}

public open external class PaperFlipbookActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("RenderComponent")
  public open var renderComponent: PaperFlipbookComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperFlipbookActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperFlipbookActor

    @JsName("C")
    public fun copy(other: UObject): PaperFlipbookActor

    @JsName("C")
    public fun copy(other: Any): PaperFlipbookActor
  }
}

public open external class SpriteInstanceData {
  @JsName("Transform")
  public open var transform: Matrix

  @JsName("SourceSprite")
  public open var sourceSprite: PaperSprite

  @JsName("VertexColor")
  public open var vertexColor: Color

  @JsName("MaterialIndex")
  public open var materialIndex: Number

  public open fun clone(): SpriteInstanceData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): SpriteInstanceData

    @JsName("C")
    public fun copy(other: Any): SpriteInstanceData
  }
}

public open external class PaperGroupedSpriteComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("InstanceMaterials")
  public open var instanceMaterials: Array<MaterialInterface>

  @JsName("PerInstanceSpriteData")
  public open var perInstanceSpriteData: Array<SpriteInstanceData>

  @JsName("UpdateInstanceTransform")
  public open fun updateInstanceTransform(
    instanceIndex: Number,
    newInstanceTransform: Transform,
    worldSpace: Boolean,
    markRenderStateDirty: Boolean,
    teleport: Boolean,
  ): Boolean

  @JsName("UpdateInstanceColor")
  public open fun updateInstanceColor(
    instanceIndex: Number,
    newInstanceColor: LinearColor,
    markRenderStateDirty: Boolean,
  ): Boolean

  @JsName("SortInstancesAlongAxis")
  public open fun sortInstancesAlongAxis(worldSpaceSortAxis: Vector): Unit

  @JsName("RemoveInstance")
  public open fun removeInstance(instanceIndex: Number): Boolean

  @JsName("GetInstanceTransform")
  public open fun getInstanceTransform(
    instanceIndex: Number,
    outInstanceTransform: Transform,
    worldSpace: Boolean,
  ): Object636

  @JsName("GetInstanceCount")
  public open fun getInstanceCount(): Number

  @JsName("ClearInstances")
  public open fun clearInstances(): Unit

  @JsName("AddInstance")
  public open fun addInstance(
    transform: Transform,
    sprite: PaperSprite,
    worldSpace: Boolean,
    color: LinearColor,
  ): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperGroupedSpriteComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperGroupedSpriteComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperGroupedSpriteComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperGroupedSpriteComponent

    @JsName("C")
    public fun copy(other: UObject): PaperGroupedSpriteComponent

    @JsName("C")
    public fun copy(other: Any): PaperGroupedSpriteComponent
  }
}

public open external class PaperGroupedSpriteActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("RenderComponent")
  public open var renderComponent: PaperGroupedSpriteComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperGroupedSpriteActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperGroupedSpriteActor

    @JsName("C")
    public fun copy(other: UObject): PaperGroupedSpriteActor

    @JsName("C")
    public fun copy(other: Any): PaperGroupedSpriteActor
  }
}

public open external class PaperRuntimeSettings(
  outer: UObject,
) : UObject {
  @JsName("bEnableSpriteAtlasGroups")
  public open var enableSpriteAtlasGroups: Boolean

  @JsName("bEnableTerrainSplineEditing")
  public open var enableTerrainSplineEditing: Boolean

  @JsName("bResizeSpriteDataToMatchTextures")
  public open var resizeSpriteDataToMatchTextures: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperRuntimeSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperRuntimeSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperRuntimeSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperRuntimeSettings

    @JsName("C")
    public fun copy(other: UObject): PaperRuntimeSettings

    @JsName("C")
    public fun copy(other: Any): PaperRuntimeSettings
  }
}

public open external class PaperSpriteComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("SourceSprite")
  public open var sourceSprite: PaperSprite

  @JsName("MaterialOverride")
  public open var materialOverride: MaterialInterface

  @JsName("SpriteColor")
  public open var spriteColor: LinearColor

  @JsName("SetSpriteColor")
  public open fun setSpriteColor(newColor: LinearColor): Unit

  @JsName("SetSprite")
  public open fun setSprite(newSprite: PaperSprite): Boolean

  @JsName("GetSprite")
  public open fun getSprite(): PaperSprite

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperSpriteComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperSpriteComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperSpriteComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperSpriteComponent

    @JsName("C")
    public fun copy(other: UObject): PaperSpriteComponent

    @JsName("C")
    public fun copy(other: Any): PaperSpriteComponent
  }
}

public open external class PaperSpriteActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("RenderComponent")
  public open var renderComponent: PaperSpriteComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperSpriteActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperSpriteActor

    @JsName("C")
    public fun copy(other: UObject): PaperSpriteActor

    @JsName("C")
    public fun copy(other: Any): PaperSpriteActor
  }
}

public open external class PaperSpriteBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperSpriteBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperSpriteBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperSpriteBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperSpriteBlueprintLibrary

    @JsName("MakeBrushFromSprite")
    public fun makeBrushFromSprite(
      sprite: PaperSprite,
      width: Number,
      height: Number,
    ): SlateBrush

    @JsName("C")
    public fun copy(other: UObject): PaperSpriteBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): PaperSpriteBlueprintLibrary
  }
}

public open external class PaperTerrainSplineComponent(
  outer: UObject,
) : SplineComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTerrainSplineComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTerrainSplineComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTerrainSplineComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTerrainSplineComponent

    @JsName("C")
    public fun copy(other: UObject): PaperTerrainSplineComponent

    @JsName("C")
    public fun copy(other: Any): PaperTerrainSplineComponent
  }
}

public open external class PaperTerrainMaterialRule {
  @JsName("StartCap")
  public open var startCap: PaperSprite

  @JsName("Body")
  public open var body: Array<PaperSprite>

  @JsName("EndCap")
  public open var endCap: PaperSprite

  @JsName("MinimumAngle")
  public open var minimumAngle: Number

  @JsName("MaximumAngle")
  public open var maximumAngle: Number

  @JsName("bEnableCollision")
  public open var enableCollision: Boolean

  @JsName("CollisionOffset")
  public open var collisionOffset: Number

  @JsName("DrawOrder")
  public open var drawOrder: Number

  @JsName("Description")
  public open var description: String

  public open fun clone(): PaperTerrainMaterialRule

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperTerrainMaterialRule

    @JsName("C")
    public fun copy(other: Any): PaperTerrainMaterialRule
  }
}

public open external class PaperTerrainMaterial(
  outer: UObject,
) : DataAsset {
  @JsName("Rules")
  public open var rules: Array<PaperTerrainMaterialRule>

  @JsName("InteriorFill")
  public open var interiorFill: PaperSprite

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTerrainMaterial

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTerrainMaterial

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTerrainMaterial

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTerrainMaterial

    @JsName("C")
    public fun copy(other: UObject): PaperTerrainMaterial

    @JsName("C")
    public fun copy(other: Any): PaperTerrainMaterial
  }
}

public open external class PaperTerrainComponent(
  outer: UObject,
) : PrimitiveComponent {
  @JsName("TerrainMaterial")
  public open var terrainMaterial: PaperTerrainMaterial

  @JsName("bClosedSpline")
  public open var closedSpline: Boolean

  @JsName("bFilledSpline")
  public open var filledSpline: Boolean

  @JsName("AssociatedSpline")
  public open var associatedSpline: PaperTerrainSplineComponent

  @JsName("RandomSeed")
  public open var randomSeed: Number

  @JsName("SegmentOverlapAmount")
  public open var segmentOverlapAmount: Number

  @JsName("TerrainColor")
  public open var terrainColor: LinearColor

  @JsName("ReparamStepsPerSegment")
  public open var reparamStepsPerSegment: Number

  @JsName("SpriteCollisionDomain")
  public open var spriteCollisionDomain: String

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("CachedBodySetup")
  public open var cachedBodySetup: BodySetup

  @JsName("SetTerrainColor")
  public open fun setTerrainColor(newColor: LinearColor): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTerrainComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTerrainComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTerrainComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTerrainComponent

    @JsName("C")
    public fun copy(other: UObject): PaperTerrainComponent

    @JsName("C")
    public fun copy(other: Any): PaperTerrainComponent
  }
}

public open external class PaperTerrainActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("DummyRoot")
  public open var dummyRoot: SceneComponent

  @JsName("SplineComponent")
  public open var splineComponent: PaperTerrainSplineComponent

  @JsName("RenderComponent")
  public open var renderComponent: PaperTerrainComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTerrainActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTerrainActor

    @JsName("C")
    public fun copy(other: UObject): PaperTerrainActor

    @JsName("C")
    public fun copy(other: Any): PaperTerrainActor
  }
}

public open external class IntMargin {
  @JsName("Left")
  public open var left: Number

  @JsName("Top")
  public open var top: Number

  @JsName("Right")
  public open var right: Number

  @JsName("Bottom")
  public open var bottom: Number

  public open fun clone(): IntMargin

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): IntMargin

    @JsName("C")
    public fun copy(other: Any): IntMargin
  }
}

public open external class PaperTileMetadata {
  @JsName("UserDataName")
  public open var userDataName: String

  @JsName("CollisionData")
  public open var collisionData: SpriteGeometryCollection

  @JsName("TerrainMembership")
  public open var terrainMembership: Number

  public open fun clone(): PaperTileMetadata

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperTileMetadata

    @JsName("C")
    public fun copy(other: Any): PaperTileMetadata
  }
}

public open external class PaperTileSetTerrain {
  @JsName("TerrainName")
  public open var terrainName: String

  @JsName("CenterTileIndex")
  public open var centerTileIndex: Number

  public open fun clone(): PaperTileSetTerrain

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperTileSetTerrain

    @JsName("C")
    public fun copy(other: Any): PaperTileSetTerrain
  }
}

public open external class PaperTileSet(
  outer: UObject,
) : UObject {
  @JsName("TileSize")
  public open var tileSize: IntPoint

  @JsName("TileSheet")
  public open var tileSheet: Texture2d

  @JsName("AdditionalSourceTextures")
  public open var additionalSourceTextures: Array<Texture>

  @JsName("BorderMargin")
  public open var borderMargin: IntMargin

  @JsName("PerTileSpacing")
  public open var perTileSpacing: IntPoint

  @JsName("DrawingOffset")
  public open var drawingOffset: IntPoint

  @JsName("BackgroundColor")
  public open var backgroundColor: LinearColor

  @JsName("WidthInTiles")
  public open var widthInTiles: Number

  @JsName("HeightInTiles")
  public open var heightInTiles: Number

  @JsName("AllocatedWidth")
  public open var allocatedWidth: Number

  @JsName("AllocatedHeight")
  public open var allocatedHeight: Number

  @JsName("PerTileData")
  public open var perTileData: Array<PaperTileMetadata>

  @JsName("Terrains")
  public open var terrains: Array<PaperTileSetTerrain>

  @JsName("TileWidth")
  public open var tileWidth: Number

  @JsName("TileHeight")
  public open var tileHeight: Number

  @JsName("Margin")
  public open var margin: Number

  @JsName("Spacing")
  public open var spacing: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTileSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTileSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTileSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTileSet

    @JsName("C")
    public fun copy(other: UObject): PaperTileSet

    @JsName("C")
    public fun copy(other: Any): PaperTileSet
  }
}

@JsName("T$822")
public external interface Object822 {
  @JsName("TileIndex")
  public var tileIndex: Number

  @JsName("TileSet")
  public var tileSet: PaperTileSet

  @JsName("bFlipH")
  public var flipH: Boolean

  @JsName("bFlipV")
  public var flipV: Boolean

  @JsName("bFlipD")
  public var flipD: Boolean
}

public open external class PaperTileInfo {
  @JsName("TileSet")
  public open var tileSet: PaperTileSet

  @JsName("PackedTileIndex")
  public open var packedTileIndex: Number

  public open fun clone(): PaperTileInfo

  @JsName("BreakTile")
  public open fun breakTile(
    tileIndex: Number,
    tileSet: PaperTileSet,
    flipH: Boolean,
    flipV: Boolean,
    flipD: Boolean,
  ): Object822

  @JsName("GetTileTransform")
  public open fun getTileTransform(): Transform

  @JsName("GetTileUserData")
  public open fun getTileUserData(): String

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PaperTileInfo

    @JsName("C")
    public fun copy(other: Any): PaperTileInfo

    @JsName("BreakTile")
    public fun breakTile(
      tile: PaperTileInfo,
      tileIndex: Number,
      tileSet: PaperTileSet,
      flipH: Boolean,
      flipV: Boolean,
      flipD: Boolean,
    ): Object822

    @JsName("GetTileTransform")
    public fun getTileTransform(tile: PaperTileInfo): Transform

    @JsName("GetTileUserData")
    public fun getTileUserData(tile: PaperTileInfo): String

    @JsName("MakeTile")
    public fun makeTile(
      tileIndex: Number,
      tileSet: PaperTileSet,
      flipH: Boolean,
      flipV: Boolean,
      flipD: Boolean,
    ): PaperTileInfo
  }
}

public open external class PaperTileLayer(
  outer: UObject,
) : UObject {
  @JsName("LayerName")
  public open var layerName: String

  @JsName("LayerWidth")
  public open var layerWidth: Number

  @JsName("LayerHeight")
  public open var layerHeight: Number

  @JsName("bHiddenInEditor")
  public open var hiddenInEditor: Boolean

  @JsName("bHiddenInGame")
  public open var hiddenInGame: Boolean

  @JsName("bLayerCollides")
  public open var layerCollides: Boolean

  @JsName("bOverrideCollisionThickness")
  public open var overrideCollisionThickness: Boolean

  @JsName("bOverrideCollisionOffset")
  public open var overrideCollisionOffset: Boolean

  @JsName("CollisionThicknessOverride")
  public open var collisionThicknessOverride: Number

  @JsName("CollisionOffsetOverride")
  public open var collisionOffsetOverride: Number

  @JsName("LayerColor")
  public open var layerColor: LinearColor

  @JsName("AllocatedWidth")
  public open var allocatedWidth: Number

  @JsName("AllocatedHeight")
  public open var allocatedHeight: Number

  @JsName("AllocatedCells")
  public open var allocatedCells: Array<PaperTileInfo>

  @JsName("TileSet")
  public open var tileSet: PaperTileSet

  @JsName("AllocatedGrid")
  public open var allocatedGrid: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTileLayer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTileLayer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTileLayer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTileLayer

    @JsName("C")
    public fun copy(other: UObject): PaperTileLayer

    @JsName("C")
    public fun copy(other: Any): PaperTileLayer
  }
}

@JsName("ETileMapProjectionMode")
public external object TileMapProjectionMode {
  public var Orthogonal: String

  public var IsometricDiamond: String

  public var IsometricStaggered: String

  public var HexagonalStaggered: String

  @JsName("ETileMapProjectionMode_MAX")
  public var Max: String
}

public open external class PaperTileMap(
  outer: UObject,
) : UObject {
  @JsName("MapWidth")
  public open var mapWidth: Number

  @JsName("MapHeight")
  public open var mapHeight: Number

  @JsName("TileWidth")
  public open var tileWidth: Number

  @JsName("TileHeight")
  public open var tileHeight: Number

  @JsName("PixelsPerUnrealUnit")
  public open var pixelsPerUnrealUnit: Number

  @JsName("SeparationPerTileX")
  public open var separationPerTileX: Number

  @JsName("SeparationPerTileY")
  public open var separationPerTileY: Number

  @JsName("SeparationPerLayer")
  public open var separationPerLayer: Number

  @JsName("SelectedTileSet")
  public open var selectedTileSet: PaperTileSet

  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("TileLayers")
  public open var tileLayers: Array<PaperTileLayer>

  @JsName("CollisionThickness")
  public open var collisionThickness: Number

  @JsName("SpriteCollisionDomain")
  public open var spriteCollisionDomain: String

  @JsName("ProjectionMode")
  public open var projectionMode: String

  @JsName("HexSideLength")
  public open var hexSideLength: Number

  @JsName("BodySetup")
  public open var bodySetup: BodySetup

  @JsName("AssetImportData")
  public open var assetImportData: AssetImportData

  @JsName("SelectedLayerIndex")
  public open var selectedLayerIndex: Number

  @JsName("BackgroundColor")
  public open var backgroundColor: LinearColor

  @JsName("TileGridColor")
  public open var tileGridColor: LinearColor

  @JsName("MultiTileGridColor")
  public open var multiTileGridColor: LinearColor

  @JsName("MultiTileGridWidth")
  public open var multiTileGridWidth: Number

  @JsName("MultiTileGridHeight")
  public open var multiTileGridHeight: Number

  @JsName("MultiTileGridOffsetX")
  public open var multiTileGridOffsetX: Number

  @JsName("MultiTileGridOffsetY")
  public open var multiTileGridOffsetY: Number

  @JsName("LayerGridColor")
  public open var layerGridColor: LinearColor

  @JsName("LayerNameIndex")
  public open var layerNameIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTileMap

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTileMap

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTileMap

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTileMap

    @JsName("C")
    public fun copy(other: UObject): PaperTileMap

    @JsName("C")
    public fun copy(other: Any): PaperTileMap
  }
}

@JsName("T$823")
public external interface PointsProvider {
  @JsName("Points")
  public var points: Array<Vector>
}

@JsName("T$824")
public external interface Object824 {
  @JsName("MapWidth")
  public var mapWidth: Number

  @JsName("MapHeight")
  public var mapHeight: Number

  @JsName("NumLayers")
  public var numLayers: Number
}

public open external class PaperTileMapComponent(
  outer: UObject,
) : MeshComponent {
  @JsName("MapWidth")
  public open var mapWidth: Number

  @JsName("MapHeight")
  public open var mapHeight: Number

  @JsName("TileWidth")
  public open var tileWidth: Number

  @JsName("TileHeight")
  public open var tileHeight: Number

  @JsName("DefaultLayerTileSet")
  public open var defaultLayerTileSet: PaperTileSet

  @JsName("Material")
  public open var material: MaterialInterface

  @JsName("TileLayers")
  public open var tileLayers: Array<PaperTileLayer>

  @JsName("TileMapColor")
  public open var tileMapColor: LinearColor

  @JsName("UseSingleLayerIndex")
  public open var useSingleLayerIndex: Number

  @JsName("bUseSingleLayer")
  public open var useSingleLayer: Boolean

  @JsName("TileMap")
  public open var tileMap: PaperTileMap

  @JsName("bShowPerTileGridWhenSelected")
  public open var showPerTileGridWhenSelected: Boolean

  @JsName("bShowPerLayerGridWhenSelected")
  public open var showPerLayerGridWhenSelected: Boolean

  @JsName("bShowOutlineWhenUnselected")
  public open var showOutlineWhenUnselected: Boolean

  @JsName("bShowPerTileGridWhenUnselected")
  public open var showPerTileGridWhenUnselected: Boolean

  @JsName("bShowPerLayerGridWhenUnselected")
  public open var showPerLayerGridWhenUnselected: Boolean

  @JsName("SetTileMapColor")
  public open fun setTileMapColor(newColor: LinearColor): Unit

  @JsName("SetTileMap")
  public open fun setTileMap(newTileMap: PaperTileMap): Boolean

  @JsName("SetTile")
  public open fun setTile(
    x: Number,
    y: Number,
    layer: Number,
    newValue: PaperTileInfo,
  ): Unit

  @JsName("SetLayerColor")
  public open fun setLayerColor(newColor: LinearColor, layer: Number): Unit

  @JsName("SetLayerCollision")
  public open fun setLayerCollision(
    layer: Number,
    hasCollision: Boolean,
    overrideThickness: Boolean,
    customThickness: Number,
    overrideOffset: Boolean,
    customOffset: Number,
    rebuildCollision: Boolean,
  ): Unit

  @JsName("SetDefaultCollisionThickness")
  public open fun setDefaultCollisionThickness(thickness: Number, rebuildCollision: Boolean): Unit

  @JsName("ResizeMap")
  public open fun resizeMap(newWidthInTiles: Number, newHeightInTiles: Number): Unit

  @JsName("RebuildCollision")
  public open fun rebuildCollision(): Unit

  @JsName("OwnsTileMap")
  public open fun ownsTileMap(): Boolean

  @JsName("MakeTileMapEditable")
  public open fun makeTileMapEditable(): Unit

  @JsName("GetTilePolygon")
  public open fun getTilePolygon(
    tileX: Number,
    tileY: Number,
    points: Array<Vector>,
    layerIndex: Number,
    worldSpace: Boolean,
  ): PointsProvider

  @JsName("GetTileMapColor")
  public open fun getTileMapColor(): LinearColor

  @JsName("GetTileCornerPosition")
  public open fun getTileCornerPosition(
    tileX: Number,
    tileY: Number,
    layerIndex: Number,
    worldSpace: Boolean,
  ): Vector

  @JsName("GetTileCenterPosition")
  public open fun getTileCenterPosition(
    tileX: Number,
    tileY: Number,
    layerIndex: Number,
    worldSpace: Boolean,
  ): Vector

  @JsName("GetTile")
  public open fun getTile(
    x: Number,
    y: Number,
    layer: Number,
  ): PaperTileInfo

  @JsName("GetMapSize")
  public open fun getMapSize(
    mapWidth: Number,
    mapHeight: Number,
    numLayers: Number,
  ): Object824

  @JsName("GetLayerColor")
  public open fun getLayerColor(layer: Number): LinearColor

  @JsName("CreateNewTileMap")
  public open fun createNewTileMap(
    mapWidth: Number,
    mapHeight: Number,
    tileWidth: Number,
    tileHeight: Number,
    pixelsPerUnrealUnit: Number,
    createLayer: Boolean,
  ): Unit

  @JsName("AddNewLayer")
  public open fun addNewLayer(): PaperTileLayer

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PaperTileMapComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PaperTileMapComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTileMapComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTileMapComponent

    @JsName("C")
    public fun copy(other: UObject): PaperTileMapComponent

    @JsName("C")
    public fun copy(other: Any): PaperTileMapComponent
  }
}

public open external class PaperTileMapActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("RenderComponent")
  public open var renderComponent: PaperTileMapComponent

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PaperTileMapActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PaperTileMapActor

    @JsName("C")
    public fun copy(other: UObject): PaperTileMapActor

    @JsName("C")
    public fun copy(other: Any): PaperTileMapActor
  }
}

public open external class TileMapBlueprintLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TileMapBlueprintLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TileMapBlueprintLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TileMapBlueprintLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TileMapBlueprintLibrary

    @JsName("MakeTile")
    public fun makeTile(
      tileIndex: Number,
      tileSet: PaperTileSet,
      flipH: Boolean,
      flipV: Boolean,
      flipD: Boolean,
    ): PaperTileInfo

    @JsName("GetTileUserData")
    public fun getTileUserData(tile: PaperTileInfo): String

    @JsName("GetTileTransform")
    public fun getTileTransform(tile: PaperTileInfo): Transform

    @JsName("BreakTile")
    public fun breakTile(
      tile: PaperTileInfo,
      tileIndex: Number,
      tileSet: PaperTileSet,
      flipH: Boolean,
      flipV: Boolean,
      flipD: Boolean,
    ): Object822

    @JsName("C")
    public fun copy(other: UObject): TileMapBlueprintLibrary

    @JsName("C")
    public fun copy(other: Any): TileMapBlueprintLibrary
  }
}

@JsName("EdGraphNode_Reference")
public open external class EdGraphNodeReference(
  outer: UObject,
) : EdGraphNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphNodeReference

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphNodeReference

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphNodeReference

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphNodeReference

    @JsName("C")
    public fun copy(other: UObject): EdGraphNodeReference

    @JsName("C")
    public fun copy(other: Any): EdGraphNodeReference
  }
}

@JsName("EdGraph_ReferenceViewer")
public open external class EdGraphReferenceViewer(
  outer: UObject,
) : EdGraph {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphReferenceViewer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphReferenceViewer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphReferenceViewer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphReferenceViewer

    @JsName("C")
    public fun copy(other: UObject): EdGraphReferenceViewer

    @JsName("C")
    public fun copy(other: Any): EdGraphReferenceViewer
  }
}

public open external class ReferenceViewerSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ReferenceViewerSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ReferenceViewerSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ReferenceViewerSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ReferenceViewerSchema

    @JsName("C")
    public fun copy(other: UObject): ReferenceViewerSchema

    @JsName("C")
    public fun copy(other: Any): ReferenceViewerSchema
  }
}

public open external class UndoHistorySettings(
  outer: UObject,
) : UObject {
  @JsName("bShowTransactionDetails")
  public open var showTransactionDetails: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UndoHistorySettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UndoHistorySettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UndoHistorySettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UndoHistorySettings

    @JsName("C")
    public fun copy(other: UObject): UndoHistorySettings

    @JsName("C")
    public fun copy(other: Any): UndoHistorySettings
  }
}

public open external class LevelAssetEditor(
  outer: UObject,
) : AssetEditor {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelAssetEditor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelAssetEditor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelAssetEditor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelAssetEditor

    @JsName("C")
    public fun copy(other: UObject): LevelAssetEditor

    @JsName("C")
    public fun copy(other: Any): LevelAssetEditor
  }
}

public open external class PixelInspectorView(
  outer: UObject,
) : UObject {
  @JsName("FinalColor")
  public open var finalColor: LinearColor

  @JsName("SceneColor")
  public open var sceneColor: LinearColor

  @JsName("PreExposure")
  public open var preExposure: Number

  @JsName("Luminance")
  public open var luminance: Number

  @JsName("HdrColor")
  public open var hdrColor: LinearColor

  @JsName("Normal")
  public open var normal: Vector

  @JsName("PerObjectGBufferData")
  public open var perObjectGBufferData: Number

  @JsName("Metallic")
  public open var metallic: Number

  @JsName("Specular")
  public open var specular: Number

  @JsName("Roughness")
  public open var roughness: Number

  @JsName("MaterialShadingModel")
  public open var materialShadingModel: String

  @JsName("SelectiveOutputMask")
  public open var selectiveOutputMask: Number

  @JsName("BaseColor")
  public open var baseColor: LinearColor

  @JsName("IndirectIrradiance")
  public open var indirectIrradiance: Number

  @JsName("AmbientOcclusion")
  public open var ambientOcclusion: Number

  @JsName("SubsurfaceColor")
  public open var subsurfaceColor: LinearColor

  @JsName("SubsurfaceProfile")
  public open var subsurfaceProfile: Vector

  @JsName("Opacity")
  public open var opacity: Number

  @JsName("ClearCoat")
  public open var clearCoat: Number

  @JsName("ClearCoatRoughness")
  public open var clearCoatRoughness: Number

  @JsName("WorldNormal")
  public open var worldNormal: Vector

  @JsName("Backlit")
  public open var backlit: Number

  @JsName("Cloth")
  public open var cloth: Number

  @JsName("EyeTangent")
  public open var eyeTangent: Vector

  @JsName("IrisMask")
  public open var irisMask: Number

  @JsName("IrisDistance")
  public open var irisDistance: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PixelInspectorView

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PixelInspectorView

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PixelInspectorView

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PixelInspectorView

    @JsName("C")
    public fun copy(other: UObject): PixelInspectorView

    @JsName("C")
    public fun copy(other: Any): PixelInspectorView
  }
}

public open external class EditorUtilityObject(
  outer: UObject,
) : UObject {
  @JsName("Run")
  public open fun run(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityObject

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityObject

    @JsName("C")
    public fun copy(other: Any): EditorUtilityObject
  }
}

public open external class ActorActionUtility(
  outer: UObject,
) : EditorUtilityObject {
  @JsName("GetSupportedClass")
  public open fun getSupportedClass(): UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorActionUtility

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorActionUtility

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorActionUtility

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorActionUtility

    @JsName("C")
    public fun copy(other: UObject): ActorActionUtility

    @JsName("C")
    public fun copy(other: Any): ActorActionUtility
  }
}

public open external class AssetActionUtility(
  outer: UObject,
) : EditorUtilityObject {
  @JsName("IsActionForBlueprints")
  public open fun isActionForBlueprints(): Boolean

  @JsName("GetSupportedClass")
  public open fun getSupportedClass(): UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AssetActionUtility

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AssetActionUtility

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AssetActionUtility

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AssetActionUtility

    @JsName("C")
    public fun copy(other: UObject): AssetActionUtility

    @JsName("C")
    public fun copy(other: Any): AssetActionUtility
  }
}

public open external class AsyncCaptureScene(
  outer: UObject,
) : BlueprintAsyncActionBase {
  @JsName("Complete")
  public open var complete: UnrealEngineMulticastDelegate<(Texture: TextureRenderTarget2d) -> Unit>

  @JsName("SceneCapture")
  public open var sceneCapture: SceneCapture2d

  @JsName("SceneCaptureRT")
  public open var sceneCaptureRt: TextureRenderTarget2d

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncCaptureScene

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncCaptureScene

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncCaptureScene

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncCaptureScene

    @JsName("CaptureSceneAsync")
    public fun captureSceneAsync(
      viewCamera: CameraComponent,
      sceneCaptureClass: UnrealEngineClass,
      resX: Number,
      resY: Number,
    ): AsyncCaptureScene

    @JsName("C")
    public fun copy(other: UObject): AsyncCaptureScene

    @JsName("C")
    public fun copy(other: Any): AsyncCaptureScene
  }
}

public open external class AsyncImageExport(
  outer: UObject,
) : BlueprintAsyncActionBase {
  @JsName("Complete")
  public open var complete: UnrealEngineMulticastDelegate<(bSuccess: Boolean) -> Unit>

  @JsName("TextureToExport")
  public open var textureToExport: Texture

  @JsName("Quality")
  public open var quality: Number

  @JsName("TargetFile")
  public open var targetFile: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncImageExport

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncImageExport

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncImageExport

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncImageExport

    @JsName("ExportImageAsync")
    public fun exportImageAsync(
      texture: Texture,
      outputFile: String,
      quality: Number,
    ): AsyncImageExport

    @JsName("C")
    public fun copy(other: UObject): AsyncImageExport

    @JsName("C")
    public fun copy(other: Any): AsyncImageExport
  }
}

public open external class EditorUtilityWidget(
  outer: UObject,
) : UserWidget {
  @JsName("HelpText")
  public open var helpText: String

  @JsName("bAlwaysReregisterWithWindowsMenu")
  public open var alwaysReregisterWithWindowsMenu: Boolean

  @JsName("bAutoRunDefaultAction")
  public open var autoRunDefaultAction: Boolean

  @JsName("Run")
  public open fun run(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityWidget

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityWidget

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityWidget

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityWidget

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityWidget

    @JsName("C")
    public fun copy(other: Any): EditorUtilityWidget
  }
}

public open external class EditorUtilityWidgetBlueprint(
  outer: UObject,
) : WidgetBlueprint {
  @JsName("CreatedUMGWidget")
  public open var createdUmgWidget: EditorUtilityWidget

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityWidgetBlueprint

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityWidgetBlueprint

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityWidgetBlueprint

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityWidgetBlueprint

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityWidgetBlueprint

    @JsName("C")
    public fun copy(other: Any): EditorUtilityWidgetBlueprint
  }
}

@JsName("T$825")
public external interface Object825 {
  @JsName("NewTabID")
  public var newTabId: String

  @JsName("$")
  public var value: EditorUtilityWidget
}

@JsName("T$826")
public external interface NewTabIdProvider {
  @JsName("NewTabID")
  public var newTabId: String
}

public open external class EditorUtilitySubsystem(
  outer: UObject,
) : EditorSubsystem {
  @JsName("LoadedUIs")
  public open var loadedUIs: Array<SoftObjectPath>

  @JsName("StartupObjects")
  public open var startupObjects: Array<SoftObjectPath>

  @JsName("OnBeginPIE")
  public open var onBeginPie: UnrealEngineMulticastDelegate<(bIsSimulating: Boolean) -> Unit>

  @JsName("OnEndPIE")
  public open var onEndPie: UnrealEngineMulticastDelegate<(bIsSimulating: Boolean) -> Unit>

  @JsName("ObjectInstances")
  public open var objectInstances: Any

  @JsName("ActiveTaskStack")
  public open var activeTaskStack: Array<EditorUtilityTask>

  @JsName("ReferencedObjects")
  public open var referencedObjects: Any

  @JsName("TryRun")
  public open fun tryRun(asset: UObject): Boolean

  @JsName("SpawnRegisteredTabByID")
  public open fun spawnRegisteredTabById(newTabId: String): Boolean

  @JsName("SpawnAndRegisterTabAndGetID")
  public open fun spawnAndRegisterTabAndGetId(inBlueprint: EditorUtilityWidgetBlueprint,
      newTabId: String): Object825

  @JsName("SpawnAndRegisterTab")
  public open fun spawnAndRegisterTab(inBlueprint: EditorUtilityWidgetBlueprint):
      EditorUtilityWidget

  @JsName("ReleaseInstanceOfAsset")
  public open fun releaseInstanceOfAsset(asset: UObject): Unit

  @JsName("RegisterTabAndGetID")
  public open fun registerTabAndGetId(inBlueprint: EditorUtilityWidgetBlueprint, newTabId: String):
      NewTabIdProvider

  @JsName("RegisterAndExecuteTask")
  public open fun registerAndExecuteTask(newTask: EditorUtilityTask,
      optionalParentTask: EditorUtilityTask): Unit

  @JsName("FindUtilityWidgetFromBlueprint")
  public open fun findUtilityWidgetFromBlueprint(inBlueprint: EditorUtilityWidgetBlueprint):
      EditorUtilityWidget

  @JsName("DoesTabExist")
  public open fun doesTabExist(newTabId: String): Boolean

  @JsName("CloseTabByID")
  public open fun closeTabById(newTabId: String): Boolean

  @JsName("CanRun")
  public open fun canRun(asset: UObject): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilitySubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilitySubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilitySubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilitySubsystem

    @JsName("C")
    public fun copy(other: UObject): EditorUtilitySubsystem

    @JsName("C")
    public fun copy(other: Any): EditorUtilitySubsystem
  }
}

public open external class EditorUtilityTask(
  outer: UObject,
) : UObject {
  @JsName("MyTaskManager")
  public open var myTaskManager: EditorUtilitySubsystem

  @JsName("MyParentTask")
  public open var myParentTask: EditorUtilityTask

  @JsName("bCancelRequested")
  public open var cancelRequested: Boolean

  @JsName("WasCancelRequested")
  public open fun wasCancelRequested(): Boolean

  @JsName("SetTaskNotificationText")
  public open fun setTaskNotificationText(text: String): Unit

  @JsName("Run")
  public open fun run(): Unit

  @JsName("ReceiveCancelRequested")
  public open fun receiveCancelRequested(): Unit

  @JsName("ReceiveBeginExecution")
  public open fun receiveBeginExecution(): Unit

  @JsName("FinishExecutingTask")
  public open fun finishExecutingTask(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityTask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityTask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityTask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityTask

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityTask

    @JsName("C")
    public fun copy(other: Any): EditorUtilityTask
  }
}

public open external class AsyncRegisterAndExecuteTask(
  outer: UObject,
) : BlueprintAsyncActionBase {
  @JsName("OnFinished")
  public open var onFinished: UnrealEngineMulticastDelegate<(Task: EditorUtilityTask) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncRegisterAndExecuteTask

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncRegisterAndExecuteTask

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncRegisterAndExecuteTask

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncRegisterAndExecuteTask

    @JsName("RegisterAndExecuteTask")
    public fun registerAndExecuteTask(task: EditorUtilityTask,
        optionalParentTask: EditorUtilityTask): AsyncRegisterAndExecuteTask

    @JsName("C")
    public fun copy(other: UObject): AsyncRegisterAndExecuteTask

    @JsName("C")
    public fun copy(other: Any): AsyncRegisterAndExecuteTask
  }
}

public open external class EditorUtilityExtension(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityExtension

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityExtension

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityExtension

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityExtension

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityExtension

    @JsName("C")
    public fun copy(other: Any): EditorUtilityExtension
  }
}

public open external class EditorUtilityActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("Run")
  public open fun run(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityActor

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityActor

    @JsName("C")
    public fun copy(other: Any): EditorUtilityActor
  }
}

public open external class EditorUtilityActorComponent(
  outer: UObject,
) : ActorComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityActorComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityActorComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityActorComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityActorComponent

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityActorComponent

    @JsName("C")
    public fun copy(other: Any): EditorUtilityActorComponent
  }
}

public open external class EditorUtilityBlueprint(
  outer: UObject,
) : Blueprint {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityBlueprint

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityBlueprint

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityBlueprint

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityBlueprint

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityBlueprint

    @JsName("C")
    public fun copy(other: Any): EditorUtilityBlueprint
  }
}

public open external class EditorUtilityBlueprintFactory(
  outer: UObject,
) : Factory {
  @JsName("ParentClass")
  public open var parentClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityBlueprintFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityBlueprintFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityBlueprintFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityBlueprintFactory

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityBlueprintFactory

    @JsName("C")
    public fun copy(other: Any): EditorUtilityBlueprintFactory
  }
}

public open external class EditorUtilityCamera(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : CameraActor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityCamera

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityCamera

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityCamera

    @JsName("C")
    public fun copy(other: Any): EditorUtilityCamera
  }
}

public open external class EditorUtilityBlueprintAsyncActionBase(
  outer: UObject,
) : BlueprintAsyncActionBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityBlueprintAsyncActionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityBlueprintAsyncActionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityBlueprintAsyncActionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityBlueprintAsyncActionBase

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityBlueprintAsyncActionBase

    @JsName("C")
    public fun copy(other: Any): EditorUtilityBlueprintAsyncActionBase
  }
}

public open external class AsyncEditorDelay(
  outer: UObject,
) : EditorUtilityBlueprintAsyncActionBase {
  @JsName("Complete")
  public open var complete: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncEditorDelay

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncEditorDelay

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncEditorDelay

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncEditorDelay

    @JsName("AsyncEditorDelay")
    public fun asyncEditorDelay(seconds: Number, minimumFrames: Number): AsyncEditorDelay

    @JsName("C")
    public fun copy(other: UObject): AsyncEditorDelay

    @JsName("C")
    public fun copy(other: Any): AsyncEditorDelay
  }
}

public open external class AsyncEditorWaitForGameWorld(
  outer: UObject,
) : EditorUtilityBlueprintAsyncActionBase {
  @JsName("Complete")
  public open var complete: UnrealEngineMulticastDelegate<(World: World) -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncEditorWaitForGameWorld

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncEditorWaitForGameWorld

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncEditorWaitForGameWorld

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncEditorWaitForGameWorld

    @JsName("AsyncWaitForGameWorld")
    public fun asyncWaitForGameWorld(index: Number, server: Boolean): AsyncEditorWaitForGameWorld

    @JsName("C")
    public fun copy(other: UObject): AsyncEditorWaitForGameWorld

    @JsName("C")
    public fun copy(other: Any): AsyncEditorWaitForGameWorld
  }
}

public open external class AsyncEditorOpenMapAndFocusActor(
  outer: UObject,
) : EditorUtilityBlueprintAsyncActionBase {
  @JsName("Complete")
  public open var complete: UnrealEngineMulticastDelegate<() -> Unit>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncEditorOpenMapAndFocusActor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncEditorOpenMapAndFocusActor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncEditorOpenMapAndFocusActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncEditorOpenMapAndFocusActor

    @JsName("AsyncEditorOpenMapAndFocusActor")
    public fun asyncEditorOpenMapAndFocusActor(map: SoftObjectPath, focusActorName: String):
        AsyncEditorOpenMapAndFocusActor

    @JsName("C")
    public fun copy(other: UObject): AsyncEditorOpenMapAndFocusActor

    @JsName("C")
    public fun copy(other: Any): AsyncEditorOpenMapAndFocusActor
  }
}

public open external class EditorUtilityLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  @JsName("GetActorReference")
  public open fun getActorReference(pathToActor: String): Actor

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityLibrary

    @JsName("RenameAsset")
    public fun renameAsset(asset: UObject, newName: String): Unit

    @JsName("GetSelectionSet")
    public fun getSelectionSet(): Array<Actor>

    @JsName("GetSelectionBounds")
    public fun getSelectionBounds(
      origin: Vector,
      boxExtent: Vector,
      sphereRadius: Number,
    ): Object153

    @JsName("GetSelectedBlueprintClasses")
    public fun getSelectedBlueprintClasses(): Array<UnrealEngineClass>

    @JsName("GetSelectedAssets")
    public fun getSelectedAssets(): Array<UObject>

    @JsName("GetSelectedAssetData")
    public fun getSelectedAssetData(): Array<AssetData>

    @JsName("GetCurrentContentBrowserPath")
    public fun getCurrentContentBrowserPath(outPath: String): OutPathValueProvider

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityLibrary

    @JsName("C")
    public fun copy(other: Any): EditorUtilityLibrary
  }
}

public open external class EditorUtilityToolMenuEntry(
  outer: UObject,
) : ToolMenuEntryScript {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityToolMenuEntry

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityToolMenuEntry

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityToolMenuEntry

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityToolMenuEntry

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityToolMenuEntry

    @JsName("C")
    public fun copy(other: Any): EditorUtilityToolMenuEntry
  }
}

public open external class EditorUtilityToolMenuSection(
  outer: UObject,
) : ToolMenuSectionDynamic {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityToolMenuSection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityToolMenuSection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityToolMenuSection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityToolMenuSection

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityToolMenuSection

    @JsName("C")
    public fun copy(other: Any): EditorUtilityToolMenuSection
  }
}

public open external class EditorUtilityWidgetBlueprintFactory(
  outer: UObject,
) : Factory {
  @JsName("BlueprintType")
  public open var blueprintType: String

  @JsName("ParentClass")
  public open var parentClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorUtilityWidgetBlueprintFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorUtilityWidgetBlueprintFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorUtilityWidgetBlueprintFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorUtilityWidgetBlueprintFactory

    @JsName("C")
    public fun copy(other: UObject): EditorUtilityWidgetBlueprintFactory

    @JsName("C")
    public fun copy(other: Any): EditorUtilityWidgetBlueprintFactory
  }
}

public open external class GlobalEditorUtilityBase(
  outer: UObject,
) : UObject {
  @JsName("HelpText")
  public open var helpText: String

  @JsName("bDirtiedSelectionSet")
  public open var dirtiedSelectionSet: Boolean

  @JsName("bAutoRunDefaultAction")
  public open var autoRunDefaultAction: Boolean

  @JsName("OnEachSelectedActor")
  public open var onEachSelectedActor: UnrealEngineMulticastDelegate<(Actor: Actor,
      index: Number) -> Unit>

  @JsName("OnEachSelectedAsset")
  public open var onEachSelectedAsset: UnrealEngineMulticastDelegate<(Asset: UObject,
      index: Number) -> Unit>

  @JsName("SetActorSelectionState")
  public open fun setActorSelectionState(actor: Actor, shouldBeSelected: Boolean): Unit

  @JsName("SelectNothing")
  public open fun selectNothing(): Unit

  @JsName("RenameAsset")
  public open fun renameAsset(asset: UObject, newName: String): Unit

  @JsName("OnDefaultActionClicked")
  public open fun onDefaultActionClicked(): Unit

  @JsName("GetSelectionSet")
  public open fun getSelectionSet(): Array<Actor>

  @JsName("GetSelectionBounds")
  public open fun getSelectionBounds(
    origin: Vector,
    boxExtent: Vector,
    sphereRadius: Number,
  ): Object153

  @JsName("GetSelectedAssets")
  public open fun getSelectedAssets(): Array<UObject>

  @JsName("GetEditorUserSettings")
  public open fun getEditorUserSettings(): EditorPerProjectUserSettings

  @JsName("GetActorReference")
  public open fun getActorReference(pathToActor: String): Actor

  @JsName("ForEachSelectedAsset")
  public open fun forEachSelectedAsset(): Unit

  @JsName("ForEachSelectedActor")
  public open fun forEachSelectedActor(): Unit

  @JsName("ClearActorSelectionSet")
  public open fun clearActorSelectionSet(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GlobalEditorUtilityBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GlobalEditorUtilityBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GlobalEditorUtilityBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GlobalEditorUtilityBase

    @JsName("C")
    public fun copy(other: UObject): GlobalEditorUtilityBase

    @JsName("C")
    public fun copy(other: Any): GlobalEditorUtilityBase
  }
}

public open external class PlacedEditorUtilityBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("HelpText")
  public open var helpText: String

  @JsName("SetLevelViewportCameraInfo")
  public open fun setLevelViewportCameraInfo(cameraLocation: Vector, cameraRotation: Rotator): Unit

  @JsName("SetActorSelectionState")
  public open fun setActorSelectionState(actor: Actor, shouldBeSelected: Boolean): Unit

  @JsName("SelectNothing")
  public open fun selectNothing(): Unit

  @JsName("GetSelectionSet")
  public open fun getSelectionSet(): Array<Actor>

  @JsName("GetLevelViewportCameraInfo")
  public open fun getLevelViewportCameraInfo(cameraLocation: Vector, cameraRotation: Rotator):
      Object436

  @JsName("GetActorReference")
  public open fun getActorReference(pathToActor: String): Actor

  @JsName("ClearActorSelectionSet")
  public open fun clearActorSelectionSet(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlacedEditorUtilityBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlacedEditorUtilityBase

    @JsName("C")
    public fun copy(other: UObject): PlacedEditorUtilityBase

    @JsName("C")
    public fun copy(other: Any): PlacedEditorUtilityBase
  }
}

public open external class DataValidationChangelist(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DataValidationChangelist

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DataValidationChangelist

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DataValidationChangelist

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DataValidationChangelist

    @JsName("C")
    public fun copy(other: UObject): DataValidationChangelist

    @JsName("C")
    public fun copy(other: Any): DataValidationChangelist
  }
}

public open external class DataValidationCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DataValidationCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DataValidationCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DataValidationCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DataValidationCommandlet

    @JsName("C")
    public fun copy(other: UObject): DataValidationCommandlet

    @JsName("C")
    public fun copy(other: Any): DataValidationCommandlet
  }
}

public open external class DataValidationManager(
  outer: UObject,
) : UObject {
  @JsName("ExcludedDirectories")
  public open var excludedDirectories: Array<DirectoryPath>

  @JsName("bValidateOnSave")
  public open var validateOnSave: Boolean

  @JsName("DataValidationManagerClassName")
  public open var dataValidationManagerClassName: SoftClassPath

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DataValidationManager

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DataValidationManager

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DataValidationManager

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DataValidationManager

    @JsName("C")
    public fun copy(other: UObject): DataValidationManager

    @JsName("C")
    public fun copy(other: Any): DataValidationManager
  }
}

@JsName("EDataValidationResult")
public external object DataValidationResult {
  public var Invalid: String

  public var Valid: String

  public var NotValidated: String

  @JsName("EDataValidationResult_MAX")
  public var Max: String
}

@JsName("EDataValidationUsecase")
public external object DataValidationUsecase {
  public var None: String

  public var Manual: String

  public var Commandlet: String

  public var Save: String

  public var PreSubmit: String

  public var Script: String

  @JsName("EDataValidationUsecase_MAX")
  public var Max: String
}

@JsName("T$827")
public external interface Object827 {
  @JsName("ValidationErrors")
  public var validationErrors: Array<String>

  @JsName("$")
  public var value: String
}

@JsName("T$828")
public external interface ValidationErrorsProvider {
  @JsName("ValidationErrors")
  public var validationErrors: Array<String>
}

public open external class EditorValidatorBase(
  outer: UObject,
) : UObject {
  @JsName("bIsEnabled")
  public open var isEnabled: Boolean

  @JsName("ValidateLoadedAsset")
  public open fun validateLoadedAsset(inAsset: UObject, validationErrors: Array<String>): Object827

  @JsName("GetValidationResult")
  public open fun getValidationResult(): String

  @JsName("CanValidateAsset")
  public open fun canValidateAsset(inAsset: UObject): Boolean

  @JsName("CanValidate")
  public open fun canValidate(inUsecase: String): Boolean

  @JsName("AssetWarning")
  public open fun assetWarning(inAsset: UObject, inMessage: String): Unit

  @JsName("AssetPasses")
  public open fun assetPasses(inAsset: UObject): Unit

  @JsName("AssetFails")
  public open fun assetFails(
    inAsset: UObject,
    inMessage: String,
    validationErrors: Array<String>,
  ): ValidationErrorsProvider

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorValidatorBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorValidatorBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorValidatorBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorValidatorBase

    @JsName("C")
    public fun copy(other: UObject): EditorValidatorBase

    @JsName("C")
    public fun copy(other: Any): EditorValidatorBase
  }
}

public open external class DirtyFilesChangelistValidator(
  outer: UObject,
) : EditorValidatorBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DirtyFilesChangelistValidator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DirtyFilesChangelistValidator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DirtyFilesChangelistValidator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DirtyFilesChangelistValidator

    @JsName("C")
    public fun copy(other: UObject): DirtyFilesChangelistValidator

    @JsName("C")
    public fun copy(other: Any): DirtyFilesChangelistValidator
  }
}

public open external class DataValidationSettings(
  outer: UObject,
) : UObject {
  @JsName("bValidateOnSave")
  public open var validateOnSave: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DataValidationSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DataValidationSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DataValidationSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DataValidationSettings

    @JsName("C")
    public fun copy(other: UObject): DataValidationSettings

    @JsName("C")
    public fun copy(other: Any): DataValidationSettings
  }
}

public open external class ValidateAssetsSettings {
  @JsName("bSkipExcludedDirectories")
  public open var skipExcludedDirectories: Boolean

  @JsName("bShowIfNoFailures")
  public open var showIfNoFailures: Boolean

  @JsName("ValidationUsecase")
  public open var validationUsecase: String

  public open fun clone(): ValidateAssetsSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ValidateAssetsSettings

    @JsName("C")
    public fun copy(other: Any): ValidateAssetsSettings
  }
}

public open external class ValidateAssetsResults {
  @JsName("NumChecked")
  public open var numChecked: Number

  @JsName("NumValid")
  public open var numValid: Number

  @JsName("NumInvalid")
  public open var numInvalid: Number

  @JsName("NumSkipped")
  public open var numSkipped: Number

  @JsName("NumWarnings")
  public open var numWarnings: Number

  @JsName("NumUnableToValidate")
  public open var numUnableToValidate: Number

  public open fun clone(): ValidateAssetsResults

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ValidateAssetsResults

    @JsName("C")
    public fun copy(other: Any): ValidateAssetsResults
  }
}

@JsName("T$829")
public external interface Object829 {
  @JsName("OutResults")
  public var outResults: ValidateAssetsResults

  @JsName("$")
  public var value: Number
}

@JsName("T$830")
public external interface Object830 {
  @JsName("ValidationErrors")
  public var validationErrors: Array<String>

  @JsName("ValidationWarnings")
  public var validationWarnings: Array<String>

  @JsName("$")
  public var value: String
}

public open external class EditorValidatorSubsystem(
  outer: UObject,
) : EditorSubsystem {
  @JsName("ExcludedDirectories")
  public open var excludedDirectories: Array<DirectoryPath>

  @JsName("bValidateOnSave")
  public open var validateOnSave: Boolean

  @JsName("Validators")
  public open var validators: Any

  @JsName("bValidateAssetsWhileSavingForCook")
  public open var validateAssetsWhileSavingForCook: Boolean

  @JsName("bAllowBlueprintValidators")
  public open var allowBlueprintValidators: Boolean

  @JsName("ValidateAssetsWithSettings")
  public open fun validateAssetsWithSettings(
    assetDataList: Array<AssetData>,
    inSettings: ValidateAssetsSettings,
    outResults: ValidateAssetsResults,
  ): Object829

  @JsName("ValidateAssets")
  public open fun validateAssets(
    assetDataList: Array<AssetData>,
    skipExcludedDirectories: Boolean,
    showIfNoFailures: Boolean,
  ): Number

  @JsName("IsObjectValid")
  public open fun isObjectValid(
    inObject: UObject,
    validationErrors: Array<String>,
    validationWarnings: Array<String>,
    inValidationUsecase: String,
  ): Object830

  @JsName("IsAssetValid")
  public open fun isAssetValid(
    assetData: AssetData,
    validationErrors: Array<String>,
    validationWarnings: Array<String>,
    inValidationUsecase: String,
  ): Object830

  @JsName("AddValidator")
  public open fun addValidator(inValidator: EditorValidatorBase): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorValidatorSubsystem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorValidatorSubsystem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorValidatorSubsystem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorValidatorSubsystem

    @JsName("C")
    public fun copy(other: UObject): EditorValidatorSubsystem

    @JsName("C")
    public fun copy(other: Any): EditorValidatorSubsystem
  }
}

@JsName("EditorValidator_Localization")
public open external class EditorValidatorLocalization(
  outer: UObject,
) : EditorValidatorBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorValidatorLocalization

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorValidatorLocalization

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorValidatorLocalization

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorValidatorLocalization

    @JsName("C")
    public fun copy(other: UObject): EditorValidatorLocalization

    @JsName("C")
    public fun copy(other: Any): EditorValidatorLocalization
  }
}

public open external class UncontrolledChangelistValidator(
  outer: UObject,
) : EditorValidatorBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): UncontrolledChangelistValidator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): UncontrolledChangelistValidator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): UncontrolledChangelistValidator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): UncontrolledChangelistValidator

    @JsName("C")
    public fun copy(other: UObject): UncontrolledChangelistValidator

    @JsName("C")
    public fun copy(other: Any): UncontrolledChangelistValidator
  }
}

public open external class WorldPartitionChangelistValidator(
  outer: UObject,
) : EditorValidatorBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionChangelistValidator

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionChangelistValidator

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionChangelistValidator

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionChangelistValidator

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionChangelistValidator

    @JsName("C")
    public fun copy(other: Any): WorldPartitionChangelistValidator
  }
}

public open external class AudioCurveSourceComponent(
  outer: UObject,
) : AudioComponent {
  @JsName("CurveSourceBindingName")
  public open var curveSourceBindingName: String

  @JsName("CurveSyncOffset")
  public open var curveSyncOffset: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioCurveSourceComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioCurveSourceComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioCurveSourceComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioCurveSourceComponent

    @JsName("C")
    public fun copy(other: UObject): AudioCurveSourceComponent

    @JsName("C")
    public fun copy(other: Any): AudioCurveSourceComponent
  }
}

public open external class FacialAnimationBulkImporterSettings(
  outer: UObject,
) : UObject {
  @JsName("SourceImportPath")
  public open var sourceImportPath: DirectoryPath

  @JsName("TargetImportPath")
  public open var targetImportPath: DirectoryPath

  @JsName("CurveNodeName")
  public open var curveNodeName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FacialAnimationBulkImporterSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FacialAnimationBulkImporterSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FacialAnimationBulkImporterSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FacialAnimationBulkImporterSettings

    @JsName("C")
    public fun copy(other: UObject): FacialAnimationBulkImporterSettings

    @JsName("C")
    public fun copy(other: Any): FacialAnimationBulkImporterSettings
  }
}

public open external class GameplayTagSearchFilter(
  outer: UObject,
) : ContentBrowserFrontEndFilterExtension {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagSearchFilter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GameplayTagSearchFilter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagSearchFilter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagSearchFilter

    @JsName("C")
    public fun copy(other: UObject): GameplayTagSearchFilter

    @JsName("C")
    public fun copy(other: Any): GameplayTagSearchFilter
  }
}

@JsName("GameplayTagsK2Node_LiteralGameplayTag")
public open external class GameplayTagsK2NodeLiteralGameplayTag(
  outer: UObject,
) : K2Node {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeLiteralGameplayTag

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GameplayTagsK2NodeLiteralGameplayTag

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeLiteralGameplayTag

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeLiteralGameplayTag

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeLiteralGameplayTag

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeLiteralGameplayTag
  }
}

@JsName("GameplayTagsK2Node_MultiCompareBase")
public open external class GameplayTagsK2NodeMultiCompareBase(
  outer: UObject,
) : K2Node {
  @JsName("NumberOfPins")
  public open var numberOfPins: Number

  @JsName("PinNames")
  public open var pinNames: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeMultiCompareBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GameplayTagsK2NodeMultiCompareBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeMultiCompareBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeMultiCompareBase

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeMultiCompareBase

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeMultiCompareBase
  }
}

@JsName("GameplayTagsK2Node_MultiCompareGameplayTagAssetInterface")
public open external class GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface(
  outer: UObject,
) : GameplayTagsK2NodeMultiCompareBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterface
  }
}

@JsName("GameplayTagsK2Node_MultiCompareGameplayTagAssetInterfaceSingleTags")
public open external class GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags(
  outer: UObject,
) : GameplayTagsK2NodeMultiCompareBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags

    @JsName("C")
    public fun copy(other: UObject):
        GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeMultiCompareGameplayTagAssetInterfaceSingleTags
  }
}

@JsName("GameplayTagsK2Node_MultiCompareGameplayTagContainer")
public open external class GameplayTagsK2NodeMultiCompareGameplayTagContainer(
  outer: UObject,
) : GameplayTagsK2NodeMultiCompareBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeMultiCompareGameplayTagContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeMultiCompareGameplayTagContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeMultiCompareGameplayTagContainer

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeMultiCompareGameplayTagContainer

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeMultiCompareGameplayTagContainer
  }
}

@JsName("GameplayTagsK2Node_MultiCompareGameplayTagContainerSingleTags")
public open external class GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags(
  outer: UObject,
) : GameplayTagsK2NodeMultiCompareBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeMultiCompareGameplayTagContainerSingleTags
  }
}

@JsName("GameplayTagsK2Node_SwitchGameplayTag")
public open external class GameplayTagsK2NodeSwitchGameplayTag(
  outer: UObject,
) : K2NodeSwitch {
  @JsName("PinTags")
  public open var pinTags: Array<GameplayTag>

  @JsName("PinNames")
  public open var pinNames: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeSwitchGameplayTag

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GameplayTagsK2NodeSwitchGameplayTag

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeSwitchGameplayTag

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeSwitchGameplayTag

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeSwitchGameplayTag

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeSwitchGameplayTag
  }
}

@JsName("GameplayTagsK2Node_SwitchGameplayTagContainer")
public open external class GameplayTagsK2NodeSwitchGameplayTagContainer(
  outer: UObject,
) : K2NodeSwitch {
  @JsName("PinContainers")
  public open var pinContainers: Array<GameplayTagContainer>

  @JsName("PinNames")
  public open var pinNames: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTagsK2NodeSwitchGameplayTagContainer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTagsK2NodeSwitchGameplayTagContainer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTagsK2NodeSwitchGameplayTagContainer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTagsK2NodeSwitchGameplayTagContainer

    @JsName("C")
    public fun copy(other: UObject): GameplayTagsK2NodeSwitchGameplayTagContainer

    @JsName("C")
    public fun copy(other: Any): GameplayTagsK2NodeSwitchGameplayTagContainer
  }
}

@JsName("RigVMMemoryStorageGeneratorClass")
public open external class RigVmMemoryStorageGeneratorClass(
  outer: UObject,
) : Class {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RigVmMemoryStorageGeneratorClass

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RigVmMemoryStorageGeneratorClass

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RigVmMemoryStorageGeneratorClass

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RigVmMemoryStorageGeneratorClass

    @JsName("C")
    public fun copy(other: UObject): RigVmMemoryStorageGeneratorClass

    @JsName("C")
    public fun copy(other: Any): RigVmMemoryStorageGeneratorClass
  }
}

@JsName("RigVMCompiler")
public open external class RigVmCompiler(
  outer: UObject,
) : UObject {
  @JsName("Settings")
  public open var settings: RigVmCompileSettings

  @JsName("Compile")
  public open fun compile(
    inGraph: RigVmGraph,
    inController: RigVmController,
    outVm: RigVm,
  ): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RigVmCompiler

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RigVmCompiler

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RigVmCompiler

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RigVmCompiler

    @JsName("C")
    public fun copy(other: UObject): RigVmCompiler

    @JsName("C")
    public fun copy(other: Any): RigVmCompiler
  }
}

public open external class AdditiveControlRig(
  outer: UObject,
) : ControlRig {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AdditiveControlRig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AdditiveControlRig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AdditiveControlRig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AdditiveControlRig

    @JsName("C")
    public fun copy(other: UObject): AdditiveControlRig

    @JsName("C")
    public fun copy(other: Any): AdditiveControlRig
  }
}

public open external class ControlRigAnimInstance(
  outer: UObject,
) : AnimInstance {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigAnimInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigAnimInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigAnimInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigAnimInstance

    @JsName("C")
    public fun copy(other: UObject): ControlRigAnimInstance

    @JsName("C")
    public fun copy(other: Any): ControlRigAnimInstance
  }
}

public open external class ControlRigBlueprintGeneratedClass(
  outer: UObject,
) : BlueprintGeneratedClass {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigBlueprintGeneratedClass

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigBlueprintGeneratedClass

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigBlueprintGeneratedClass

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigBlueprintGeneratedClass

    @JsName("C")
    public fun copy(other: UObject): ControlRigBlueprintGeneratedClass

    @JsName("C")
    public fun copy(other: Any): ControlRigBlueprintGeneratedClass
  }
}

public open external class ComponentReference {
  @JsName("OtherActor")
  public open var otherActor: Actor

  @JsName("ComponentProperty")
  public open var componentProperty: String

  @JsName("PathToComponent")
  public open var pathToComponent: String

  public open fun clone(): ComponentReference

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ComponentReference

    @JsName("C")
    public fun copy(other: Any): ComponentReference
  }
}

@JsName("EControlRigComponentMapDirection")
public external object ControlRigComponentMapDirection {
  public var Input: String

  public var Output: String

  @JsName("EControlRigComponentMapDirection_MAX")
  public var Max: String
}

@JsName("EControlRigComponentSpace")
public external object ControlRigComponentSpace {
  public var WorldSpace: String

  public var ActorSpace: String

  public var ComponentSpace: String

  public var RigSpace: String

  public var LocalSpace: String

  public var Max: String

  @JsName("EControlRigComponentSpace_MAX")
  public var _Max: String
}

public open external class ControlRigComponentMappedElement {
  @JsName("ComponentReference")
  public open var componentReference: ComponentReference

  @JsName("TransformIndex")
  public open var transformIndex: Number

  @JsName("TransformName")
  public open var transformName: String

  @JsName("ElementType")
  public open var elementType: String

  @JsName("ElementName")
  public open var elementName: String

  @JsName("Direction")
  public open var direction: String

  @JsName("Offset")
  public open var offset: Transform

  @JsName("Weight")
  public open var weight: Number

  @JsName("Space")
  public open var space: String

  @JsName("SceneComponent")
  public open var sceneComponent: SceneComponent

  @JsName("ElementIndex")
  public open var elementIndex: Number

  @JsName("SubIndex")
  public open var subIndex: Number

  public open fun clone(): ControlRigComponentMappedElement

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigComponentMappedElement

    @JsName("C")
    public fun copy(other: Any): ControlRigComponentMappedElement
  }
}

public open external class ControlRigComponentMappedBone {
  @JsName("Source")
  public open var source: String

  @JsName("Target")
  public open var target: String

  public open fun clone(): ControlRigComponentMappedBone

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigComponentMappedBone

    @JsName("C")
    public fun copy(other: Any): ControlRigComponentMappedBone
  }
}

public open external class ControlRigComponentMappedCurve {
  @JsName("Source")
  public open var source: String

  @JsName("Target")
  public open var target: String

  public open fun clone(): ControlRigComponentMappedCurve

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigComponentMappedCurve

    @JsName("C")
    public fun copy(other: Any): ControlRigComponentMappedCurve
  }
}

public open external class ControlRigComponentMappedComponent {
  @JsName("Component")
  public open var component: SceneComponent

  @JsName("ElementName")
  public open var elementName: String

  @JsName("ElementType")
  public open var elementType: String

  @JsName("Direction")
  public open var direction: String

  public open fun clone(): ControlRigComponentMappedComponent

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigComponentMappedComponent

    @JsName("C")
    public fun copy(other: Any): ControlRigComponentMappedComponent
  }
}

public open external class ControlRigComponent(
  outer: UObject,
) : PrimitiveComponent {
  @JsName("ControlRigClass")
  public open var controlRigClass: UnrealEngineClass

  @JsName("OnPreInitializeDelegate")
  public open var onPreInitializeDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("OnPostInitializeDelegate")
  public open var onPostInitializeDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("OnPreSetupDelegate")
  public open var onPreSetupDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("OnPostSetupDelegate")
  public open var onPostSetupDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("OnPreForwardsSolveDelegate")
  public open var onPreForwardsSolveDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("OnPostForwardsSolveDelegate")
  public open var onPostForwardsSolveDelegate:
      UnrealEngineMulticastDelegate<(Component: ControlRigComponent) -> Unit>

  @JsName("MappedElements")
  public open var mappedElements: Array<ControlRigComponentMappedElement>

  @JsName("bEnableLazyEvaluation")
  public open var enableLazyEvaluation: Boolean

  @JsName("LazyEvaluationPositionThreshold")
  public open var lazyEvaluationPositionThreshold: Number

  @JsName("LazyEvaluationRotationThreshold")
  public open var lazyEvaluationRotationThreshold: Number

  @JsName("LazyEvaluationScaleThreshold")
  public open var lazyEvaluationScaleThreshold: Number

  @JsName("bResetTransformBeforeTick")
  public open var resetTransformBeforeTick: Boolean

  @JsName("bResetInitialsBeforeSetup")
  public open var resetInitialsBeforeSetup: Boolean

  @JsName("bUpdateRigOnTick")
  public open var updateRigOnTick: Boolean

  @JsName("bUpdateInEditor")
  public open var updateInEditor: Boolean

  @JsName("bDrawBones")
  public open var drawBones: Boolean

  @JsName("bShowDebugDrawing")
  public open var showDebugDrawing: Boolean

  @JsName("ControlRig")
  public open var controlRig: ControlRig

  @JsName("Update")
  public open fun update(deltaTime: Number): Unit

  @JsName("SetMappedElements")
  public open fun setMappedElements(newMappedElements: Array<ControlRigComponentMappedElement>):
      Unit

  @JsName("SetInitialSpaceTransform")
  public open fun setInitialSpaceTransform(
    spaceName: String,
    initialTransform: Transform,
    space: String,
  ): Unit

  @JsName("SetInitialBoneTransform")
  public open fun setInitialBoneTransform(
    boneName: String,
    initialTransform: Transform,
    space: String,
    propagateToChildren: Boolean,
  ): Unit

  @JsName("SetControlVector2D")
  public open fun setControlVector2d(controlName: String, value: Vector2d): Unit

  @JsName("SetControlTransform")
  public open fun setControlTransform(
    controlName: String,
    value: Transform,
    space: String,
  ): Unit

  @JsName("SetControlScale")
  public open fun setControlScale(
    controlName: String,
    value: Vector,
    space: String,
  ): Unit

  @JsName("SetControlRotator")
  public open fun setControlRotator(
    controlName: String,
    value: Rotator,
    space: String,
  ): Unit

  @JsName("SetControlPosition")
  public open fun setControlPosition(
    controlName: String,
    value: Vector,
    space: String,
  ): Unit

  @JsName("SetControlOffset")
  public open fun setControlOffset(
    controlName: String,
    offsetTransform: Transform,
    space: String,
  ): Unit

  @JsName("SetControlInt")
  public open fun setControlInt(controlName: String, value: Number): Unit

  @JsName("SetControlFloat")
  public open fun setControlFloat(controlName: String, value: Number): Unit

  @JsName("SetControlBool")
  public open fun setControlBool(controlName: String, value: Boolean): Unit

  @JsName("SetBoneTransform")
  public open fun setBoneTransform(
    boneName: String,
    transform: Transform,
    space: String,
    weight: Number,
    propagateToChildren: Boolean,
  ): Unit

  @JsName("SetBoneInitialTransformsFromSkeletalMesh")
  public open fun setBoneInitialTransformsFromSkeletalMesh(inSkeletalMesh: SkeletalMesh): Unit

  @JsName("OnPreSetup")
  public open fun onPreSetup(component: ControlRigComponent): Unit

  @JsName("OnPreInitialize")
  public open fun onPreInitialize(component: ControlRigComponent): Unit

  @JsName("OnPreForwardsSolve")
  public open fun onPreForwardsSolve(component: ControlRigComponent): Unit

  @JsName("OnPostSetup")
  public open fun onPostSetup(component: ControlRigComponent): Unit

  @JsName("OnPostInitialize")
  public open fun onPostInitialize(component: ControlRigComponent): Unit

  @JsName("OnPostForwardsSolve")
  public open fun onPostForwardsSolve(component: ControlRigComponent): Unit

  @JsName("Initialize")
  public open fun initialize(): Unit

  @JsName("GetSpaceTransform")
  public open fun getSpaceTransform(spaceName: String, space: String): Transform

  @JsName("GetInitialSpaceTransform")
  public open fun getInitialSpaceTransform(spaceName: String, space: String): Transform

  @JsName("GetInitialBoneTransform")
  public open fun getInitialBoneTransform(boneName: String, space: String): Transform

  @JsName("GetElementNames")
  public open fun getElementNames(elementType: String): Array<String>

  @JsName("GetControlVector2D")
  public open fun getControlVector2d(controlName: String): Vector2d

  @JsName("GetControlTransform")
  public open fun getControlTransform(controlName: String, space: String): Transform

  @JsName("GetControlScale")
  public open fun getControlScale(controlName: String, space: String): Vector

  @JsName("GetControlRotator")
  public open fun getControlRotator(controlName: String, space: String): Rotator

  @JsName("GetControlRig")
  public open fun getControlRig(): ControlRig

  @JsName("GetControlPosition")
  public open fun getControlPosition(controlName: String, space: String): Vector

  @JsName("GetControlOffset")
  public open fun getControlOffset(controlName: String, space: String): Transform

  @JsName("GetControlInt")
  public open fun getControlInt(controlName: String): Number

  @JsName("GetControlFloat")
  public open fun getControlFloat(controlName: String): Number

  @JsName("GetControlBool")
  public open fun getControlBool(controlName: String): Boolean

  @JsName("GetBoneTransform")
  public open fun getBoneTransform(boneName: String, space: String): Transform

  @JsName("GetAbsoluteTime")
  public open fun getAbsoluteTime(): Number

  @JsName("DoesElementExist")
  public open fun doesElementExist(name: String, elementType: String): Boolean

  @JsName("ClearMappedElements")
  public open fun clearMappedElements(): Unit

  @JsName("CanExecute")
  public open fun canExecute(): Boolean

  @JsName("AddMappedSkeletalMesh")
  public open fun addMappedSkeletalMesh(
    skeletalMeshComponent: SkeletalMeshComponent,
    bones: Array<ControlRigComponentMappedBone>,
    curves: Array<ControlRigComponentMappedCurve>,
  ): Unit

  @JsName("AddMappedElements")
  public open fun addMappedElements(newMappedElements: Array<ControlRigComponentMappedElement>):
      Unit

  @JsName("AddMappedComponents")
  public open fun addMappedComponents(components: Array<ControlRigComponentMappedComponent>): Unit

  @JsName("AddMappedCompleteSkeletalMesh")
  public open fun addMappedCompleteSkeletalMesh(skeletalMeshComponent: SkeletalMeshComponent): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigComponent

    @JsName("C")
    public fun copy(other: UObject): ControlRigComponent

    @JsName("C")
    public fun copy(other: Any): ControlRigComponent
  }
}

public open external class ControlRigControlActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("ActorToTrack")
  public open var actorToTrack: Actor

  @JsName("ControlRigClass")
  public open var controlRigClass: UnrealEngineClass

  @JsName("bRefreshOnTick")
  public open var refreshOnTick: Boolean

  @JsName("bIsSelectable")
  public open var isSelectable: Boolean

  @JsName("MaterialOverride")
  public open var materialOverride: MaterialInterface

  @JsName("ColorParameter")
  public open var colorParameter: String

  @JsName("bCastShadows")
  public open var castShadows: Boolean

  @JsName("ActorRootComponent")
  public open var actorRootComponent: SceneComponent

  @JsName("ControlRig")
  public open var controlRig: ControlRig

  @JsName("ControlNames")
  public open var controlNames: Array<String>

  @JsName("ShapeTransforms")
  public open var shapeTransforms: Array<Transform>

  @JsName("Components")
  public open var components: Array<StaticMeshComponent>

  @JsName("Materials")
  public open var materials: Array<MaterialInstanceDynamic>

  @JsName("ColorParameterName")
  public open var colorParameterName: String

  @JsName("Refresh")
  public open fun refresh(): Unit

  @JsName("Clear")
  public open fun clear(): Unit

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigControlActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigControlActor

    @JsName("C")
    public fun copy(other: UObject): ControlRigControlActor

    @JsName("C")
    public fun copy(other: Any): ControlRigControlActor
  }
}

public open external class ControlRigShapeActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  @JsName("ActorRootComponent")
  public open var actorRootComponent: SceneComponent

  @JsName("StaticMeshComponent")
  public open var staticMeshComponent: StaticMeshComponent

  @JsName("ControlRigIndex")
  public open var controlRigIndex: Any

  @JsName("ControlName")
  public open var controlName: String

  @JsName("ColorParameterName")
  public open var colorParameterName: String

  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("bSelected")
  public open var selected: Boolean

  @JsName("bSelectable")
  public open var selectable: Boolean

  @JsName("bHovered")
  public open var hovered: Boolean

  @JsName("SetSelected")
  public open fun setSelected(inSelected: Boolean): Unit

  @JsName("SetSelectable")
  public open fun setSelectable(inSelectable: Boolean): Unit

  @JsName("SetHovered")
  public open fun setHovered(inHovered: Boolean): Unit

  @JsName("SetGlobalTransform")
  public open fun setGlobalTransform(inTransform: Transform): Unit

  @JsName("SetEnabled")
  public open fun setEnabled(inEnabled: Boolean): Unit

  @JsName("OnTransformChanged")
  public open fun onTransformChanged(newTransform: Transform): Unit

  @JsName("OnSelectionChanged")
  public open fun onSelectionChanged(isSelected: Boolean): Unit

  @JsName("OnManipulatingChanged")
  public open fun onManipulatingChanged(isManipulating: Boolean): Unit

  @JsName("OnHoveredChanged")
  public open fun onHoveredChanged(isSelected: Boolean): Unit

  @JsName("OnEnabledChanged")
  public open fun onEnabledChanged(isEnabled: Boolean): Unit

  @JsName("IsSelectedInEditor")
  public open fun isSelectedInEditor(): Boolean

  @JsName("IsHovered")
  public open fun isHovered(): Boolean

  @JsName("IsEnabled")
  public open fun isEnabled(): Boolean

  @JsName("GetGlobalTransform")
  public open fun getGlobalTransform(): Transform

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigShapeActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigShapeActor

    @JsName("C")
    public fun copy(other: UObject): ControlRigShapeActor

    @JsName("C")
    public fun copy(other: Any): ControlRigShapeActor
  }
}

public open external class ControlRigLayerInstance(
  outer: UObject,
) : AnimInstance {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigLayerInstance

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigLayerInstance

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigLayerInstance

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigLayerInstance

    @JsName("C")
    public fun copy(other: UObject): ControlRigLayerInstance

    @JsName("C")
    public fun copy(other: Any): ControlRigLayerInstance
  }
}

public open external class ControlRigNumericalValidationPass(
  outer: UObject,
) : ControlRigValidationPass {
  @JsName("bCheckControls")
  public open var checkControls: Boolean

  @JsName("bCheckBones")
  public open var checkBones: Boolean

  @JsName("bCheckCurves")
  public open var checkCurves: Boolean

  @JsName("TranslationPrecision")
  public open var translationPrecision: Number

  @JsName("RotationPrecision")
  public open var rotationPrecision: Number

  @JsName("ScalePrecision")
  public open var scalePrecision: Number

  @JsName("CurvePrecision")
  public open var curvePrecision: Number

  @JsName("EventNameA")
  public open var eventNameA: String

  @JsName("EventNameB")
  public open var eventNameB: String

  @JsName("Pose")
  public open var pose: RigPose

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigNumericalValidationPass

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigNumericalValidationPass

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigNumericalValidationPass

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigNumericalValidationPass

    @JsName("C")
    public fun copy(other: UObject): ControlRigNumericalValidationPass

    @JsName("C")
    public fun copy(other: Any): ControlRigNumericalValidationPass
  }
}

public open external class ControlRigObjectHolder(
  outer: UObject,
) : UObject {
  @JsName("Objects")
  public open var objects: Array<UObject>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigObjectHolder

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigObjectHolder

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigObjectHolder

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigObjectHolder

    @JsName("C")
    public fun copy(other: UObject): ControlRigObjectHolder

    @JsName("C")
    public fun copy(other: Any): ControlRigObjectHolder
  }
}

public open external class RigControlCopy {
  @JsName("Name")
  public open var name: String

  @JsName("ControlType")
  public open var controlType: String

  @JsName("Value")
  public open var value: RigControlValue

  @JsName("ParentKey")
  public open var parentKey: RigElementKey

  @JsName("OffsetTransform")
  public open var offsetTransform: Transform

  @JsName("ParentTransform")
  public open var parentTransform: Transform

  @JsName("LocalTransform")
  public open var localTransform: Transform

  @JsName("GlobalTransform")
  public open var globalTransform: Transform

  public open fun clone(): RigControlCopy

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): RigControlCopy

    @JsName("C")
    public fun copy(other: Any): RigControlCopy
  }
}

public open external class ControlRigControlPose {
  @JsName("CopyOfControls")
  public open var copyOfControls: Array<RigControlCopy>

  public open fun clone(): ControlRigControlPose

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigControlPose

    @JsName("C")
    public fun copy(other: Any): ControlRigControlPose
  }
}

@JsName("T$832")
public external interface ControlRigControlOutPoseProvider {
  @JsName("OutPose")
  public var outPose: ControlRigControlPose
}

public open external class ControlRigPoseAsset(
  outer: UObject,
) : UObject {
  @JsName("Pose")
  public open var pose: ControlRigControlPose

  @JsName("SelectControls")
  public open fun selectControls(inControlRig: ControlRig, doMirror: Boolean): Unit

  @JsName("SavePose")
  public open fun savePose(inControlRig: ControlRig, useAll: Boolean): Unit

  @JsName("ReplaceControlName")
  public open fun replaceControlName(currentName: String, newName: String): Unit

  @JsName("PastePose")
  public open fun pastePose(
    inControlRig: ControlRig,
    doKey: Boolean,
    doMirror: Boolean,
  ): Unit

  @JsName("GetCurrentPose")
  public open fun getCurrentPose(inControlRig: ControlRig, outPose: ControlRigControlPose):
      ControlRigControlOutPoseProvider

  @JsName("GetControlNames")
  public open fun getControlNames(): Array<String>

  @JsName("DoesMirrorMatch")
  public open fun doesMirrorMatch(controlRig: ControlRig, controlName: String): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigPoseAsset

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigPoseAsset

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigPoseAsset

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigPoseAsset

    @JsName("C")
    public fun copy(other: UObject): ControlRigPoseAsset

    @JsName("C")
    public fun copy(other: Any): ControlRigPoseAsset
  }
}

public open external class ControlRigPoseMirrorSettings(
  outer: UObject,
) : UObject {
  @JsName("RightSide")
  public open var rightSide: String

  @JsName("LeftSide")
  public open var leftSide: String

  @JsName("MirrorAxis")
  public open var mirrorAxis: String

  @JsName("AxisToFlip")
  public open var axisToFlip: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigPoseMirrorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigPoseMirrorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigPoseMirrorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigPoseMirrorSettings

    @JsName("C")
    public fun copy(other: UObject): ControlRigPoseMirrorSettings

    @JsName("C")
    public fun copy(other: Any): ControlRigPoseMirrorSettings
  }
}

public open external class ControlRigPoseProjectSettings(
  outer: UObject,
) : UObject {
  @JsName("RootSaveDirs")
  public open var rootSaveDirs: Array<DirectoryPath>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigPoseProjectSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigPoseProjectSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigPoseProjectSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigPoseProjectSettings

    @JsName("C")
    public fun copy(other: UObject): ControlRigPoseProjectSettings

    @JsName("C")
    public fun copy(other: Any): ControlRigPoseProjectSettings
  }
}

public open external class ControlRigSequence(
  outer: UObject,
) : LevelSequence {
  @JsName("LastExportedToAnimationSequence")
  public open var lastExportedToAnimationSequence: AnimSequence

  @JsName("LastExportedUsingSkeletalMesh")
  public open var lastExportedUsingSkeletalMesh: SkeletalMesh

  @JsName("LastExportedFrameRate")
  public open var lastExportedFrameRate: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigSequence

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigSequence

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigSequence

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigSequence

    @JsName("C")
    public fun copy(other: UObject): ControlRigSequence

    @JsName("C")
    public fun copy(other: Any): ControlRigSequence
  }
}

public open external class ControlRigSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("DefaultShapeLibrary")
  public open var defaultShapeLibrary: ControlRigShapeLibrary

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigSettings

    @JsName("C")
    public fun copy(other: UObject): ControlRigSettings

    @JsName("C")
    public fun copy(other: Any): ControlRigSettings
  }
}

public open external class ControlRigEditorSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bAutoLinkMutableNodes")
  public open var autoLinkMutableNodes: Boolean

  @JsName("bResetControlsOnCompile")
  public open var resetControlsOnCompile: Boolean

  @JsName("bResetControlsOnPinValueInteraction")
  public open var resetControlsOnPinValueInteraction: Boolean

  @JsName("bEnableUndoForPoseInteraction")
  public open var enableUndoForPoseInteraction: Boolean

  @JsName("bResetControlTransformsOnCompile")
  public open var resetControlTransformsOnCompile: Boolean

  @JsName("RigUnitPinExpansion")
  public open var rigUnitPinExpansion: Any

  @JsName("SetupEventBorderColor")
  public open var setupEventBorderColor: LinearColor

  @JsName("BackwardsSolveBorderColor")
  public open var backwardsSolveBorderColor: LinearColor

  @JsName("BackwardsAndForwardsBorderColor")
  public open var backwardsAndForwardsBorderColor: LinearColor

  @JsName("DynamicHierarchyBorderColor")
  public open var dynamicHierarchyBorderColor: LinearColor

  @JsName("NodeSnippet_1")
  public open var nodeSnippet1: String

  @JsName("NodeSnippet_2")
  public open var nodeSnippet2: String

  @JsName("NodeSnippet_3")
  public open var nodeSnippet3: String

  @JsName("NodeSnippet_4")
  public open var nodeSnippet4: String

  @JsName("NodeSnippet_5")
  public open var nodeSnippet5: String

  @JsName("NodeSnippet_6")
  public open var nodeSnippet6: String

  @JsName("NodeSnippet_7")
  public open var nodeSnippet7: String

  @JsName("NodeSnippet_8")
  public open var nodeSnippet8: String

  @JsName("NodeSnippet_9")
  public open var nodeSnippet9: String

  @JsName("NodeSnippet_0")
  public open var nodeSnippet0: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigEditorSettings

    @JsName("C")
    public fun copy(other: UObject): ControlRigEditorSettings

    @JsName("C")
    public fun copy(other: Any): ControlRigEditorSettings
  }
}

@JsName("EControlRigFKRigExecuteMode")
public external object ControlRigFKRigExecuteMode {
  public var Replace: String

  public var Additive: String

  public var Max: String

  @JsName("EControlRigFKRigExecuteMode_MAX")
  public var _Max: String
}

@JsName("FKControlRig")
public open external class FkControlRig(
  outer: UObject,
) : ControlRig {
  @JsName("IsControlActive")
  public open var isControlActive: Array<Boolean>

  @JsName("ApplyMode")
  public open var applyMode: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FkControlRig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FkControlRig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FkControlRig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FkControlRig

    @JsName("C")
    public fun copy(other: UObject): FkControlRig

    @JsName("C")
    public fun copy(other: Any): FkControlRig
  }
}

@JsName("ControlRigIOSettings")
public open external class ControlRigIoSettings {
  @JsName("bUpdatePose")
  public open var updatePose: Boolean

  @JsName("bUpdateCurves")
  public open var updateCurves: Boolean

  public open fun clone(): ControlRigIoSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ControlRigIoSettings

    @JsName("C")
    public fun copy(other: Any): ControlRigIoSettings
  }
}

@JsName("AnimNode_ControlRigBase")
public open external class AnimNodeControlRigBase : AnimNodeCustomProperty {
  @JsName("Source")
  public open var source: PoseLink

  @JsName("bResetInputPoseToInitial")
  public open var resetInputPoseToInitial: Boolean

  @JsName("bTransferInputPose")
  public open var transferInputPose: Boolean

  @JsName("bTransferInputCurves")
  public open var transferInputCurves: Boolean

  @JsName("bTransferPoseInGlobalSpace")
  public open var transferPoseInGlobalSpace: Boolean

  @JsName("InputBonesToTransfer")
  public open var inputBonesToTransfer: Array<BoneReference>

  @JsName("NodeMappingContainer")
  public open var nodeMappingContainer: Any

  @JsName("InputSettings")
  public open var inputSettings: ControlRigIoSettings

  @JsName("OutputSettings")
  public open var outputSettings: ControlRigIoSettings

  @JsName("bExecute")
  public open var execute: Boolean

  public override fun clone(): AnimNodeControlRigBase

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimNodeControlRigBase

    @JsName("C")
    public fun copy(other: Any): AnimNodeControlRigBase
  }
}

@JsName("AnimNode_ControlRig")
public open external class AnimNodeControlRig : AnimNodeControlRigBase {
  @JsName("ControlRigClass")
  public open var controlRigClass: UnrealEngineClass

  @JsName("ControlRig")
  public open var controlRig: ControlRig

  @JsName("Alpha")
  public open var alpha: Number

  @JsName("AlphaInputType")
  public open var alphaInputType: String

  @JsName("bAlphaBoolEnabled")
  public open var alphaBoolEnabled: Boolean

  @JsName("bSetRefPoseFromSkeleton")
  public open var setRefPoseFromSkeleton: Boolean

  @JsName("AlphaScaleBias")
  public open var alphaScaleBias: InputScaleBias

  @JsName("AlphaBoolBlend")
  public open var alphaBoolBlend: InputAlphaBoolBlend

  @JsName("AlphaCurveName")
  public open var alphaCurveName: String

  @JsName("AlphaScaleBiasClamp")
  public open var alphaScaleBiasClamp: InputScaleBiasClamp

  @JsName("InputMapping")
  public open var inputMapping: Any

  @JsName("OutputMapping")
  public open var outputMapping: Any

  @JsName("LODThreshold")
  public open var lodThreshold: Number

  public override fun clone(): AnimNodeControlRig

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimNodeControlRig

    @JsName("C")
    public fun copy(other: Any): AnimNodeControlRig
  }
}

@JsName("AnimGraphNode_ControlRig")
public open external class AnimGraphNodeControlRig(
  outer: UObject,
) : AnimGraphNodeCustomProperty {
  @JsName("UNode")
  public open var uNode: AnimNodeControlRig

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimGraphNodeControlRig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimGraphNodeControlRig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimGraphNodeControlRig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimGraphNodeControlRig

    @JsName("C")
    public fun copy(other: UObject): AnimGraphNodeControlRig

    @JsName("C")
    public fun copy(other: Any): AnimGraphNodeControlRig
  }
}

public open external class ControlRigGraphNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("ModelNodePath")
  public open var modelNodePath: String

  @JsName("CachedModelNode")
  public open var cachedModelNode: RigVmNode

  @JsName("CachedModelPins")
  public open var cachedModelPins: Any

  @JsName("PropertyName")
  public open var propertyName: String

  @JsName("StructPath")
  public open var structPath: String

  @JsName("PinType")
  public open var pinType: EdGraphPinType

  @JsName("ParameterType")
  public open var parameterType: Number

  @JsName("ExpandedPins")
  public open var expandedPins: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigGraphNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigGraphNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigGraphNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigGraphNode

    @JsName("C")
    public fun copy(other: UObject): ControlRigGraphNode

    @JsName("C")
    public fun copy(other: Any): ControlRigGraphNode
  }
}

public open external class ControlRigGraphSchema(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigGraphSchema

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigGraphSchema

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigGraphSchema

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigGraphSchema

    @JsName("C")
    public fun copy(other: UObject): ControlRigGraphSchema

    @JsName("C")
    public fun copy(other: Any): ControlRigGraphSchema
  }
}

@JsName("ERetargetRotationMode")
public external object RetargetRotationMode {
  public var Interpolated: String

  public var OneToOne: String

  public var OneToOneReversed: String

  public var None: String

  @JsName("ERetargetRotationMode_MAX")
  public var Max: String
}

@JsName("ERetargetTranslationMode")
public external object RetargetTranslationMode {
  public var None: String

  public var GloballyScaled: String

  public var Absolute: String

  @JsName("ERetargetTranslationMode_MAX")
  public var Max: String
}

public open external class RetargetChainSettings(
  outer: UObject,
) : UObject {
  @JsName("SourceChain")
  public open var sourceChain: String

  @JsName("TargetChain")
  public open var targetChain: String

  @JsName("CopyPoseUsingFK")
  public open var copyPoseUsingFk: Boolean

  @JsName("RotationMode")
  public open var rotationMode: String

  @JsName("RotationAlpha")
  public open var rotationAlpha: Number

  @JsName("TranslationMode")
  public open var translationMode: String

  @JsName("TranslationAlpha")
  public open var translationAlpha: Number

  @JsName("DriveIKGoal")
  public open var driveIkGoal: Boolean

  @JsName("BlendToSource")
  public open var blendToSource: Number

  @JsName("BlendToSourceWeights")
  public open var blendToSourceWeights: Vector

  @JsName("StaticOffset")
  public open var staticOffset: Vector

  @JsName("Extension")
  public open var extension: Number

  @JsName("MatchSourceVelocity")
  public open var matchSourceVelocity: Number

  @JsName("VelocityThreshold")
  public open var velocityThreshold: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RetargetChainSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): RetargetChainSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RetargetChainSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RetargetChainSettings

    @JsName("C")
    public fun copy(other: UObject): RetargetChainSettings

    @JsName("C")
    public fun copy(other: Any): RetargetChainSettings
  }
}

@JsName("IKRigSkeleton")
public open external class IkRigSkeleton {
  @JsName("BoneNames")
  public open var boneNames: Array<String>

  @JsName("ParentIndices")
  public open var parentIndices: Array<Number>

  @JsName("ExcludedBones")
  public open var excludedBones: Array<String>

  @JsName("CurrentPoseGlobal")
  public open var currentPoseGlobal: Array<Transform>

  @JsName("CurrentPoseLocal")
  public open var currentPoseLocal: Array<Transform>

  @JsName("RefPoseGlobal")
  public open var refPoseGlobal: Array<Transform>

  public open fun clone(): IkRigSkeleton

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): IkRigSkeleton

    @JsName("C")
    public fun copy(other: Any): IkRigSkeleton
  }
}

@JsName("EIKRigGoalPreviewMode")
public external object IKRigGoalPreviewMode {
  public var Additive: String

  public var Absolute: String

  @JsName("EIKRigGoalPreviewMode_MAX")
  public var Max: String
}

@JsName("IKRigEffectorGoal")
public open external class IkRigEffectorGoal(
  outer: UObject,
) : UObject {
  @JsName("GoalName")
  public open var goalName: String

  @JsName("BoneName")
  public open var boneName: String

  @JsName("PositionAlpha")
  public open var positionAlpha: Number

  @JsName("RotationAlpha")
  public open var rotationAlpha: Number

  @JsName("CurrentTransform")
  public open var currentTransform: Transform

  @JsName("InitialTransform")
  public open var initialTransform: Transform

  @JsName("PreviewMode")
  public open var previewMode: String

  @JsName("SizeMultiplier")
  public open var sizeMultiplier: Number

  @JsName("ThicknessMultiplier")
  public open var thicknessMultiplier: Number

  @JsName("bExposePosition")
  public open var exposePosition: Boolean

  @JsName("bExposeRotation")
  public open var exposeRotation: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigEffectorGoal

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigEffectorGoal

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigEffectorGoal

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigEffectorGoal

    @JsName("C")
    public fun copy(other: UObject): IkRigEffectorGoal

    @JsName("C")
    public fun copy(other: Any): IkRigEffectorGoal
  }
}

@JsName("IKRigSolver")
public open external class IkRigSolver(
  outer: UObject,
) : UObject {
  @JsName("bIsEnabled")
  public open var isEnabled: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigSolver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigSolver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigSolver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigSolver

    @JsName("C")
    public fun copy(other: UObject): IkRigSolver

    @JsName("C")
    public fun copy(other: Any): IkRigSolver
  }
}

public open external class BoneChain {
  @JsName("ChainName")
  public open var chainName: String

  @JsName("StartBone")
  public open var startBone: BoneReference

  @JsName("EndBone")
  public open var endBone: BoneReference

  @JsName("IKGoalName")
  public open var ikGoalName: String

  public open fun clone(): BoneChain

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): BoneChain

    @JsName("C")
    public fun copy(other: Any): BoneChain
  }
}

public open external class RetargetDefinition {
  @JsName("RootBone")
  public open var rootBone: String

  @JsName("BoneChains")
  public open var boneChains: Array<BoneChain>

  public open fun clone(): RetargetDefinition

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): RetargetDefinition

    @JsName("C")
    public fun copy(other: Any): RetargetDefinition
  }
}

@JsName("IKRigDefinition")
public open external class IkRigDefinition(
  outer: UObject,
) : UObject {
  @JsName("DrawBones")
  public open var drawBones: Boolean

  @JsName("BoneSize")
  public open var boneSize: Number

  @JsName("DrawGoals")
  public open var drawGoals: Boolean

  @JsName("GoalSize")
  public open var goalSize: Number

  @JsName("GoalThickness")
  public open var goalThickness: Number

  @JsName("Controller")
  public open var controller: UObject

  @JsName("PreviewSkeletalMesh")
  public open var previewSkeletalMesh: SkeletalMesh

  @JsName("Skeleton")
  public open var skeleton: IkRigSkeleton

  @JsName("Goals")
  public open var goals: Array<IkRigEffectorGoal>

  @JsName("Solvers")
  public open var solvers: Array<IkRigSolver>

  @JsName("RetargetDefinition")
  public open var retargetDefinition: RetargetDefinition

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigDefinition

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigDefinition

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigDefinition

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigDefinition

    @JsName("C")
    public fun copy(other: UObject): IkRigDefinition

    @JsName("C")
    public fun copy(other: Any): IkRigDefinition
  }
}

public open external class RetargetChainMap {
  @JsName("SourceChain")
  public open var sourceChain: String

  @JsName("TargetChain")
  public open var targetChain: String

  public open fun clone(): RetargetChainMap

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): RetargetChainMap

    @JsName("C")
    public fun copy(other: Any): RetargetChainMap
  }
}

@JsName("IKRetargeter")
public open external class IkRetargeter(
  outer: UObject,
) : UObject {
  @JsName("SourceIKRigAsset")
  public open var sourceIkRigAsset: IkRigDefinition

  @JsName("TargetIKRigAsset")
  public open var targetIkRigAsset: IkRigDefinition

  @JsName("TargetPreviewMesh")
  public open var targetPreviewMesh: SkeletalMesh

  @JsName("bRetargetRoot")
  public open var retargetRoot: Boolean

  @JsName("bRetargetFK")
  public open var retargetFk: Boolean

  @JsName("bRetargetIK")
  public open var retargetIk: Boolean

  @JsName("TargetActorOffset")
  public open var targetActorOffset: Number

  @JsName("TargetActorScale")
  public open var targetActorScale: Number

  @JsName("BoneDrawSize")
  public open var boneDrawSize: Number

  @JsName("bEditRetargetPoseMode")
  public open var editRetargetPoseMode: Boolean

  @JsName("Controller")
  public open var controller: UObject

  @JsName("RetargetPoses")
  public open var retargetPoses: Any

  @JsName("ChainMapping")
  public open var chainMapping: Array<RetargetChainMap>

  @JsName("ChainSettings")
  public open var chainSettings: Array<RetargetChainSettings>

  @JsName("CurrentRetargetPose")
  public open var currentRetargetPose: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRetargeter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRetargeter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRetargeter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRetargeter

    @JsName("C")
    public fun copy(other: UObject): IkRetargeter

    @JsName("C")
    public fun copy(other: Any): IkRetargeter
  }
}

@JsName("IKRigProcessor")
public open external class IkRigProcessor(
  outer: UObject,
) : UObject {
  @JsName("Solvers")
  public open var solvers: Array<IkRigSolver>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigProcessor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigProcessor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigProcessor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigProcessor

    @JsName("C")
    public fun copy(other: UObject): IkRigProcessor

    @JsName("C")
    public fun copy(other: Any): IkRigProcessor
  }
}

@JsName("IKRetargetProcessor")
public open external class IkRetargetProcessor(
  outer: UObject,
) : UObject {
  @JsName("IKRigProcessor")
  public open var ikRigProcessor: IkRigProcessor

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRetargetProcessor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRetargetProcessor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRetargetProcessor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRetargetProcessor

    @JsName("C")
    public fun copy(other: UObject): IkRetargetProcessor

    @JsName("C")
    public fun copy(other: Any): IkRetargetProcessor
  }
}

@JsName("EIKRigGoalTransformSource")
public external object IKRigGoalTransformSource {
  public var Manual: String

  public var Bone: String

  public var ActorComponent: String

  @JsName("EIKRigGoalTransformSource_MAX")
  public var Max: String
}

@JsName("EIKRigGoalSpace")
public external object IKRigGoalSpace {
  public var Component: String

  public var Additive: String

  public var World: String

  @JsName("EIKRigGoalSpace_MAX")
  public var Max: String
}

@JsName("IKRigGoal")
public open external class IkRigGoal {
  @JsName("Name")
  public open var name: String

  @JsName("TransformSource")
  public open var transformSource: String

  @JsName("SourceBone")
  public open var sourceBone: BoneReference

  public open var position: Vector

  @JsName("Rotation")
  public open var rotation: Rotator

  @JsName("PositionAlpha")
  public open var positionAlpha: Number

  @JsName("RotationAlpha")
  public open var rotationAlpha: Number

  @JsName("PositionSpace")
  public open var positionSpace: String

  @JsName("RotationSpace")
  public open var rotationSpace: String

  @JsName("FinalBlendedPosition")
  public open var finalBlendedPosition: Vector

  @JsName("FinalBlendedRotation")
  public open var finalBlendedRotation: Quat

  public open fun clone(): IkRigGoal

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): IkRigGoal

    @JsName("C")
    public fun copy(other: Any): IkRigGoal
  }
}

@JsName("IKRigComponent")
public open external class IkRigComponent(
  outer: UObject,
) : ActorComponent {
  @JsName("SetIKRigGoalTransform")
  public open fun setIkRigGoalTransform(
    goalName: String,
    transform: Transform,
    positionAlpha: Number,
    rotationAlpha: Number,
  ): Unit

  @JsName("SetIKRigGoalPositionAndRotation")
  public open fun setIkRigGoalPositionAndRotation(
    goalName: String,
    position: Vector,
    rotation: Quat,
    positionAlpha: Number,
    rotationAlpha: Number,
  ): Unit

  @JsName("SetIKRigGoal")
  public open fun setIkRigGoal(goal: IkRigGoal): Unit

  @JsName("ClearAllGoals")
  public open fun clearAllGoals(): Unit

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigComponent

    @JsName("C")
    public fun copy(other: UObject): IkRigComponent

    @JsName("C")
    public fun copy(other: Any): IkRigComponent
  }
}

@JsName("T$833")
public external interface OutGoalsProvider {
  @JsName("OutGoals")
  public var outGoals: Any
}

@JsName("IKGoalCreatorInterface")
public open external class IkGoalCreatorInterface(
  outer: UObject,
) : Interface {
  @JsName("AddIKGoals")
  public open fun addIkGoals(outGoals: Any): OutGoalsProvider

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkGoalCreatorInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkGoalCreatorInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkGoalCreatorInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkGoalCreatorInterface

    @JsName("C")
    public fun copy(other: UObject): IkGoalCreatorInterface

    @JsName("C")
    public fun copy(other: Any): IkGoalCreatorInterface
  }
}

@JsName("IKRig_BodyMoverEffector")
public open external class IkRigBodyMoverEffector(
  outer: UObject,
) : UObject {
  @JsName("GoalName")
  public open var goalName: String

  @JsName("BoneName")
  public open var boneName: String

  @JsName("InfluenceMultiplier")
  public open var influenceMultiplier: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigBodyMoverEffector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigBodyMoverEffector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigBodyMoverEffector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigBodyMoverEffector

    @JsName("C")
    public fun copy(other: UObject): IkRigBodyMoverEffector

    @JsName("C")
    public fun copy(other: Any): IkRigBodyMoverEffector
  }
}

@JsName("IKRig_BodyMover")
public open external class IkRigBodyMover(
  outer: UObject,
) : IkRigSolver {
  @JsName("RootBone")
  public open var rootBone: String

  @JsName("PositionAlpha")
  public open var positionAlpha: Number

  @JsName("PositionPositiveX")
  public open var positionPositiveX: Number

  @JsName("PositionNegativeX")
  public open var positionNegativeX: Number

  @JsName("PositionPositiveY")
  public open var positionPositiveY: Number

  @JsName("PositionNegativeY")
  public open var positionNegativeY: Number

  @JsName("PositionPositiveZ")
  public open var positionPositiveZ: Number

  @JsName("PositionNegativeZ")
  public open var positionNegativeZ: Number

  @JsName("RotationAlpha")
  public open var rotationAlpha: Number

  @JsName("RotateXAlpha")
  public open var rotateXAlpha: Number

  @JsName("RotateYAlpha")
  public open var rotateYAlpha: Number

  @JsName("RotateZAlpha")
  public open var rotateZAlpha: Number

  @JsName("Effectors")
  public open var effectors: Array<IkRigBodyMoverEffector>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigBodyMover

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigBodyMover

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigBodyMover

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigBodyMover

    @JsName("C")
    public fun copy(other: UObject): IkRigBodyMover

    @JsName("C")
    public fun copy(other: Any): IkRigBodyMover
  }
}

@JsName("IKRig_LimbEffector")
public open external class IkRigLimbEffector(
  outer: UObject,
) : UObject {
  @JsName("GoalName")
  public open var goalName: String

  @JsName("BoneName")
  public open var boneName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigLimbEffector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigLimbEffector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigLimbEffector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigLimbEffector

    @JsName("C")
    public fun copy(other: UObject): IkRigLimbEffector

    @JsName("C")
    public fun copy(other: Any): IkRigLimbEffector
  }
}

@JsName("IKRig_LimbSolver")
public open external class IkRigLimbSolver(
  outer: UObject,
) : IkRigSolver {
  @JsName("RootName")
  public open var rootName: String

  @JsName("ReachPrecision")
  public open var reachPrecision: Number

  @JsName("HingeRotationAxis")
  public open var hingeRotationAxis: String

  @JsName("MaxIterations")
  public open var maxIterations: Number

  @JsName("bEnableLimit")
  public open var enableLimit: Boolean

  @JsName("MinRotationAngle")
  public open var minRotationAngle: Number

  @JsName("bAveragePull")
  public open var averagePull: Boolean

  @JsName("PullDistribution")
  public open var pullDistribution: Number

  @JsName("ReachStepAlpha")
  public open var reachStepAlpha: Number

  @JsName("bEnableTwistCorrection")
  public open var enableTwistCorrection: Boolean

  @JsName("EndBoneForwardAxis")
  public open var endBoneForwardAxis: String

  @JsName("Effector")
  public open var effector: IkRigLimbEffector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigLimbSolver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigLimbSolver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigLimbSolver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigLimbSolver

    @JsName("C")
    public fun copy(other: UObject): IkRigLimbSolver

    @JsName("C")
    public fun copy(other: Any): IkRigLimbSolver
  }
}

@JsName("IKRig_FBIKEffector")
public open external class IkRigFbikEffector(
  outer: UObject,
) : UObject {
  @JsName("GoalName")
  public open var goalName: String

  @JsName("BoneName")
  public open var boneName: String

  @JsName("StrengthAlpha")
  public open var strengthAlpha: Number

  @JsName("PullChainAlpha")
  public open var pullChainAlpha: Number

  @JsName("PinRotation")
  public open var pinRotation: Number

  @JsName("IndexInSolver")
  public open var indexInSolver: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigFbikEffector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigFbikEffector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigFbikEffector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigFbikEffector

    @JsName("C")
    public fun copy(other: UObject): IkRigFbikEffector

    @JsName("C")
    public fun copy(other: Any): IkRigFbikEffector
  }
}

@JsName("EPBIKLimitType")
public external object PBIKLimitType {
  public var Free: String

  public var Limited: String

  public var Locked: String

  @JsName("EPBIKLimitType_MAX")
  public var Max: String
}

@JsName("IKRig_PBIKBoneSettings")
public open external class IkRigPbikBoneSettings(
  outer: UObject,
) : UObject {
  public open var bone: String

  @JsName("RotationStiffness")
  public open var rotationStiffness: Number

  @JsName("PositionStiffness")
  public open var positionStiffness: Number

  @JsName("X")
  public open var x: String

  @JsName("MinX")
  public open var minX: Number

  @JsName("MaxX")
  public open var maxX: Number

  @JsName("Y")
  public open var y: String

  @JsName("MinY")
  public open var minY: Number

  @JsName("MaxY")
  public open var maxY: Number

  @JsName("Z")
  public open var z: String

  @JsName("MinZ")
  public open var minZ: Number

  @JsName("MaxZ")
  public open var maxZ: Number

  @JsName("bUsePreferredAngles")
  public open var usePreferredAngles: Boolean

  @JsName("PreferredAngles")
  public open var preferredAngles: Vector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigPbikBoneSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigPbikBoneSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigPbikBoneSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigPbikBoneSettings

    @JsName("C")
    public fun copy(other: UObject): IkRigPbikBoneSettings

    @JsName("C")
    public fun copy(other: Any): IkRigPbikBoneSettings
  }
}

@JsName("EPBIKRootBehavior")
public external object PBIKRootBehavior {
  public var PrePull: String

  public var PinToInput: String

  public var Free: String

  @JsName("EPBIKRootBehavior_MAX")
  public var Max: String
}

@JsName("IKRigPBIKSolver")
public open external class IkRigPbikSolver(
  outer: UObject,
) : IkRigSolver {
  @JsName("RootBone")
  public open var rootBone: String

  @JsName("Iterations")
  public open var iterations: Number

  @JsName("MassMultiplier")
  public open var massMultiplier: Number

  @JsName("MinMassMultiplier")
  public open var minMassMultiplier: Number

  @JsName("bAllowStretch")
  public open var allowStretch: Boolean

  @JsName("RootBehavior")
  public open var rootBehavior: String

  @JsName("bStartSolveFromInputPose")
  public open var startSolveFromInputPose: Boolean

  @JsName("Effectors")
  public open var effectors: Array<IkRigFbikEffector>

  @JsName("BoneSettings")
  public open var boneSettings: Array<IkRigPbikBoneSettings>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigPbikSolver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigPbikSolver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigPbikSolver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigPbikSolver

    @JsName("C")
    public fun copy(other: UObject): IkRigPbikSolver

    @JsName("C")
    public fun copy(other: Any): IkRigPbikSolver
  }
}

@JsName("IKRig_PoleSolverEffector")
public open external class IkRigPoleSolverEffector(
  outer: UObject,
) : UObject {
  @JsName("GoalName")
  public open var goalName: String

  @JsName("BoneName")
  public open var boneName: String

  @JsName("Alpha")
  public open var alpha: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigPoleSolverEffector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigPoleSolverEffector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigPoleSolverEffector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigPoleSolverEffector

    @JsName("C")
    public fun copy(other: UObject): IkRigPoleSolverEffector

    @JsName("C")
    public fun copy(other: Any): IkRigPoleSolverEffector
  }
}

@JsName("IKRig_PoleSolver")
public open external class IkRigPoleSolver(
  outer: UObject,
) : IkRigSolver {
  @JsName("RootName")
  public open var rootName: String

  @JsName("EndName")
  public open var endName: String

  @JsName("Effector")
  public open var effector: IkRigPoleSolverEffector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigPoleSolver

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigPoleSolver

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigPoleSolver

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigPoleSolver

    @JsName("C")
    public fun copy(other: UObject): IkRigPoleSolver

    @JsName("C")
    public fun copy(other: Any): IkRigPoleSolver
  }
}

@JsName("IKRig_SetTransformEffector")
public open external class IkRigSetTransformEffector(
  outer: UObject,
) : UObject {
  @JsName("bEnablePosition")
  public open var enablePosition: Boolean

  @JsName("bEnableRotation")
  public open var enableRotation: Boolean

  @JsName("Alpha")
  public open var alpha: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigSetTransformEffector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigSetTransformEffector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigSetTransformEffector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigSetTransformEffector

    @JsName("C")
    public fun copy(other: UObject): IkRigSetTransformEffector

    @JsName("C")
    public fun copy(other: Any): IkRigSetTransformEffector
  }
}

@JsName("IKRig_SetTransform")
public open external class IkRigSetTransform(
  outer: UObject,
) : IkRigSolver {
  @JsName("Goal")
  public open var goal: String

  @JsName("RootBone")
  public open var rootBone: String

  @JsName("Effector")
  public open var effector: IkRigSetTransformEffector

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IkRigSetTransform

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IkRigSetTransform

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IkRigSetTransform

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IkRigSetTransform

    @JsName("C")
    public fun copy(other: UObject): IkRigSetTransform

    @JsName("C")
    public fun copy(other: Any): IkRigSetTransform
  }
}

@JsName("EPinnedCommandListType")
public external object PinnedCommandListType {
  public var Command: String

  public var CustomWidget: String

  @JsName("EPinnedCommandListType_MAX")
  public var Max: String
}

public open external class PinnedCommandListCommand {
  @JsName("Name")
  public open var name: String

  @JsName("Binding")
  public open var binding: String

  @JsName("Type")
  public open var type: String

  public open fun clone(): PinnedCommandListCommand

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PinnedCommandListCommand

    @JsName("C")
    public fun copy(other: Any): PinnedCommandListCommand
  }
}

public open external class PinnedCommandListContext {
  @JsName("Name")
  public open var name: String

  @JsName("Commands")
  public open var commands: Array<PinnedCommandListCommand>

  public open fun clone(): PinnedCommandListContext

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PinnedCommandListContext

    @JsName("C")
    public fun copy(other: Any): PinnedCommandListContext
  }
}

public open external class PinnedCommandListSettings(
  outer: UObject,
) : UObject {
  @JsName("Contexts")
  public open var contexts: Array<PinnedCommandListContext>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PinnedCommandListSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PinnedCommandListSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PinnedCommandListSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PinnedCommandListSettings

    @JsName("C")
    public fun copy(other: UObject): PinnedCommandListSettings

    @JsName("C")
    public fun copy(other: Any): PinnedCommandListSettings
  }
}

public open external class AnimationEditorPreviewActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationEditorPreviewActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationEditorPreviewActor

    @JsName("C")
    public fun copy(other: UObject): AnimationEditorPreviewActor

    @JsName("C")
    public fun copy(other: Any): AnimationEditorPreviewActor
  }
}

public open external class AnimationSequenceBrowserContextMenuContext(
  outer: UObject,
) : UObject {
  @JsName("SelectedObjects")
  public open var selectedObjects: Array<Any>

  @JsName("GetSelectedObjects")
  public open fun getSelectedObjects(): Array<UObject>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationSequenceBrowserContextMenuContext

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        AnimationSequenceBrowserContextMenuContext

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationSequenceBrowserContextMenuContext

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationSequenceBrowserContextMenuContext

    @JsName("C")
    public fun copy(other: UObject): AnimationSequenceBrowserContextMenuContext

    @JsName("C")
    public fun copy(other: Any): AnimationSequenceBrowserContextMenuContext
  }
}

public open external class CachedAnalysisProperties(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CachedAnalysisProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CachedAnalysisProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CachedAnalysisProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CachedAnalysisProperties

    @JsName("C")
    public fun copy(other: UObject): CachedAnalysisProperties

    @JsName("C")
    public fun copy(other: Any): CachedAnalysisProperties
  }
}

@JsName("EAnalysisLinearAxis")
public external object AnalysisLinearAxis {
  public var PlusX: String

  public var PlusY: String

  public var PlusZ: String

  public var MinusX: String

  public var MinusY: String

  public var MinusZ: String

  @JsName("EAnalysisLinearAxis_MAX")
  public var Max: String
}

@JsName("EAnalysisSpace")
public external object AnalysisSpace {
  public var World: String

  public var Fixed: String

  public var Changing: String

  public var Moving: String

  @JsName("EAnalysisSpace_MAX")
  public var Max: String
}

public open external class LinearAnalysisProperties(
  outer: UObject,
) : AnalysisProperties {
  @JsName("FunctionAxis")
  public open var functionAxis: String

  @JsName("BoneSocket")
  public open var boneSocket: BoneSocketTarget

  @JsName("Space")
  public open var space: String

  @JsName("SpaceBoneSocket")
  public open var spaceBoneSocket: BoneSocketTarget

  @JsName("StartTimeFraction")
  public open var startTimeFraction: Number

  @JsName("EndTimeFraction")
  public open var endTimeFraction: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LinearAnalysisProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LinearAnalysisProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LinearAnalysisProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LinearAnalysisProperties

    @JsName("C")
    public fun copy(other: UObject): LinearAnalysisProperties

    @JsName("C")
    public fun copy(other: Any): LinearAnalysisProperties
  }
}

@JsName("EAnalysisEulerAxis")
public external object AnalysisEulerAxis {
  public var Roll: String

  public var Pitch: String

  public var Yaw: String

  @JsName("EAnalysisEulerAxis_MAX")
  public var Max: String
}

public open external class EulerAnalysisProperties(
  outer: UObject,
) : AnalysisProperties {
  @JsName("FunctionAxis")
  public open var functionAxis: String

  @JsName("BoneSocket")
  public open var boneSocket: BoneSocketTarget

  @JsName("BoneFacingAxis")
  public open var boneFacingAxis: String

  @JsName("BoneRightAxis")
  public open var boneRightAxis: String

  @JsName("Space")
  public open var space: String

  @JsName("SpaceBoneSocket")
  public open var spaceBoneSocket: BoneSocketTarget

  @JsName("CharacterFacingAxis")
  public open var characterFacingAxis: String

  @JsName("CharacterUpAxis")
  public open var characterUpAxis: String

  @JsName("StartTimeFraction")
  public open var startTimeFraction: Number

  @JsName("EndTimeFraction")
  public open var endTimeFraction: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EulerAnalysisProperties

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EulerAnalysisProperties

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EulerAnalysisProperties

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EulerAnalysisProperties

    @JsName("C")
    public fun copy(other: UObject): EulerAnalysisProperties

    @JsName("C")
    public fun copy(other: Any): EulerAnalysisProperties
  }
}

@JsName("LODInfoUILayout")
public open external class LodInfoUiLayout(
  outer: UObject,
) : UObject {
  @JsName("LODInfo")
  public open var lodInfo: SkeletalMeshLodInfo

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LodInfoUiLayout

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LodInfoUiLayout

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LodInfoUiLayout

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LodInfoUiLayout

    @JsName("C")
    public fun copy(other: UObject): LodInfoUiLayout

    @JsName("C")
    public fun copy(other: Any): LodInfoUiLayout
  }
}

public open external class PersonaPreviewSceneController(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaPreviewSceneController

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaPreviewSceneController

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaPreviewSceneController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaPreviewSceneController

    @JsName("C")
    public fun copy(other: UObject): PersonaPreviewSceneController

    @JsName("C")
    public fun copy(other: Any): PersonaPreviewSceneController
  }
}

public open external class PersonaPreviewSceneAnimationController(
  outer: UObject,
) : PersonaPreviewSceneController {
  @JsName("Animation")
  public open var animation: AnimationAsset

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaPreviewSceneAnimationController

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaPreviewSceneAnimationController

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaPreviewSceneAnimationController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaPreviewSceneAnimationController

    @JsName("C")
    public fun copy(other: UObject): PersonaPreviewSceneAnimationController

    @JsName("C")
    public fun copy(other: Any): PersonaPreviewSceneAnimationController
  }
}

public open external class PersonaPreviewSceneDefaultController(
  outer: UObject,
) : PersonaPreviewSceneController {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaPreviewSceneDefaultController

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaPreviewSceneDefaultController

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaPreviewSceneDefaultController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaPreviewSceneDefaultController

    @JsName("C")
    public fun copy(other: UObject): PersonaPreviewSceneDefaultController

    @JsName("C")
    public fun copy(other: Any): PersonaPreviewSceneDefaultController
  }
}

public open external class PersonaPreviewSceneDescription(
  outer: UObject,
) : UObject {
  @JsName("PreviewController")
  public open var previewController: UnrealEngineClass

  @JsName("PreviewControllerInstance")
  public open var previewControllerInstance: PersonaPreviewSceneController

  @JsName("PreviewControllerInstances")
  public open var previewControllerInstances: Array<PersonaPreviewSceneController>

  @JsName("PreviewMesh")
  public open var previewMesh: SkeletalMesh

  @JsName("PreviewAnimationBlueprint")
  public open var previewAnimationBlueprint: AnimBlueprint

  @JsName("ApplicationMethod")
  public open var applicationMethod: String

  @JsName("LinkedAnimGraphTag")
  public open var linkedAnimGraphTag: String

  @JsName("AdditionalMeshes")
  public open var additionalMeshes: DataAsset

  @JsName("DefaultAdditionalMeshes")
  public open var defaultAdditionalMeshes: PreviewMeshCollection

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaPreviewSceneDescription

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaPreviewSceneDescription

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaPreviewSceneDescription

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaPreviewSceneDescription

    @JsName("C")
    public fun copy(other: UObject): PersonaPreviewSceneDescription

    @JsName("C")
    public fun copy(other: Any): PersonaPreviewSceneDescription
  }
}

public open external class PersonaPreviewSceneRefPoseController(
  outer: UObject,
) : PersonaPreviewSceneController {
  @JsName("bResetBoneTransforms")
  public open var resetBoneTransforms: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaPreviewSceneRefPoseController

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaPreviewSceneRefPoseController

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaPreviewSceneRefPoseController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaPreviewSceneRefPoseController

    @JsName("C")
    public fun copy(other: UObject): PersonaPreviewSceneRefPoseController

    @JsName("C")
    public fun copy(other: Any): PersonaPreviewSceneRefPoseController
  }
}

public open external class PersonaToolMenuContext(
  outer: UObject,
) : UObject {
  @JsName("GetSkeleton")
  public open fun getSkeleton(): Skeleton

  @JsName("GetPreviewMeshComponent")
  public open fun getPreviewMeshComponent(): DebugSkelMeshComponent

  @JsName("GetMesh")
  public open fun getMesh(): SkeletalMesh

  @JsName("GetAnimBlueprint")
  public open fun getAnimBlueprint(): AnimBlueprint

  @JsName("GetAnimationAsset")
  public open fun getAnimationAsset(): AnimationAsset

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PersonaToolMenuContext

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PersonaToolMenuContext

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PersonaToolMenuContext

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PersonaToolMenuContext

    @JsName("C")
    public fun copy(other: UObject): PersonaToolMenuContext

    @JsName("C")
    public fun copy(other: Any): PersonaToolMenuContext
  }
}

public open external class SkinWeightImportOptions(
  outer: UObject,
) : UObject {
  @JsName("ProfileName")
  public open var profileName: String

  @JsName("FilePath")
  public open var filePath: String

  @JsName("LODIndex")
  public open var lodIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SkinWeightImportOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SkinWeightImportOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SkinWeightImportOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SkinWeightImportOptions

    @JsName("C")
    public fun copy(other: UObject): SkinWeightImportOptions

    @JsName("C")
    public fun copy(other: Any): SkinWeightImportOptions
  }
}

@JsName("AnimNode_IKRig")
public open external class AnimNodeIkRig : AnimNodeCustomProperty {
  @JsName("Source")
  public open var source: PoseLink

  @JsName("RigDefinitionAsset")
  public open var rigDefinitionAsset: IkRigDefinition

  @JsName("Goals")
  public open var goals: Array<IkRigGoal>

  @JsName("bStartFromRefPose")
  public open var startFromRefPose: Boolean

  @JsName("bEnableDebugDraw")
  public open var enableDebugDraw: Boolean

  @JsName("DebugScale")
  public open var debugScale: Number

  @JsName("AlphaInputType")
  public open var alphaInputType: String

  @JsName("bAlphaBoolEnabled")
  public open var alphaBoolEnabled: Boolean

  @JsName("Alpha")
  public open var alpha: Number

  @JsName("AlphaScaleBias")
  public open var alphaScaleBias: InputScaleBias

  @JsName("AlphaBoolBlend")
  public open var alphaBoolBlend: InputAlphaBoolBlend

  @JsName("AlphaCurveName")
  public open var alphaCurveName: String

  @JsName("AlphaScaleBiasClamp")
  public open var alphaScaleBiasClamp: InputScaleBiasClamp

  @JsName("IKRigProcessor")
  public open var ikRigProcessor: IkRigProcessor

  @JsName("ActualAlpha")
  public open var actualAlpha: Number

  public override fun clone(): AnimNodeIkRig

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimNodeIkRig

    @JsName("C")
    public fun copy(other: Any): AnimNodeIkRig
  }
}

@JsName("AnimGraphNode_IKRig")
public open external class AnimGraphNodeIkRig(
  outer: UObject,
) : AnimGraphNodeCustomProperty {
  @JsName("UNode")
  public open var uNode: AnimNodeIkRig

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimGraphNodeIkRig

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimGraphNodeIkRig

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimGraphNodeIkRig

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimGraphNodeIkRig

    @JsName("C")
    public fun copy(other: UObject): AnimGraphNodeIkRig

    @JsName("C")
    public fun copy(other: Any): AnimGraphNodeIkRig
  }
}

@JsName("AnimNode_RetargetPoseFromMesh")
public open external class AnimNodeRetargetPoseFromMesh : AnimNodeBase {
  @JsName("SourceMeshComponent")
  public open var sourceMeshComponent: Any

  @JsName("bUseAttachedParent")
  public open var useAttachedParent: Boolean

  @JsName("IKRetargeterAsset")
  public open var ikRetargeterAsset: IkRetargeter

  @JsName("Processor")
  public open var processor: IkRetargetProcessor

  public override fun clone(): AnimNodeRetargetPoseFromMesh

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AnimNodeRetargetPoseFromMesh

    @JsName("C")
    public fun copy(other: Any): AnimNodeRetargetPoseFromMesh
  }
}

@JsName("AnimGraphNode_RetargetPoseFromMesh")
public open external class AnimGraphNodeRetargetPoseFromMesh(
  outer: UObject,
) : AnimGraphNodeBase {
  @JsName("UNode")
  public open var uNode: AnimNodeRetargetPoseFromMesh

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimGraphNodeRetargetPoseFromMesh

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimGraphNodeRetargetPoseFromMesh

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimGraphNodeRetargetPoseFromMesh

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimGraphNodeRetargetPoseFromMesh

    @JsName("C")
    public fun copy(other: UObject): AnimGraphNodeRetargetPoseFromMesh

    @JsName("C")
    public fun copy(other: Any): AnimGraphNodeRetargetPoseFromMesh
  }
}

public open external class ContentBrowserFileDataSource(
  outer: UObject,
) : ContentBrowserDataSource {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ContentBrowserFileDataSource

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ContentBrowserFileDataSource

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ContentBrowserFileDataSource

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ContentBrowserFileDataSource

    @JsName("C")
    public fun copy(other: UObject): ContentBrowserFileDataSource

    @JsName("C")
    public fun copy(other: Any): ContentBrowserFileDataSource
  }
}

@JsName("K2Node_ExecutePythonScript")
public open external class K2NodeExecutePythonScript(
  outer: UObject,
) : K2NodeCallFunction {
  @JsName("Inputs")
  public open var inputs: Array<String>

  @JsName("Outputs")
  public open var outputs: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): K2NodeExecutePythonScript

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): K2NodeExecutePythonScript

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): K2NodeExecutePythonScript

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): K2NodeExecutePythonScript

    @JsName("C")
    public fun copy(other: UObject): K2NodeExecutePythonScript

    @JsName("C")
    public fun copy(other: Any): K2NodeExecutePythonScript
  }
}

@JsName("EPyTestEnum")
public external object PyTestEnum {
  public var One: String

  public var Two: String

  @JsName("EPyTestEnum_MAX")
  public var Max: String
}

public open external class PyTestStruct {
  public open var bool: Boolean

  public open var int: Number

  public open var float: Number

  @JsName("Enum")
  public open var enum: String

  public open var string: String

  @JsName("Name")
  public open var name: String

  public open var text: String

  @JsName("StringArray")
  public open var stringArray: Array<String>

  @JsName("StringSet")
  public open var stringSet: Any

  @JsName("StringIntMap")
  public open var stringIntMap: Any

  @JsName("LegacyInt")
  public open var legacyInt: Number

  @JsName("BoolInstanceOnly")
  public open var boolInstanceOnly: Boolean

  @JsName("BoolDefaultsOnly")
  public open var boolDefaultsOnly: Boolean

  public open fun clone(): PyTestStruct

  @JsName("AddFloat")
  public open fun addFloat(inValue: Number): PyTestStruct

  @JsName("AddInt")
  public open fun addInt(inValue: Number): PyTestStruct

  @JsName("AddStr")
  public open fun addStr(inValue: String): PyTestStruct

  @JsName("IsBoolSet")
  public open fun isBoolSet(): Boolean

  @JsName("LegacyIsBoolSet")
  public open fun legacyIsBoolSet(): Boolean

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PyTestStruct

    @JsName("C")
    public fun copy(other: Any): PyTestStruct

    @JsName("AddFloat")
    public fun addFloat(inStruct: PyTestStruct, inValue: Number): PyTestStruct

    @JsName("AddInt")
    public fun addInt(inStruct: PyTestStruct, inValue: Number): PyTestStruct

    @JsName("AddStr")
    public fun addStr(inStruct: PyTestStruct, inValue: String): PyTestStruct

    @JsName("IsBoolSet")
    public fun isBoolSet(inStruct: PyTestStruct): Boolean

    @JsName("LegacyIsBoolSet")
    public fun legacyIsBoolSet(inStruct: PyTestStruct): Boolean
  }
}

public open external class PyTestStructLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestStructLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestStructLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestStructLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestStructLibrary

    @JsName("LegacyIsBoolSet")
    public fun legacyIsBoolSet(inStruct: PyTestStruct): Boolean

    @JsName("IsBoolSet")
    public fun isBoolSet(inStruct: PyTestStruct): Boolean

    @JsName("GetConstantValue")
    public fun getConstantValue(): Number

    @JsName("AddStr")
    public fun addStr(inStruct: PyTestStruct, inValue: String): PyTestStruct

    @JsName("AddInt")
    public fun addInt(inStruct: PyTestStruct, inValue: Number): PyTestStruct

    @JsName("AddFloat")
    public fun addFloat(inStruct: PyTestStruct, inValue: Number): PyTestStruct

    @JsName("C")
    public fun copy(other: UObject): PyTestStructLibrary

    @JsName("C")
    public fun copy(other: Any): PyTestStructLibrary
  }
}

public open external class PyTestChildStruct : PyTestStruct {
  public override fun clone(): PyTestChildStruct

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PyTestChildStruct

    @JsName("C")
    public fun copy(other: Any): PyTestChildStruct
  }
}

@JsName("T$834")
public external interface InOutStructProvider {
  @JsName("InOutStruct")
  public var inOutStruct: PyTestStruct
}

public open external class PyTestObject(
  outer: UObject,
) : UObject {
  public open var bool: Boolean

  public open var int: Number

  public open var float: Number

  @JsName("Enum")
  public open var enum: String

  public open var string: String

  @JsName("Name")
  public open var name: String

  public open var text: String

  @JsName("StringArray")
  public open var stringArray: Array<String>

  @JsName("StringSet")
  public open var stringSet: Any

  @JsName("StringIntMap")
  public open var stringIntMap: Any

  public open var delegate: UnrealEngineDelegate<(InValue: Number) -> Number>

  @JsName("MulticastDelegate")
  public open var multicastDelegate: UnrealEngineMulticastDelegate<(InStr: String) -> Unit>

  public open var struct: PyTestStruct

  @JsName("StructArray")
  public open var structArray: Array<PyTestStruct>

  @JsName("ChildStruct")
  public open var childStruct: PyTestChildStruct

  @JsName("BoolInstanceOnly")
  public open var boolInstanceOnly: Boolean

  @JsName("BoolDefaultsOnly")
  public open var boolDefaultsOnly: Boolean

  @JsName("MulticastDelegatePropertyCallback")
  public open fun multicastDelegatePropertyCallback(inStr: String): Unit

  @JsName("LegacyFuncTakingPyTestStruct")
  public open fun legacyFuncTakingPyTestStruct(inStruct: PyTestStruct): Unit

  @JsName("FuncTakingPyTestStructDefault")
  public open fun funcTakingPyTestStructDefault(inStruct: PyTestStruct): Unit

  @JsName("FuncTakingPyTestStruct")
  public open fun funcTakingPyTestStruct(inStruct: PyTestStruct): Unit

  @JsName("FuncTakingPyTestChildStruct")
  public open fun funcTakingPyTestChildStruct(inStruct: PyTestChildStruct): Unit

  @JsName("FuncBlueprintNativeRef")
  public open fun funcBlueprintNativeRef(inOutStruct: PyTestStruct): InOutStructProvider

  @JsName("FuncBlueprintNative")
  public open fun funcBlueprintNative(inValue: Number): Number

  @JsName("FuncBlueprintImplementable")
  public open fun funcBlueprintImplementable(inValue: Number): Number

  @JsName("DelegatePropertyCallback")
  public open fun delegatePropertyCallback(inValue: Number): Number

  @JsName("CallFuncBlueprintNativeRef")
  public open fun callFuncBlueprintNativeRef(inOutStruct: PyTestStruct): InOutStructProvider

  @JsName("CallFuncBlueprintNative")
  public open fun callFuncBlueprintNative(inValue: Number): Number

  @JsName("CallFuncBlueprintImplementable")
  public open fun callFuncBlueprintImplementable(inValue: Number): Number

  @JsName("IsBoolSet")
  public open fun isBoolSet(): Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestObject

    @JsName("ReturnSet")
    public fun returnSet(): Any

    @JsName("ReturnMap")
    public fun returnMap(): Any

    @JsName("ReturnArray")
    public fun returnArray(): Array<Number>

    @JsName("GetConstantValue")
    public fun getConstantValue(): Number

    @JsName("EmitScriptWarning")
    public fun emitScriptWarning(): Unit

    @JsName("EmitScriptError")
    public fun emitScriptError(): Unit

    @JsName("C")
    public fun copy(other: UObject): PyTestObject

    @JsName("C")
    public fun copy(other: Any): PyTestObject

    @JsName("IsBoolSet")
    public fun isBoolSet(inObj: PyTestObject): Boolean
  }
}

public open external class PyTestChildObject(
  outer: UObject,
) : PyTestObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestChildObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestChildObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestChildObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestChildObject

    @JsName("C")
    public fun copy(other: UObject): PyTestChildObject

    @JsName("C")
    public fun copy(other: Any): PyTestChildObject
  }
}

public open external class LegacyPyTestObject(
  outer: UObject,
) : PyTestObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LegacyPyTestObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LegacyPyTestObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LegacyPyTestObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LegacyPyTestObject

    @JsName("C")
    public fun copy(other: UObject): LegacyPyTestObject

    @JsName("C")
    public fun copy(other: Any): LegacyPyTestObject
  }
}

public open external class PyTestObjectLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestObjectLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestObjectLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestObjectLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestObjectLibrary

    @JsName("IsBoolSet")
    public fun isBoolSet(inObj: PyTestObject): Boolean

    @JsName("GetOtherConstantValue")
    public fun getOtherConstantValue(): Number

    @JsName("C")
    public fun copy(other: UObject): PyTestObjectLibrary

    @JsName("C")
    public fun copy(other: Any): PyTestObjectLibrary
  }
}

public open external class PyTestInterface(
  outer: UObject,
) : Interface {
  @JsName("FuncInterface")
  public open fun funcInterface(inValue: Number): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestInterface

    @JsName("C")
    public fun copy(other: UObject): PyTestInterface

    @JsName("C")
    public fun copy(other: Any): PyTestInterface
  }
}

public open external class PyTestChildInterface(
  outer: UObject,
) : PyTestInterface {
  @JsName("FuncInterfaceChild")
  public open fun funcInterfaceChild(inValue: Number): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestChildInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestChildInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestChildInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestChildInterface

    @JsName("C")
    public fun copy(other: UObject): PyTestChildInterface

    @JsName("C")
    public fun copy(other: Any): PyTestChildInterface
  }
}

public open external class PyTestOtherInterface(
  outer: UObject,
) : Interface {
  @JsName("FuncInterfaceOther")
  public open fun funcInterfaceOther(inValue: Number): Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestOtherInterface

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestOtherInterface

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestOtherInterface

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestOtherInterface

    @JsName("C")
    public fun copy(other: UObject): PyTestOtherInterface

    @JsName("C")
    public fun copy(other: Any): PyTestOtherInterface
  }
}

public open external class PythonOnlineDocsCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonOnlineDocsCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonOnlineDocsCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonOnlineDocsCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonOnlineDocsCommandlet

    @JsName("C")
    public fun copy(other: UObject): PythonOnlineDocsCommandlet

    @JsName("C")
    public fun copy(other: Any): PythonOnlineDocsCommandlet
  }
}

public open external class PythonScriptCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonScriptCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonScriptCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonScriptCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonScriptCommandlet

    @JsName("C")
    public fun copy(other: UObject): PythonScriptCommandlet

    @JsName("C")
    public fun copy(other: Any): PythonScriptCommandlet
  }
}

@JsName("EPythonLogOutputType")
public external object PythonLogOutputType {
  public var Info: String

  public var Warning: String

  public var Error: String

  @JsName("EPythonLogOutputType_MAX")
  public var Max: String
}

public open external class PythonLogOutputEntry {
  @JsName("Type")
  public open var type: String

  @JsName("Output")
  public open var output: String

  public open fun clone(): PythonLogOutputEntry

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PythonLogOutputEntry

    @JsName("C")
    public fun copy(other: Any): PythonLogOutputEntry
  }
}

@JsName("EPythonCommandExecutionMode")
public external object PythonCommandExecutionMode {
  public var ExecuteFile: String

  public var ExecuteStatement: String

  public var EvaluateStatement: String

  @JsName("EPythonCommandExecutionMode_MAX")
  public var Max: String
}

@JsName("EPythonFileExecutionScope")
public external object PythonFileExecutionScope {
  public var Private: String

  public var Public: String

  @JsName("EPythonFileExecutionScope_MAX")
  public var Max: String
}

@JsName("T$835")
public external interface Object835 {
  @JsName("CommandResult")
  public var commandResult: String

  @JsName("LogOutput")
  public var logOutput: Array<PythonLogOutputEntry>

  @JsName("$")
  public var value: Boolean
}

public open external class PythonScriptLibrary(
  outer: UObject,
) : BlueprintFunctionLibrary {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonScriptLibrary

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonScriptLibrary

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonScriptLibrary

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonScriptLibrary

    @JsName("IsPythonAvailable")
    public fun isPythonAvailable(): Boolean

    @JsName("ExecutePythonScript")
    public fun executePythonScript(
      pythonScript: String,
      pythonInputs: Array<String>,
      pythonOutputs: Array<String>,
    ): Boolean

    @JsName("ExecutePythonCommandEx")
    public fun executePythonCommandEx(
      pythonCommand: String,
      commandResult: String,
      logOutput: Array<PythonLogOutputEntry>,
      executionMode: String,
      fileExecutionScope: String,
    ): Object835

    @JsName("ExecutePythonCommand")
    public fun executePythonCommand(pythonCommand: String): Boolean

    @JsName("C")
    public fun copy(other: UObject): PythonScriptLibrary

    @JsName("C")
    public fun copy(other: Any): PythonScriptLibrary
  }
}

public open external class PythonScriptPluginSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("StartupScripts")
  public open var startupScripts: Array<String>

  @JsName("AdditionalPaths")
  public open var additionalPaths: Array<DirectoryPath>

  @JsName("bIsolateInterpreterEnvironment")
  public open var isolateInterpreterEnvironment: Boolean

  @JsName("bDeveloperMode")
  public open var developerMode: Boolean

  @JsName("bRemoteExecution")
  public open var remoteExecution: Boolean

  @JsName("RemoteExecutionMulticastGroupEndpoint")
  public open var remoteExecutionMulticastGroupEndpoint: String

  @JsName("RemoteExecutionMulticastBindAddress")
  public open var remoteExecutionMulticastBindAddress: String

  @JsName("RemoteExecutionSendBufferSizeBytes")
  public open var remoteExecutionSendBufferSizeBytes: Number

  @JsName("RemoteExecutionReceiveBufferSizeBytes")
  public open var remoteExecutionReceiveBufferSizeBytes: Number

  @JsName("RemoteExecutionMulticastTtl")
  public open var remoteExecutionMulticastTtl: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonScriptPluginSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonScriptPluginSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonScriptPluginSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonScriptPluginSettings

    @JsName("C")
    public fun copy(other: UObject): PythonScriptPluginSettings

    @JsName("C")
    public fun copy(other: Any): PythonScriptPluginSettings
  }
}

public open external class PythonScriptPluginUserSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("bDeveloperMode")
  public open var developerMode: Boolean

  @JsName("bEnableContentBrowserIntegration")
  public open var enableContentBrowserIntegration: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonScriptPluginUserSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonScriptPluginUserSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonScriptPluginUserSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonScriptPluginUserSettings

    @JsName("C")
    public fun copy(other: UObject): PythonScriptPluginUserSettings

    @JsName("C")
    public fun copy(other: Any): PythonScriptPluginUserSettings
  }
}

public open external class PythonResourceOwner(
  outer: UObject,
) : Interface {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonResourceOwner

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonResourceOwner

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonResourceOwner

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonResourceOwner

    @JsName("C")
    public fun copy(other: UObject): PythonResourceOwner

    @JsName("C")
    public fun copy(other: Any): PythonResourceOwner
  }
}

public open external class PythonCallableForDelegate(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonCallableForDelegate

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonCallableForDelegate

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonCallableForDelegate

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonCallableForDelegate

    @JsName("C")
    public fun copy(other: UObject): PythonCallableForDelegate

    @JsName("C")
    public fun copy(other: Any): PythonCallableForDelegate
  }
}

public open external class PythonGeneratedEnum(
  outer: UObject,
) : Enum {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonGeneratedEnum

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonGeneratedEnum

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonGeneratedEnum

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonGeneratedEnum

    @JsName("C")
    public fun copy(other: UObject): PythonGeneratedEnum

    @JsName("C")
    public fun copy(other: Any): PythonGeneratedEnum
  }
}

public open external class PythonGeneratedClass(
  outer: UObject,
) : Class {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonGeneratedClass

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonGeneratedClass

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonGeneratedClass

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonGeneratedClass

    @JsName("C")
    public fun copy(other: UObject): PythonGeneratedClass

    @JsName("C")
    public fun copy(other: Any): PythonGeneratedClass
  }
}

public open external class PythonGeneratedStruct(
  outer: UObject,
) : ScriptStruct {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PythonGeneratedStruct

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PythonGeneratedStruct

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PythonGeneratedStruct

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PythonGeneratedStruct

    @JsName("C")
    public fun copy(other: UObject): PythonGeneratedStruct

    @JsName("C")
    public fun copy(other: Any): PythonGeneratedStruct
  }
}

@JsName("OnChangeDynamic__PythonCallable")
public open external class OnChangeDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnChangeDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnChangeDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnChangeDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnChangeDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnChangeDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnChangeDynamicPythonCallable
  }
}

@JsName("OnPreChangeDynamic__PythonCallable")
public open external class OnPreChangeDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPreChangeDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPreChangeDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPreChangeDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPreChangeDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPreChangeDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPreChangeDynamicPythonCallable
  }
}

@JsName("ToolMenuDynamicCanExecuteAction__PythonCallable")
public open external class ToolMenuDynamicCanExecuteActionPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToolMenuDynamicCanExecuteActionPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ToolMenuDynamicCanExecuteActionPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToolMenuDynamicCanExecuteActionPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToolMenuDynamicCanExecuteActionPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ToolMenuDynamicCanExecuteActionPythonCallable

    @JsName("C")
    public fun copy(other: Any): ToolMenuDynamicCanExecuteActionPythonCallable
  }
}

@JsName("ToolMenuDynamicExecuteAction__PythonCallable")
public open external class ToolMenuDynamicExecuteActionPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToolMenuDynamicExecuteActionPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ToolMenuDynamicExecuteActionPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToolMenuDynamicExecuteActionPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToolMenuDynamicExecuteActionPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ToolMenuDynamicExecuteActionPythonCallable

    @JsName("C")
    public fun copy(other: Any): ToolMenuDynamicExecuteActionPythonCallable
  }
}

@JsName("ToolMenuDynamicGetActionCheckState__PythonCallable")
public open external class ToolMenuDynamicGetActionCheckStatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToolMenuDynamicGetActionCheckStatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ToolMenuDynamicGetActionCheckStatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToolMenuDynamicGetActionCheckStatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToolMenuDynamicGetActionCheckStatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ToolMenuDynamicGetActionCheckStatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ToolMenuDynamicGetActionCheckStatePythonCallable
  }
}

@JsName("ToolMenuDynamicIsActionButtonVisible__PythonCallable")
public open external class ToolMenuDynamicIsActionButtonVisiblePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToolMenuDynamicIsActionButtonVisiblePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ToolMenuDynamicIsActionButtonVisiblePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToolMenuDynamicIsActionButtonVisiblePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToolMenuDynamicIsActionButtonVisiblePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ToolMenuDynamicIsActionButtonVisiblePythonCallable

    @JsName("C")
    public fun copy(other: Any): ToolMenuDynamicIsActionButtonVisiblePythonCallable
  }
}

@JsName("ToolMenuDynamicIsActionChecked__PythonCallable")
public open external class ToolMenuDynamicIsActionCheckedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ToolMenuDynamicIsActionCheckedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ToolMenuDynamicIsActionCheckedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ToolMenuDynamicIsActionCheckedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ToolMenuDynamicIsActionCheckedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ToolMenuDynamicIsActionCheckedPythonCallable

    @JsName("C")
    public fun copy(other: Any): ToolMenuDynamicIsActionCheckedPythonCallable
  }
}

@JsName("OnImportDoneDynamic__PythonCallable")
public open external class OnImportDoneDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnImportDoneDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnImportDoneDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnImportDoneDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnImportDoneDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnImportDoneDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnImportDoneDynamicPythonCallable
  }
}

@JsName("OnObjectImportDoneDynamic__PythonCallable")
public open external class OnObjectImportDoneDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnObjectImportDoneDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnObjectImportDoneDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnObjectImportDoneDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnObjectImportDoneDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnObjectImportDoneDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnObjectImportDoneDynamicPythonCallable
  }
}

@JsName("AnimDataModelModifiedDynamicEvent__PythonCallable")
public open external class AnimDataModelModifiedDynamicEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimDataModelModifiedDynamicEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        AnimDataModelModifiedDynamicEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimDataModelModifiedDynamicEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimDataModelModifiedDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): AnimDataModelModifiedDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): AnimDataModelModifiedDynamicEventPythonCallable
  }
}

@JsName("CharacterMovementUpdatedSignature__PythonCallable")
public open external class CharacterMovementUpdatedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CharacterMovementUpdatedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        CharacterMovementUpdatedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CharacterMovementUpdatedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CharacterMovementUpdatedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): CharacterMovementUpdatedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): CharacterMovementUpdatedSignaturePythonCallable
  }
}

@JsName("CharacterReachedApexSignature__PythonCallable")
public open external class CharacterReachedApexSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CharacterReachedApexSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        CharacterReachedApexSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CharacterReachedApexSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CharacterReachedApexSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): CharacterReachedApexSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): CharacterReachedApexSignaturePythonCallable
  }
}

@JsName("ConstraintBrokenSignature__PythonCallable")
public open external class ConstraintBrokenSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ConstraintBrokenSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ConstraintBrokenSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ConstraintBrokenSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ConstraintBrokenSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ConstraintBrokenSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ConstraintBrokenSignaturePythonCallable
  }
}

@JsName("EmptyOnlineDelegate__PythonCallable")
public open external class EmptyOnlineDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EmptyOnlineDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EmptyOnlineDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EmptyOnlineDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EmptyOnlineDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): EmptyOnlineDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): EmptyOnlineDelegatePythonCallable
  }
}

@JsName("InputActionHandlerDynamicSignature__PythonCallable")
public open external class InputActionHandlerDynamicSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InputActionHandlerDynamicSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InputActionHandlerDynamicSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InputActionHandlerDynamicSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InputActionHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InputActionHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InputActionHandlerDynamicSignaturePythonCallable
  }
}

@JsName("InputAxisHandlerDynamicSignature__PythonCallable")
public open external class InputAxisHandlerDynamicSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InputAxisHandlerDynamicSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InputAxisHandlerDynamicSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InputAxisHandlerDynamicSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InputAxisHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InputAxisHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InputAxisHandlerDynamicSignaturePythonCallable
  }
}

@JsName("InputGestureHandlerDynamicSignature__PythonCallable")
public open external class InputGestureHandlerDynamicSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InputGestureHandlerDynamicSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InputGestureHandlerDynamicSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InputGestureHandlerDynamicSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InputGestureHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InputGestureHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InputGestureHandlerDynamicSignaturePythonCallable
  }
}

@JsName("InputTouchHandlerDynamicSignature__PythonCallable")
public open external class InputTouchHandlerDynamicSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InputTouchHandlerDynamicSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InputTouchHandlerDynamicSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InputTouchHandlerDynamicSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InputTouchHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InputTouchHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InputTouchHandlerDynamicSignaturePythonCallable
  }
}

@JsName("InputVectorAxisHandlerDynamicSignature__PythonCallable")
public open external class InputVectorAxisHandlerDynamicSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InputVectorAxisHandlerDynamicSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InputVectorAxisHandlerDynamicSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InputVectorAxisHandlerDynamicSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InputVectorAxisHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InputVectorAxisHandlerDynamicSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InputVectorAxisHandlerDynamicSignaturePythonCallable
  }
}

@JsName("InstigatedAnyDamageSignature__PythonCallable")
public open external class InstigatedAnyDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InstigatedAnyDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InstigatedAnyDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InstigatedAnyDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InstigatedAnyDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InstigatedAnyDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InstigatedAnyDamageSignaturePythonCallable
  }
}

@JsName("LandedSignature__PythonCallable")
public open external class LandedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LandedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LandedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LandedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LandedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): LandedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): LandedSignaturePythonCallable
  }
}

@JsName("LevelStreamingLoadedStatus__PythonCallable")
public open external class LevelStreamingLoadedStatusPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelStreamingLoadedStatusPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelStreamingLoadedStatusPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelStreamingLoadedStatusPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelStreamingLoadedStatusPythonCallable

    @JsName("C")
    public fun copy(other: UObject): LevelStreamingLoadedStatusPythonCallable

    @JsName("C")
    public fun copy(other: Any): LevelStreamingLoadedStatusPythonCallable
  }
}

@JsName("LevelStreamingVisibilityStatus__PythonCallable")
public open external class LevelStreamingVisibilityStatusPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelStreamingVisibilityStatusPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        LevelStreamingVisibilityStatusPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelStreamingVisibilityStatusPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelStreamingVisibilityStatusPythonCallable

    @JsName("C")
    public fun copy(other: UObject): LevelStreamingVisibilityStatusPythonCallable

    @JsName("C")
    public fun copy(other: Any): LevelStreamingVisibilityStatusPythonCallable
  }
}

@JsName("MovementModeChangedSignature__PythonCallable")
public open external class MovementModeChangedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovementModeChangedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MovementModeChangedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovementModeChangedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovementModeChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): MovementModeChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): MovementModeChangedSignaturePythonCallable
  }
}

@JsName("OnActorReady__PythonCallable")
public open external class OnActorReadyPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnActorReadyPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnActorReadyPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnActorReadyPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnActorReadyPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnActorReadyPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnActorReadyPythonCallable
  }
}

@JsName("OnAllMontageInstancesEndedMCDelegate__PythonCallable")
public open external class OnAllMontageInstancesEndedMcDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAllMontageInstancesEndedMcDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnAllMontageInstancesEndedMcDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAllMontageInstancesEndedMcDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAllMontageInstancesEndedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAllMontageInstancesEndedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAllMontageInstancesEndedMcDelegatePythonCallable
  }
}

@JsName("OnAnimInitialized__PythonCallable")
public open external class OnAnimInitializedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAnimInitializedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAnimInitializedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAnimInitializedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAnimInitializedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAnimInitializedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAnimInitializedPythonCallable
  }
}

@JsName("OnAsyncHandleSaveGame__PythonCallable")
public open external class OnAsyncHandleSaveGamePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAsyncHandleSaveGamePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAsyncHandleSaveGamePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAsyncHandleSaveGamePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAsyncHandleSaveGamePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAsyncHandleSaveGamePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAsyncHandleSaveGamePythonCallable
  }
}

@JsName("OnAudioFadeChangeSignature__PythonCallable")
public open external class OnAudioFadeChangeSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioFadeChangeSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioFadeChangeSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioFadeChangeSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioFadeChangeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioFadeChangeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioFadeChangeSignaturePythonCallable
  }
}

@JsName("OnAudioFinished__PythonCallable")
public open external class OnAudioFinishedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioFinishedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioFinishedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioFinishedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioFinishedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioFinishedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioFinishedPythonCallable
  }
}

@JsName("OnAudioMultiEnvelopeValue__PythonCallable")
public open external class OnAudioMultiEnvelopeValuePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioMultiEnvelopeValuePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioMultiEnvelopeValuePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioMultiEnvelopeValuePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioMultiEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioMultiEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioMultiEnvelopeValuePythonCallable
  }
}

@JsName("OnAudioPlaybackPercent__PythonCallable")
public open external class OnAudioPlaybackPercentPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioPlaybackPercentPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioPlaybackPercentPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioPlaybackPercentPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioPlaybackPercentPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioPlaybackPercentPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioPlaybackPercentPythonCallable
  }
}

@JsName("OnAudioPlayStateChanged__PythonCallable")
public open external class OnAudioPlayStateChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioPlayStateChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioPlayStateChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioPlayStateChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioPlayStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioPlayStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioPlayStateChangedPythonCallable
  }
}

@JsName("OnAudioSingleEnvelopeValue__PythonCallable")
public open external class OnAudioSingleEnvelopeValuePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioSingleEnvelopeValuePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioSingleEnvelopeValuePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioSingleEnvelopeValuePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioSingleEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioSingleEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioSingleEnvelopeValuePythonCallable
  }
}

@JsName("OnAudioVirtualizationChanged__PythonCallable")
public open external class OnAudioVirtualizationChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioVirtualizationChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnAudioVirtualizationChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioVirtualizationChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioVirtualizationChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioVirtualizationChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioVirtualizationChangedPythonCallable
  }
}

@JsName("OnBoneTransformsFinalized__PythonCallable")
public open external class OnBoneTransformsFinalizedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnBoneTransformsFinalizedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnBoneTransformsFinalizedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnBoneTransformsFinalizedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnBoneTransformsFinalizedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnBoneTransformsFinalizedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnBoneTransformsFinalizedPythonCallable
  }
}

@JsName("OnCanvasRenderTargetUpdate__PythonCallable")
public open external class OnCanvasRenderTargetUpdatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnCanvasRenderTargetUpdatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnCanvasRenderTargetUpdatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnCanvasRenderTargetUpdatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnCanvasRenderTargetUpdatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnCanvasRenderTargetUpdatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnCanvasRenderTargetUpdatePythonCallable
  }
}

@JsName("OnDataLayerRuntimeStateChanged__PythonCallable")
public open external class OnDataLayerRuntimeStateChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDataLayerRuntimeStateChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnDataLayerRuntimeStateChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDataLayerRuntimeStateChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDataLayerRuntimeStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDataLayerRuntimeStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDataLayerRuntimeStateChangedPythonCallable
  }
}

@JsName("OnForceFeedbackFinished__PythonCallable")
public open external class OnForceFeedbackFinishedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnForceFeedbackFinishedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnForceFeedbackFinishedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnForceFeedbackFinishedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnForceFeedbackFinishedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnForceFeedbackFinishedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnForceFeedbackFinishedPythonCallable
  }
}

@JsName("OnGameUserSettingsUINeedsUpdate__PythonCallable")
public open external class OnGameUserSettingsUiNeedsUpdatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGameUserSettingsUiNeedsUpdatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnGameUserSettingsUiNeedsUpdatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGameUserSettingsUiNeedsUpdatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGameUserSettingsUiNeedsUpdatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGameUserSettingsUiNeedsUpdatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGameUserSettingsUiNeedsUpdatePythonCallable
  }
}

@JsName("OnMatineeEvent__PythonCallable")
public open external class OnMatineeEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMatineeEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMatineeEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMatineeEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMatineeEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMatineeEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMatineeEventPythonCallable
  }
}

@JsName("OnMontageBlendingOutStartedMCDelegate__PythonCallable")
public open external class OnMontageBlendingOutStartedMcDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMontageBlendingOutStartedMcDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMontageBlendingOutStartedMcDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMontageBlendingOutStartedMcDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMontageBlendingOutStartedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMontageBlendingOutStartedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMontageBlendingOutStartedMcDelegatePythonCallable
  }
}

@JsName("OnMontageEndedMCDelegate__PythonCallable")
public open external class OnMontageEndedMcDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMontageEndedMcDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMontageEndedMcDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMontageEndedMcDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMontageEndedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMontageEndedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMontageEndedMcDelegatePythonCallable
  }
}

@JsName("OnMontageStartedMCDelegate__PythonCallable")
public open external class OnMontageStartedMcDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMontageStartedMcDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMontageStartedMcDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMontageStartedMcDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMontageStartedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMontageStartedMcDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMontageStartedMcDelegatePythonCallable
  }
}

@JsName("OnPawnControllerChanged__PythonCallable")
public open external class OnPawnControllerChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPawnControllerChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPawnControllerChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPawnControllerChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPawnControllerChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPawnControllerChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPawnControllerChangedPythonCallable
  }
}

@JsName("OnPlayerStatePawnSet__PythonCallable")
public open external class OnPlayerStatePawnSetPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPlayerStatePawnSetPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPlayerStatePawnSetPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPlayerStatePawnSetPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPlayerStatePawnSetPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPlayerStatePawnSetPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPlayerStatePawnSetPythonCallable
  }
}

@JsName("OnPossessedPawnChanged__PythonCallable")
public open external class OnPossessedPawnChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPossessedPawnChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPossessedPawnChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPossessedPawnChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPossessedPawnChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPossessedPawnChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPossessedPawnChangedPythonCallable
  }
}

@JsName("OnPrimaryAssetBundlesChanged__PythonCallable")
public open external class OnPrimaryAssetBundlesChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPrimaryAssetBundlesChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnPrimaryAssetBundlesChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPrimaryAssetBundlesChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPrimaryAssetBundlesChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPrimaryAssetBundlesChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPrimaryAssetBundlesChangedPythonCallable
  }
}

@JsName("OnPrimaryAssetClassListLoaded__PythonCallable")
public open external class OnPrimaryAssetClassListLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPrimaryAssetClassListLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnPrimaryAssetClassListLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPrimaryAssetClassListLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPrimaryAssetClassListLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPrimaryAssetClassListLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPrimaryAssetClassListLoadedPythonCallable
  }
}

@JsName("OnPrimaryAssetClassLoaded__PythonCallable")
public open external class OnPrimaryAssetClassLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPrimaryAssetClassLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPrimaryAssetClassLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPrimaryAssetClassLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPrimaryAssetClassLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPrimaryAssetClassLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPrimaryAssetClassLoadedPythonCallable
  }
}

@JsName("OnPrimaryAssetListLoaded__PythonCallable")
public open external class OnPrimaryAssetListLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPrimaryAssetListLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPrimaryAssetListLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPrimaryAssetListLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPrimaryAssetListLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPrimaryAssetListLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPrimaryAssetListLoadedPythonCallable
  }
}

@JsName("OnPrimaryAssetLoaded__PythonCallable")
public open external class OnPrimaryAssetLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPrimaryAssetLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPrimaryAssetLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPrimaryAssetLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPrimaryAssetLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPrimaryAssetLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPrimaryAssetLoadedPythonCallable
  }
}

@JsName("OnQuartzCommandEvent__PythonCallable")
public open external class OnQuartzCommandEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnQuartzCommandEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnQuartzCommandEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnQuartzCommandEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnQuartzCommandEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnQuartzCommandEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnQuartzCommandEventPythonCallable
  }
}

@JsName("OnQuartzCommandEventBP__PythonCallable")
public open external class OnQuartzCommandEventBpPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnQuartzCommandEventBpPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnQuartzCommandEventBpPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnQuartzCommandEventBpPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnQuartzCommandEventBpPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnQuartzCommandEventBpPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnQuartzCommandEventBpPythonCallable
  }
}

@JsName("OnQuartzMetronomeEvent__PythonCallable")
public open external class OnQuartzMetronomeEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnQuartzMetronomeEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnQuartzMetronomeEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnQuartzMetronomeEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnQuartzMetronomeEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnQuartzMetronomeEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnQuartzMetronomeEventPythonCallable
  }
}

@JsName("OnQuartzMetronomeEventBP__PythonCallable")
public open external class OnQuartzMetronomeEventBpPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnQuartzMetronomeEventBpPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnQuartzMetronomeEventBpPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnQuartzMetronomeEventBpPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnQuartzMetronomeEventBpPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnQuartzMetronomeEventBpPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnQuartzMetronomeEventBpPythonCallable
  }
}

@JsName("OnQueueSubtitles__PythonCallable")
public open external class OnQueueSubtitlesPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnQueueSubtitlesPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnQueueSubtitlesPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnQueueSubtitlesPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnQueueSubtitlesPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnQueueSubtitlesPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnQueueSubtitlesPythonCallable
  }
}

@JsName("OnSubmixEnvelope__PythonCallable")
public open external class OnSubmixEnvelopePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSubmixEnvelopePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSubmixEnvelopePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSubmixEnvelopePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSubmixEnvelopePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSubmixEnvelopePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSubmixEnvelopePythonCallable
  }
}

@JsName("OnSubmixEnvelopeBP__PythonCallable")
public open external class OnSubmixEnvelopeBpPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSubmixEnvelopeBpPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSubmixEnvelopeBpPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSubmixEnvelopeBpPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSubmixEnvelopeBpPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSubmixEnvelopeBpPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSubmixEnvelopeBpPythonCallable
  }
}

@JsName("OnSubmixRecordedFileDone__PythonCallable")
public open external class OnSubmixRecordedFileDonePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSubmixRecordedFileDonePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSubmixRecordedFileDonePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSubmixRecordedFileDonePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSubmixRecordedFileDonePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSubmixRecordedFileDonePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSubmixRecordedFileDonePythonCallable
  }
}

@JsName("OnSubmixSpectralAnalysis__PythonCallable")
public open external class OnSubmixSpectralAnalysisPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSubmixSpectralAnalysisPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSubmixSpectralAnalysisPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSubmixSpectralAnalysisPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSubmixSpectralAnalysisPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSubmixSpectralAnalysisPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSubmixSpectralAnalysisPythonCallable
  }
}

@JsName("OnSubmixSpectralAnalysisBP__PythonCallable")
public open external class OnSubmixSpectralAnalysisBpPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSubmixSpectralAnalysisBpPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSubmixSpectralAnalysisBpPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSubmixSpectralAnalysisBpPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSubmixSpectralAnalysisBpPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSubmixSpectralAnalysisBpPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSubmixSpectralAnalysisBpPythonCallable
  }
}

@JsName("OnSystemFinished__PythonCallable")
public open external class OnSystemFinishedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSystemFinishedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSystemFinishedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSystemFinishedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSystemFinishedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSystemFinishedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSystemFinishedPythonCallable
  }
}

@JsName("OnTimelineEvent__PythonCallable")
public open external class OnTimelineEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTimelineEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTimelineEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTimelineEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTimelineEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTimelineEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTimelineEventPythonCallable
  }
}

@JsName("OnTimelineFloat__PythonCallable")
public open external class OnTimelineFloatPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTimelineFloatPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTimelineFloatPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTimelineFloatPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTimelineFloatPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTimelineFloatPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTimelineFloatPythonCallable
  }
}

@JsName("OnTimelineLinearColor__PythonCallable")
public open external class OnTimelineLinearColorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTimelineLinearColorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTimelineLinearColorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTimelineLinearColorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTimelineLinearColorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTimelineLinearColorPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTimelineLinearColorPythonCallable
  }
}

@JsName("OnTimelineVector__PythonCallable")
public open external class OnTimelineVectorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTimelineVectorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTimelineVectorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTimelineVectorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTimelineVectorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTimelineVectorPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTimelineVectorPythonCallable
  }
}

@JsName("OnUserClickedBanner__PythonCallable")
public open external class OnUserClickedBannerPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnUserClickedBannerPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnUserClickedBannerPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnUserClickedBannerPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnUserClickedBannerPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnUserClickedBannerPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnUserClickedBannerPythonCallable
  }
}

@JsName("OnUserClosedAdvertisement__PythonCallable")
public open external class OnUserClosedAdvertisementPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnUserClosedAdvertisementPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnUserClosedAdvertisementPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnUserClosedAdvertisementPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnUserClosedAdvertisementPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnUserClosedAdvertisementPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnUserClosedAdvertisementPythonCallable
  }
}

@JsName("ParticleBurstSignature__PythonCallable")
public open external class ParticleBurstSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleBurstSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleBurstSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleBurstSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleBurstSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ParticleBurstSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ParticleBurstSignaturePythonCallable
  }
}

@JsName("ParticleCollisionSignature__PythonCallable")
public open external class ParticleCollisionSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleCollisionSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleCollisionSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleCollisionSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleCollisionSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ParticleCollisionSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ParticleCollisionSignaturePythonCallable
  }
}

@JsName("ParticleDeathSignature__PythonCallable")
public open external class ParticleDeathSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleDeathSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleDeathSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleDeathSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleDeathSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ParticleDeathSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ParticleDeathSignaturePythonCallable
  }
}

@JsName("ParticleSpawnSignature__PythonCallable")
public open external class ParticleSpawnSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ParticleSpawnSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ParticleSpawnSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ParticleSpawnSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ParticleSpawnSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ParticleSpawnSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ParticleSpawnSignaturePythonCallable
  }
}

@JsName("PlasticDeformationEventSignature__PythonCallable")
public open external class PlasticDeformationEventSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlasticDeformationEventSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlasticDeformationEventSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlasticDeformationEventSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlasticDeformationEventSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlasticDeformationEventSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlasticDeformationEventSignaturePythonCallable
  }
}

@JsName("PlatformInterfaceDelegate__PythonCallable")
public open external class PlatformInterfaceDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformInterfaceDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlatformInterfaceDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformInterfaceDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformInterfaceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformInterfaceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformInterfaceDelegatePythonCallable
  }
}

@JsName("PlayMontageAnimNotifyDelegate__PythonCallable")
public open external class PlayMontageAnimNotifyDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlayMontageAnimNotifyDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlayMontageAnimNotifyDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlayMontageAnimNotifyDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlayMontageAnimNotifyDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlayMontageAnimNotifyDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlayMontageAnimNotifyDelegatePythonCallable
  }
}

@JsName("PostEvaluateAnimEvent__PythonCallable")
public open external class PostEvaluateAnimEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PostEvaluateAnimEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PostEvaluateAnimEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PostEvaluateAnimEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PostEvaluateAnimEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): PostEvaluateAnimEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): PostEvaluateAnimEventPythonCallable
  }
}

@JsName("TimerDynamicDelegate__PythonCallable")
public open external class TimerDynamicDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TimerDynamicDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TimerDynamicDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TimerDynamicDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TimerDynamicDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TimerDynamicDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TimerDynamicDelegatePythonCallable
  }
}

@JsName("ViewportDisplayCallback__PythonCallable")
public open external class ViewportDisplayCallbackPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportDisplayCallbackPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportDisplayCallbackPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportDisplayCallbackPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportDisplayCallbackPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ViewportDisplayCallbackPythonCallable

    @JsName("C")
    public fun copy(other: Any): ViewportDisplayCallbackPythonCallable
  }
}

@JsName("ApplicationLifetimeDelegate__PythonCallable")
public open external class ApplicationLifetimeDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ApplicationLifetimeDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ApplicationLifetimeDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ApplicationLifetimeDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ApplicationLifetimeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ApplicationLifetimeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ApplicationLifetimeDelegatePythonCallable
  }
}

@JsName("ApplicationStartupArgumentsDelegate__PythonCallable")
public open external class ApplicationStartupArgumentsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ApplicationStartupArgumentsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ApplicationStartupArgumentsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ApplicationStartupArgumentsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ApplicationStartupArgumentsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ApplicationStartupArgumentsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ApplicationStartupArgumentsDelegatePythonCallable
  }
}

@JsName("OnLowPowerModeDelegate__PythonCallable")
public open external class OnLowPowerModeDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnLowPowerModeDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnLowPowerModeDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnLowPowerModeDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnLowPowerModeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnLowPowerModeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnLowPowerModeDelegatePythonCallable
  }
}

@JsName("OnTemperatureChangeDelegate__PythonCallable")
public open external class OnTemperatureChangeDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTemperatureChangeDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTemperatureChangeDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTemperatureChangeDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTemperatureChangeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTemperatureChangeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTemperatureChangeDelegatePythonCallable
  }
}

@JsName("OnDataDrivenCVarChanged__PythonCallable")
public open external class OnDataDrivenCVarChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDataDrivenCVarChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDataDrivenCVarChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDataDrivenCVarChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDataDrivenCVarChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDataDrivenCVarChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDataDrivenCVarChangedPythonCallable
  }
}

@JsName("OnInterpToResetDelegate__PythonCallable")
public open external class OnInterpToResetDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInterpToResetDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInterpToResetDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInterpToResetDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInterpToResetDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInterpToResetDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInterpToResetDelegatePythonCallable
  }
}

@JsName("OnInterpToReverseDelegate__PythonCallable")
public open external class OnInterpToReverseDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInterpToReverseDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInterpToReverseDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInterpToReverseDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInterpToReverseDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInterpToReverseDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInterpToReverseDelegatePythonCallable
  }
}

@JsName("OnInterpToStopDelegate__PythonCallable")
public open external class OnInterpToStopDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInterpToStopDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInterpToStopDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInterpToStopDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInterpToStopDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInterpToStopDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInterpToStopDelegatePythonCallable
  }
}

@JsName("OnInterpToWaitBeginDelegate__PythonCallable")
public open external class OnInterpToWaitBeginDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInterpToWaitBeginDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInterpToWaitBeginDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInterpToWaitBeginDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInterpToWaitBeginDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInterpToWaitBeginDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInterpToWaitBeginDelegatePythonCallable
  }
}

@JsName("OnInterpToWaitEndDelegate__PythonCallable")
public open external class OnInterpToWaitEndDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInterpToWaitEndDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInterpToWaitEndDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInterpToWaitEndDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInterpToWaitEndDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInterpToWaitEndDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInterpToWaitEndDelegatePythonCallable
  }
}

@JsName("OnAssetLoaded__PythonCallable")
public open external class OnAssetLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetLoadedPythonCallable
  }
}

@JsName("OnAssetClassLoaded__PythonCallable")
public open external class OnAssetClassLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetClassLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetClassLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetClassLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetClassLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetClassLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetClassLoadedPythonCallable
  }
}

@JsName("PlatformEventDelegate__PythonCallable")
public open external class PlatformEventDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformEventDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlatformEventDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformEventDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformEventDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformEventDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformEventDelegatePythonCallable
  }
}

@JsName("PlatformDelegate__PythonCallable")
public open external class PlatformDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PlatformDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformDelegatePythonCallable
  }
}

@JsName("PlatformFailedToRegisterForRemoteNotificationsDelegate__PythonCallable")
public open external class PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject():
        PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject):
        PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any):
        PlatformFailedToRegisterForRemoteNotificationsDelegatePythonCallable
  }
}

@JsName("PlatformReceivedLocalNotificationDelegate__PythonCallable")
public open external class PlatformReceivedLocalNotificationDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformReceivedLocalNotificationDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformReceivedLocalNotificationDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformReceivedLocalNotificationDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformReceivedLocalNotificationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformReceivedLocalNotificationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformReceivedLocalNotificationDelegatePythonCallable
  }
}

@JsName("PlatformReceivedRemoteNotificationDelegate__PythonCallable")
public open external class PlatformReceivedRemoteNotificationDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformReceivedRemoteNotificationDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformReceivedRemoteNotificationDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformReceivedRemoteNotificationDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformReceivedRemoteNotificationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformReceivedRemoteNotificationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformReceivedRemoteNotificationDelegatePythonCallable
  }
}

@JsName("PlatformRegisteredForRemoteNotificationsDelegate__PythonCallable")
public open external class PlatformRegisteredForRemoteNotificationsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        PlatformRegisteredForRemoteNotificationsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformRegisteredForRemoteNotificationsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformRegisteredForRemoteNotificationsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformRegisteredForRemoteNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformRegisteredForRemoteNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformRegisteredForRemoteNotificationsDelegatePythonCallable
  }
}

@JsName("PlatformRegisteredForUserNotificationsDelegate__PythonCallable")
public open external class PlatformRegisteredForUserNotificationsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String):
        PlatformRegisteredForUserNotificationsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformRegisteredForUserNotificationsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformRegisteredForUserNotificationsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformRegisteredForUserNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformRegisteredForUserNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformRegisteredForUserNotificationsDelegatePythonCallable
  }
}

@JsName("PlatformScreenOrientationChangedDelegate__PythonCallable")
public open external class PlatformScreenOrientationChangedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformScreenOrientationChangedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformScreenOrientationChangedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformScreenOrientationChangedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformScreenOrientationChangedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformScreenOrientationChangedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformScreenOrientationChangedDelegatePythonCallable
  }
}

@JsName("PlatformStartupArgumentsDelegate__PythonCallable")
public open external class PlatformStartupArgumentsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PlatformStartupArgumentsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PlatformStartupArgumentsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PlatformStartupArgumentsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PlatformStartupArgumentsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PlatformStartupArgumentsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PlatformStartupArgumentsDelegatePythonCallable
  }
}

@JsName("OnProjectileBounceDelegate__PythonCallable")
public open external class OnProjectileBounceDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnProjectileBounceDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnProjectileBounceDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnProjectileBounceDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnProjectileBounceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnProjectileBounceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnProjectileBounceDelegatePythonCallable
  }
}

@JsName("OnProjectileStopDelegate__PythonCallable")
public open external class OnProjectileStopDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnProjectileStopDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnProjectileStopDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnProjectileStopDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnProjectileStopDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnProjectileStopDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnProjectileStopDelegatePythonCallable
  }
}

@JsName("OnMockDataMeshTrackerUpdated__PythonCallable")
public open external class OnMockDataMeshTrackerUpdatedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMockDataMeshTrackerUpdatedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMockDataMeshTrackerUpdatedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMockDataMeshTrackerUpdatedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMockDataMeshTrackerUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMockDataMeshTrackerUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMockDataMeshTrackerUpdatedPythonCallable
  }
}

@JsName("ARGetCandidateObjectPin__PythonCallable")
public open external class ArGetCandidateObjectPinPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ArGetCandidateObjectPinPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ArGetCandidateObjectPinPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ArGetCandidateObjectPinPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ArGetCandidateObjectPinPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ArGetCandidateObjectPinPythonCallable

    @JsName("C")
    public fun copy(other: Any): ArGetCandidateObjectPinPythonCallable
  }
}

@JsName("ARSaveWorldPin__PythonCallable")
public open external class ArSaveWorldPinPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ArSaveWorldPinPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ArSaveWorldPinPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ArSaveWorldPinPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ArSaveWorldPinPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ArSaveWorldPinPythonCallable

    @JsName("C")
    public fun copy(other: Any): ArSaveWorldPinPythonCallable
  }
}

@JsName("OnARTrackingStateChanged__PythonCallable")
public open external class OnArTrackingStateChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnArTrackingStateChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnArTrackingStateChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnArTrackingStateChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnArTrackingStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnArTrackingStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnArTrackingStateChangedPythonCallable
  }
}

@JsName("OnARTransformUpdated__PythonCallable")
public open external class OnArTransformUpdatedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnArTransformUpdatedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnArTransformUpdatedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnArTransformUpdatedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnArTransformUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnArTransformUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnArTransformUpdatedPythonCallable
  }
}

@JsName("TrackableDelegate__PythonCallable")
public open external class TrackableDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackableDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackableDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackableDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackableDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackableDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackableDelegatePythonCallable
  }
}

@JsName("TrackableEnvProbeDelegate__PythonCallable")
public open external class TrackableEnvProbeDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackableEnvProbeDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackableEnvProbeDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackableEnvProbeDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackableEnvProbeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackableEnvProbeDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackableEnvProbeDelegatePythonCallable
  }
}

@JsName("TrackableFaceDelegate__PythonCallable")
public open external class TrackableFaceDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackableFaceDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackableFaceDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackableFaceDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackableFaceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackableFaceDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackableFaceDelegatePythonCallable
  }
}

@JsName("TrackableImageDelegate__PythonCallable")
public open external class TrackableImageDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackableImageDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackableImageDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackableImageDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackableImageDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackableImageDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackableImageDelegatePythonCallable
  }
}

@JsName("TrackableObjectDelegate__PythonCallable")
public open external class TrackableObjectDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackableObjectDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackableObjectDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackableObjectDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackableObjectDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackableObjectDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackableObjectDelegatePythonCallable
  }
}

@JsName("TrackablePlaneDelegate__PythonCallable")
public open external class TrackablePlaneDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackablePlaneDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackablePlaneDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackablePlaneDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackablePlaneDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackablePlaneDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackablePlaneDelegatePythonCallable
  }
}

@JsName("TrackablePointDelegate__PythonCallable")
public open external class TrackablePointDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TrackablePointDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TrackablePointDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TrackablePointDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TrackablePointDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TrackablePointDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TrackablePointDelegatePythonCallable
  }
}

@JsName("InstanceARActorSpawnedDelegate__PythonCallable")
public open external class InstanceArActorSpawnedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InstanceArActorSpawnedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InstanceArActorSpawnedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InstanceArActorSpawnedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InstanceArActorSpawnedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InstanceArActorSpawnedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): InstanceArActorSpawnedDelegatePythonCallable
  }
}

@JsName("InstanceARActorToBeDestroyedDelegate__PythonCallable")
public open external class InstanceArActorToBeDestroyedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InstanceArActorToBeDestroyedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InstanceArActorToBeDestroyedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InstanceArActorToBeDestroyedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InstanceArActorToBeDestroyedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InstanceArActorToBeDestroyedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): InstanceArActorToBeDestroyedDelegatePythonCallable
  }
}

@JsName("GeoTrackingAvailabilityDelegate__PythonCallable")
public open external class GeoTrackingAvailabilityDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GeoTrackingAvailabilityDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GeoTrackingAvailabilityDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GeoTrackingAvailabilityDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GeoTrackingAvailabilityDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): GeoTrackingAvailabilityDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): GeoTrackingAvailabilityDelegatePythonCallable
  }
}

@JsName("GetGeoLocationDelegate__PythonCallable")
public open external class GetGeoLocationDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetGeoLocationDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetGeoLocationDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetGeoLocationDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetGeoLocationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetGeoLocationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): GetGeoLocationDelegatePythonCallable
  }
}

@JsName("DeviceModelLoadedDelegate__PythonCallable")
public open external class DeviceModelLoadedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DeviceModelLoadedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DeviceModelLoadedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DeviceModelLoadedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DeviceModelLoadedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): DeviceModelLoadedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): DeviceModelLoadedDelegatePythonCallable
  }
}

@JsName("XRDeviceOnDisconnectDelegate__PythonCallable")
public open external class XrDeviceOnDisconnectDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): XrDeviceOnDisconnectDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        XrDeviceOnDisconnectDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): XrDeviceOnDisconnectDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): XrDeviceOnDisconnectDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): XrDeviceOnDisconnectDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): XrDeviceOnDisconnectDelegatePythonCallable
  }
}

@JsName("XRTimedInputActionDelegate__PythonCallable")
public open external class XrTimedInputActionDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): XrTimedInputActionDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): XrTimedInputActionDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): XrTimedInputActionDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): XrTimedInputActionDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): XrTimedInputActionDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): XrTimedInputActionDelegatePythonCallable
  }
}

@JsName("VRNotificationsDelegate__PythonCallable")
public open external class VrNotificationsDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VrNotificationsDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VrNotificationsDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VrNotificationsDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VrNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): VrNotificationsDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): VrNotificationsDelegatePythonCallable
  }
}

@JsName("GameplayTaskSpawnActorDelegate__PythonCallable")
public open external class GameplayTaskSpawnActorDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GameplayTaskSpawnActorDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        GameplayTaskSpawnActorDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GameplayTaskSpawnActorDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GameplayTaskSpawnActorDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): GameplayTaskSpawnActorDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): GameplayTaskSpawnActorDelegatePythonCallable
  }
}

@JsName("OnClaimedResourcesChangeSignature__PythonCallable")
public open external class OnClaimedResourcesChangeSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnClaimedResourcesChangeSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnClaimedResourcesChangeSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnClaimedResourcesChangeSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnClaimedResourcesChangeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnClaimedResourcesChangeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnClaimedResourcesChangeSignaturePythonCallable
  }
}

@JsName("GenericGameplayTaskDelegate__PythonCallable")
public open external class GenericGameplayTaskDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GenericGameplayTaskDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GenericGameplayTaskDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GenericGameplayTaskDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GenericGameplayTaskDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): GenericGameplayTaskDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): GenericGameplayTaskDelegatePythonCallable
  }
}

@JsName("TaskFinishDelegate__PythonCallable")
public open external class TaskFinishDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TaskFinishDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TaskFinishDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TaskFinishDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TaskFinishDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TaskFinishDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TaskFinishDelegatePythonCallable
  }
}

@JsName("TaskDelayDelegate__PythonCallable")
public open external class TaskDelayDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TaskDelayDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TaskDelayDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TaskDelayDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TaskDelayDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TaskDelayDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): TaskDelayDelegatePythonCallable
  }
}

@JsName("ActorPerceptionInfoUpdatedDelegate__PythonCallable")
public open external class ActorPerceptionInfoUpdatedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorPerceptionInfoUpdatedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorPerceptionInfoUpdatedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorPerceptionInfoUpdatedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorPerceptionInfoUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorPerceptionInfoUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorPerceptionInfoUpdatedDelegatePythonCallable
  }
}

@JsName("ActorPerceptionUpdatedDelegate__PythonCallable")
public open external class ActorPerceptionUpdatedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorPerceptionUpdatedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorPerceptionUpdatedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorPerceptionUpdatedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorPerceptionUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorPerceptionUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorPerceptionUpdatedDelegatePythonCallable
  }
}

@JsName("AIMoveCompletedSignature__PythonCallable")
public open external class AiMoveCompletedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AiMoveCompletedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AiMoveCompletedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AiMoveCompletedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AiMoveCompletedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): AiMoveCompletedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): AiMoveCompletedSignaturePythonCallable
  }
}

@JsName("MoveTaskCompletedSignature__PythonCallable")
public open external class MoveTaskCompletedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MoveTaskCompletedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MoveTaskCompletedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MoveTaskCompletedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MoveTaskCompletedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): MoveTaskCompletedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): MoveTaskCompletedSignaturePythonCallable
  }
}

@JsName("OAISimpleDelegate__PythonCallable")
public open external class OaiSimpleDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OaiSimpleDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OaiSimpleDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OaiSimpleDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OaiSimpleDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OaiSimpleDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OaiSimpleDelegatePythonCallable
  }
}

@JsName("PerceptionUpdatedDelegate__PythonCallable")
public open external class PerceptionUpdatedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PerceptionUpdatedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PerceptionUpdatedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PerceptionUpdatedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PerceptionUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PerceptionUpdatedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PerceptionUpdatedDelegatePythonCallable
  }
}

@JsName("SmartLinkReachedSignature__PythonCallable")
public open external class SmartLinkReachedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SmartLinkReachedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SmartLinkReachedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SmartLinkReachedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SmartLinkReachedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): SmartLinkReachedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): SmartLinkReachedSignaturePythonCallable
  }
}

@JsName("EQSQueryDoneSignature__PythonCallable")
public open external class EqsQueryDoneSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EqsQueryDoneSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EqsQueryDoneSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EqsQueryDoneSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EqsQueryDoneSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): EqsQueryDoneSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): EqsQueryDoneSignaturePythonCallable
  }
}

@JsName("HearNoiseDelegate__PythonCallable")
public open external class HearNoiseDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): HearNoiseDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): HearNoiseDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): HearNoiseDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): HearNoiseDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): HearNoiseDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): HearNoiseDelegatePythonCallable
  }
}

@JsName("SeePawnDelegate__PythonCallable")
public open external class SeePawnDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SeePawnDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SeePawnDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SeePawnDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SeePawnDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): SeePawnDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): SeePawnDelegatePythonCallable
  }
}

@JsName("OnNavDataGenericEvent__PythonCallable")
public open external class OnNavDataGenericEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNavDataGenericEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnNavDataGenericEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNavDataGenericEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNavDataGenericEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNavDataGenericEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNavDataGenericEventPythonCallable
  }
}

@JsName("OnNavigationPathUpdated__PythonCallable")
public open external class OnNavigationPathUpdatedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNavigationPathUpdatedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnNavigationPathUpdatedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNavigationPathUpdatedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNavigationPathUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNavigationPathUpdatedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNavigationPathUpdatedPythonCallable
  }
}

@JsName("GenerateWidgetForObject__PythonCallable")
public open external class GenerateWidgetForObjectPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GenerateWidgetForObjectPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GenerateWidgetForObjectPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GenerateWidgetForObjectPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GenerateWidgetForObjectPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GenerateWidgetForObjectPythonCallable

    @JsName("C")
    public fun copy(other: Any): GenerateWidgetForObjectPythonCallable
  }
}

@JsName("GenerateWidgetForString__PythonCallable")
public open external class GenerateWidgetForStringPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GenerateWidgetForStringPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GenerateWidgetForStringPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GenerateWidgetForStringPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GenerateWidgetForStringPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GenerateWidgetForStringPythonCallable

    @JsName("C")
    public fun copy(other: Any): GenerateWidgetForStringPythonCallable
  }
}

@JsName("GetBool__PythonCallable")
public open external class GetBoolPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetBoolPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetBoolPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetBoolPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetBoolPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetBoolPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetBoolPythonCallable
  }
}

@JsName("GetCheckBoxState__PythonCallable")
public open external class GetCheckBoxStatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetCheckBoxStatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetCheckBoxStatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetCheckBoxStatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetCheckBoxStatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetCheckBoxStatePythonCallable

    @JsName("C")
    public fun copy(other: Any): GetCheckBoxStatePythonCallable
  }
}

@JsName("GetFloat__PythonCallable")
public open external class GetFloatPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetFloatPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetFloatPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetFloatPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetFloatPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetFloatPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetFloatPythonCallable
  }
}

@JsName("GetInt32__PythonCallable")
public open external class GetInt32PythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetInt32PythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetInt32PythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetInt32PythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetInt32PythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetInt32PythonCallable

    @JsName("C")
    public fun copy(other: Any): GetInt32PythonCallable
  }
}

@JsName("GetLinearColor__PythonCallable")
public open external class GetLinearColorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetLinearColorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetLinearColorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetLinearColorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetLinearColorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetLinearColorPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetLinearColorPythonCallable
  }
}

@JsName("GetMouseCursor__PythonCallable")
public open external class GetMouseCursorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetMouseCursorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetMouseCursorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetMouseCursorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetMouseCursorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetMouseCursorPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetMouseCursorPythonCallable
  }
}

@JsName("GetSlateBrush__PythonCallable")
public open external class GetSlateBrushPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetSlateBrushPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetSlateBrushPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetSlateBrushPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetSlateBrushPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetSlateBrushPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetSlateBrushPythonCallable
  }
}

@JsName("GetSlateColor__PythonCallable")
public open external class GetSlateColorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetSlateColorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetSlateColorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetSlateColorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetSlateColorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetSlateColorPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetSlateColorPythonCallable
  }
}

@JsName("GetSlateVisibility__PythonCallable")
public open external class GetSlateVisibilityPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetSlateVisibilityPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetSlateVisibilityPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetSlateVisibilityPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetSlateVisibilityPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetSlateVisibilityPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetSlateVisibilityPythonCallable
  }
}

@JsName("GetText__PythonCallable")
public open external class GetTextPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetTextPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetTextPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetTextPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetTextPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetTextPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetTextPythonCallable
  }
}

@JsName("GetWidget__PythonCallable")
public open external class GetWidgetPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetWidgetPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetWidgetPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetWidgetPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetWidgetPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetWidgetPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetWidgetPythonCallable
  }
}

@JsName("OnPointerEvent__PythonCallable")
public open external class OnPointerEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPointerEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPointerEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPointerEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPointerEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPointerEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPointerEventPythonCallable
  }
}

@JsName("OnReply__PythonCallable")
public open external class OnReplyPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnReplyPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnReplyPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnReplyPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnReplyPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnReplyPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnReplyPythonCallable
  }
}

@JsName("CustomWidgetNavigationDelegate__PythonCallable")
public open external class CustomWidgetNavigationDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CustomWidgetNavigationDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        CustomWidgetNavigationDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CustomWidgetNavigationDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CustomWidgetNavigationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): CustomWidgetNavigationDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): CustomWidgetNavigationDelegatePythonCallable
  }
}

@JsName("GenerateWidgetEvent__PythonCallable")
public open external class GenerateWidgetEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GenerateWidgetEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GenerateWidgetEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GenerateWidgetEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GenerateWidgetEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GenerateWidgetEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): GenerateWidgetEventPythonCallable
  }
}

@JsName("OnOpeningEvent__PythonCallable")
public open external class OnOpeningEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnOpeningEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnOpeningEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnOpeningEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnOpeningEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnOpeningEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnOpeningEventPythonCallable
  }
}

@JsName("OnSelectionChangedEvent__PythonCallable")
public open external class OnSelectionChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSelectionChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSelectionChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSelectionChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSelectionChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSelectionChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSelectionChangedEventPythonCallable
  }
}

@JsName("OnEditableTextChangedEvent__PythonCallable")
public open external class OnEditableTextChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditableTextChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditableTextChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditableTextChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditableTextChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditableTextChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditableTextChangedEventPythonCallable
  }
}

@JsName("OnEditableTextCommittedEvent__PythonCallable")
public open external class OnEditableTextCommittedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditableTextCommittedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnEditableTextCommittedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditableTextCommittedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditableTextCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditableTextCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditableTextCommittedEventPythonCallable
  }
}

@JsName("OnEditableTextBoxChangedEvent__PythonCallable")
public open external class OnEditableTextBoxChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditableTextBoxChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnEditableTextBoxChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditableTextBoxChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditableTextBoxChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditableTextBoxChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditableTextBoxChangedEventPythonCallable
  }
}

@JsName("OnEditableTextBoxCommittedEvent__PythonCallable")
public open external class OnEditableTextBoxCommittedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditableTextBoxCommittedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnEditableTextBoxCommittedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditableTextBoxCommittedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditableTextBoxCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditableTextBoxCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditableTextBoxCommittedEventPythonCallable
  }
}

@JsName("OnIsSelectingKeyChanged__PythonCallable")
public open external class OnIsSelectingKeyChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnIsSelectingKeyChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnIsSelectingKeyChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnIsSelectingKeyChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnIsSelectingKeyChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnIsSelectingKeyChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnIsSelectingKeyChangedPythonCallable
  }
}

@JsName("OnKeySelected__PythonCallable")
public open external class OnKeySelectedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnKeySelectedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnKeySelectedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnKeySelectedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnKeySelectedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnKeySelectedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnKeySelectedPythonCallable
  }
}

@JsName("GetUserWidget__PythonCallable")
public open external class GetUserWidgetPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): GetUserWidgetPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): GetUserWidgetPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): GetUserWidgetPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): GetUserWidgetPythonCallable

    @JsName("C")
    public fun copy(other: UObject): GetUserWidgetPythonCallable

    @JsName("C")
    public fun copy(other: Any): GetUserWidgetPythonCallable
  }
}

@JsName("OnMenuOpenChangedEvent__PythonCallable")
public open external class OnMenuOpenChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMenuOpenChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMenuOpenChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMenuOpenChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMenuOpenChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMenuOpenChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMenuOpenChangedEventPythonCallable
  }
}

@JsName("DownloadImageDelegate__PythonCallable")
public open external class DownloadImageDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): DownloadImageDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): DownloadImageDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): DownloadImageDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): DownloadImageDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): DownloadImageDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): DownloadImageDelegatePythonCallable
  }
}

@JsName("OnButtonClickedEvent__PythonCallable")
public open external class OnButtonClickedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnButtonClickedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnButtonClickedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnButtonClickedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnButtonClickedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnButtonClickedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnButtonClickedEventPythonCallable
  }
}

@JsName("OnButtonHoverEvent__PythonCallable")
public open external class OnButtonHoverEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnButtonHoverEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnButtonHoverEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnButtonHoverEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnButtonHoverEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnButtonHoverEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnButtonHoverEventPythonCallable
  }
}

@JsName("OnButtonPressedEvent__PythonCallable")
public open external class OnButtonPressedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnButtonPressedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnButtonPressedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnButtonPressedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnButtonPressedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnButtonPressedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnButtonPressedEventPythonCallable
  }
}

@JsName("OnButtonReleasedEvent__PythonCallable")
public open external class OnButtonReleasedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnButtonReleasedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnButtonReleasedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnButtonReleasedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnButtonReleasedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnButtonReleasedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnButtonReleasedEventPythonCallable
  }
}

@JsName("OnCheckBoxComponentStateChanged__PythonCallable")
public open external class OnCheckBoxComponentStateChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnCheckBoxComponentStateChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnCheckBoxComponentStateChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnCheckBoxComponentStateChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnCheckBoxComponentStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnCheckBoxComponentStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnCheckBoxComponentStateChangedPythonCallable
  }
}

@JsName("OnConstructEvent__PythonCallable")
public open external class OnConstructEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnConstructEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnConstructEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnConstructEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnConstructEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnConstructEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnConstructEventPythonCallable
  }
}

@JsName("OnControllerCaptureBeginEvent__PythonCallable")
public open external class OnControllerCaptureBeginEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnControllerCaptureBeginEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnControllerCaptureBeginEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnControllerCaptureBeginEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnControllerCaptureBeginEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnControllerCaptureBeginEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnControllerCaptureBeginEventPythonCallable
  }
}

@JsName("OnControllerCaptureEndEvent__PythonCallable")
public open external class OnControllerCaptureEndEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnControllerCaptureEndEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnControllerCaptureEndEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnControllerCaptureEndEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnControllerCaptureEndEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnControllerCaptureEndEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnControllerCaptureEndEventPythonCallable
  }
}

@JsName("OnDragDropMulticast__PythonCallable")
public open external class OnDragDropMulticastPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDragDropMulticastPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDragDropMulticastPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDragDropMulticastPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDragDropMulticastPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDragDropMulticastPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDragDropMulticastPythonCallable
  }
}

@JsName("OnExpandableAreaExpansionChanged__PythonCallable")
public open external class OnExpandableAreaExpansionChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnExpandableAreaExpansionChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnExpandableAreaExpansionChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnExpandableAreaExpansionChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnExpandableAreaExpansionChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnExpandableAreaExpansionChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnExpandableAreaExpansionChangedPythonCallable
  }
}

@JsName("OnFloatValueChangedEvent__PythonCallable")
public open external class OnFloatValueChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnFloatValueChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnFloatValueChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnFloatValueChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnFloatValueChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnFloatValueChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnFloatValueChangedEventPythonCallable
  }
}

@JsName("OnGetItemChildrenDynamic__PythonCallable")
public open external class OnGetItemChildrenDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGetItemChildrenDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnGetItemChildrenDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGetItemChildrenDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGetItemChildrenDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGetItemChildrenDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGetItemChildrenDynamicPythonCallable
  }
}

@JsName("OnHoveredWidgetChanged__PythonCallable")
public open external class OnHoveredWidgetChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnHoveredWidgetChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnHoveredWidgetChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnHoveredWidgetChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnHoveredWidgetChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnHoveredWidgetChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnHoveredWidgetChangedPythonCallable
  }
}

@JsName("OnInputAction__PythonCallable")
public open external class OnInputActionPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInputActionPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInputActionPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInputActionPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInputActionPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInputActionPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInputActionPythonCallable
  }
}

@JsName("OnItemExpansionChangedDynamic__PythonCallable")
public open external class OnItemExpansionChangedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnItemExpansionChangedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnItemExpansionChangedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnItemExpansionChangedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnItemExpansionChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnItemExpansionChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnItemExpansionChangedDynamicPythonCallable
  }
}

@JsName("OnItemIsHoveredChangedDynamic__PythonCallable")
public open external class OnItemIsHoveredChangedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnItemIsHoveredChangedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnItemIsHoveredChangedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnItemIsHoveredChangedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnItemIsHoveredChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnItemIsHoveredChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnItemIsHoveredChangedDynamicPythonCallable
  }
}

@JsName("OnListEntryGeneratedDynamic__PythonCallable")
public open external class OnListEntryGeneratedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnListEntryGeneratedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnListEntryGeneratedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnListEntryGeneratedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnListEntryGeneratedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnListEntryGeneratedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnListEntryGeneratedDynamicPythonCallable
  }
}

@JsName("OnListEntryInitializedDynamic__PythonCallable")
public open external class OnListEntryInitializedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnListEntryInitializedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnListEntryInitializedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnListEntryInitializedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnListEntryInitializedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnListEntryInitializedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnListEntryInitializedDynamicPythonCallable
  }
}

@JsName("OnListEntryReleasedDynamic__PythonCallable")
public open external class OnListEntryReleasedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnListEntryReleasedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnListEntryReleasedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnListEntryReleasedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnListEntryReleasedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnListEntryReleasedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnListEntryReleasedDynamicPythonCallable
  }
}

@JsName("OnListItemScrolledIntoViewDynamic__PythonCallable")
public open external class OnListItemScrolledIntoViewDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnListItemScrolledIntoViewDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnListItemScrolledIntoViewDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnListItemScrolledIntoViewDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnListItemScrolledIntoViewDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnListItemScrolledIntoViewDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnListItemScrolledIntoViewDynamicPythonCallable
  }
}

@JsName("OnListItemSelectionChangedDynamic__PythonCallable")
public open external class OnListItemSelectionChangedDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnListItemSelectionChangedDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnListItemSelectionChangedDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnListItemSelectionChangedDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnListItemSelectionChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnListItemSelectionChangedDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnListItemSelectionChangedDynamicPythonCallable
  }
}

@JsName("OnMouseCaptureBeginEvent__PythonCallable")
public open external class OnMouseCaptureBeginEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMouseCaptureBeginEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMouseCaptureBeginEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMouseCaptureBeginEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMouseCaptureBeginEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMouseCaptureBeginEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMouseCaptureBeginEventPythonCallable
  }
}

@JsName("OnMouseCaptureEndEvent__PythonCallable")
public open external class OnMouseCaptureEndEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMouseCaptureEndEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMouseCaptureEndEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMouseCaptureEndEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMouseCaptureEndEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMouseCaptureEndEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMouseCaptureEndEventPythonCallable
  }
}

@JsName("OnUserScrolledEvent__PythonCallable")
public open external class OnUserScrolledEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnUserScrolledEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnUserScrolledEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnUserScrolledEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnUserScrolledEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnUserScrolledEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnUserScrolledEventPythonCallable
  }
}

@JsName("OnVisibilityChangedEvent__PythonCallable")
public open external class OnVisibilityChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnVisibilityChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnVisibilityChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnVisibilityChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnVisibilityChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnVisibilityChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnVisibilityChangedEventPythonCallable
  }
}

@JsName("OnWidgetAnimationPlaybackStatusChanged__PythonCallable")
public open external class OnWidgetAnimationPlaybackStatusChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnWidgetAnimationPlaybackStatusChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnWidgetAnimationPlaybackStatusChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnWidgetAnimationPlaybackStatusChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnWidgetAnimationPlaybackStatusChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnWidgetAnimationPlaybackStatusChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnWidgetAnimationPlaybackStatusChangedPythonCallable
  }
}

@JsName("SimpleListItemEventDynamic__PythonCallable")
public open external class SimpleListItemEventDynamicPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SimpleListItemEventDynamicPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SimpleListItemEventDynamicPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SimpleListItemEventDynamicPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SimpleListItemEventDynamicPythonCallable

    @JsName("C")
    public fun copy(other: UObject): SimpleListItemEventDynamicPythonCallable

    @JsName("C")
    public fun copy(other: Any): SimpleListItemEventDynamicPythonCallable
  }
}

@JsName("WidgetAnimationDynamicEvent__PythonCallable")
public open external class WidgetAnimationDynamicEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetAnimationDynamicEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetAnimationDynamicEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetAnimationDynamicEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetAnimationDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): WidgetAnimationDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): WidgetAnimationDynamicEventPythonCallable
  }
}

@JsName("WidgetAnimationDynamicEvents__PythonCallable")
public open external class WidgetAnimationDynamicEventsPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetAnimationDynamicEventsPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        WidgetAnimationDynamicEventsPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetAnimationDynamicEventsPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetAnimationDynamicEventsPythonCallable

    @JsName("C")
    public fun copy(other: UObject): WidgetAnimationDynamicEventsPythonCallable

    @JsName("C")
    public fun copy(other: Any): WidgetAnimationDynamicEventsPythonCallable
  }
}

@JsName("WidgetAnimationResult__PythonCallable")
public open external class WidgetAnimationResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WidgetAnimationResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WidgetAnimationResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WidgetAnimationResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WidgetAnimationResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): WidgetAnimationResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): WidgetAnimationResultPythonCallable
  }
}

@JsName("OnMultiLineEditableTextChangedEvent__PythonCallable")
public open external class OnMultiLineEditableTextChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMultiLineEditableTextChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMultiLineEditableTextChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMultiLineEditableTextChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMultiLineEditableTextChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMultiLineEditableTextChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMultiLineEditableTextChangedEventPythonCallable
  }
}

@JsName("OnMultiLineEditableTextCommittedEvent__PythonCallable")
public open external class OnMultiLineEditableTextCommittedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMultiLineEditableTextCommittedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMultiLineEditableTextCommittedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMultiLineEditableTextCommittedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMultiLineEditableTextCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMultiLineEditableTextCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMultiLineEditableTextCommittedEventPythonCallable
  }
}

@JsName("OnMultiLineEditableTextBoxChangedEvent__PythonCallable")
public open external class OnMultiLineEditableTextBoxChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMultiLineEditableTextBoxChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMultiLineEditableTextBoxChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMultiLineEditableTextBoxChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMultiLineEditableTextBoxChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMultiLineEditableTextBoxChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMultiLineEditableTextBoxChangedEventPythonCallable
  }
}

@JsName("OnMultiLineEditableTextBoxCommittedEvent__PythonCallable")
public open external class OnMultiLineEditableTextBoxCommittedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMultiLineEditableTextBoxCommittedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMultiLineEditableTextBoxCommittedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMultiLineEditableTextBoxCommittedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMultiLineEditableTextBoxCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMultiLineEditableTextBoxCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMultiLineEditableTextBoxCommittedEventPythonCallable
  }
}

@JsName("OnSpinBoxBeginSliderMovement__PythonCallable")
public open external class OnSpinBoxBeginSliderMovementPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSpinBoxBeginSliderMovementPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnSpinBoxBeginSliderMovementPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSpinBoxBeginSliderMovementPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSpinBoxBeginSliderMovementPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSpinBoxBeginSliderMovementPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSpinBoxBeginSliderMovementPythonCallable
  }
}

@JsName("OnSpinBoxValueChangedEvent__PythonCallable")
public open external class OnSpinBoxValueChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSpinBoxValueChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSpinBoxValueChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSpinBoxValueChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSpinBoxValueChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSpinBoxValueChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSpinBoxValueChangedEventPythonCallable
  }
}

@JsName("OnSpinBoxValueCommittedEvent__PythonCallable")
public open external class OnSpinBoxValueCommittedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSpinBoxValueCommittedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnSpinBoxValueCommittedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSpinBoxValueCommittedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSpinBoxValueCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSpinBoxValueCommittedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSpinBoxValueCommittedEventPythonCallable
  }
}

@JsName("OnGameWindowCloseButtonClickedDelegate__PythonCallable")
public open external class OnGameWindowCloseButtonClickedDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGameWindowCloseButtonClickedDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnGameWindowCloseButtonClickedDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGameWindowCloseButtonClickedDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGameWindowCloseButtonClickedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGameWindowCloseButtonClickedDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGameWindowCloseButtonClickedDelegatePythonCallable
  }
}

@JsName("OnNotifyReplaced__PythonCallable")
public open external class OnNotifyReplacedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNotifyReplacedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnNotifyReplacedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNotifyReplacedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNotifyReplacedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNotifyReplacedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNotifyReplacedPythonCallable
  }
}

@JsName("OnNotifyStateReplaced__PythonCallable")
public open external class OnNotifyStateReplacedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNotifyStateReplacedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnNotifyStateReplacedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNotifyStateReplacedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNotifyStateReplacedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNotifyStateReplacedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNotifyStateReplacedPythonCallable
  }
}

@JsName("OnMontagePlayDelegate__PythonCallable")
public open external class OnMontagePlayDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMontagePlayDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMontagePlayDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMontagePlayDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMontagePlayDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMontagePlayDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMontagePlayDelegatePythonCallable
  }
}

@JsName("MovieSceneActorPredictionFailure__PythonCallable")
public open external class MovieSceneActorPredictionFailurePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneActorPredictionFailurePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MovieSceneActorPredictionFailurePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneActorPredictionFailurePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneActorPredictionFailurePythonCallable

    @JsName("C")
    public fun copy(other: UObject): MovieSceneActorPredictionFailurePythonCallable

    @JsName("C")
    public fun copy(other: Any): MovieSceneActorPredictionFailurePythonCallable
  }
}

@JsName("MovieSceneActorPredictionResult__PythonCallable")
public open external class MovieSceneActorPredictionResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneActorPredictionResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        MovieSceneActorPredictionResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneActorPredictionResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneActorPredictionResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): MovieSceneActorPredictionResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): MovieSceneActorPredictionResultPythonCallable
  }
}

@JsName("OnMovieSceneSequencePlayerEvent__PythonCallable")
public open external class OnMovieSceneSequencePlayerEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMovieSceneSequencePlayerEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMovieSceneSequencePlayerEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMovieSceneSequencePlayerEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMovieSceneSequencePlayerEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMovieSceneSequencePlayerEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMovieSceneSequencePlayerEventPythonCallable
  }
}

@JsName("OnAudioDefaultDeviceChanged__PythonCallable")
public open external class OnAudioDefaultDeviceChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioDefaultDeviceChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioDefaultDeviceChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioDefaultDeviceChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioDefaultDeviceChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioDefaultDeviceChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioDefaultDeviceChangedPythonCallable
  }
}

@JsName("OnAudioDeviceChange__PythonCallable")
public open external class OnAudioDeviceChangePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioDeviceChangePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioDeviceChangePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioDeviceChangePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioDeviceChangePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioDeviceChangePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioDeviceChangePythonCallable
  }
}

@JsName("OnAudioDeviceStateChanged__PythonCallable")
public open external class OnAudioDeviceStateChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioDeviceStateChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAudioDeviceStateChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioDeviceStateChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioDeviceStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioDeviceStateChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioDeviceStateChangedPythonCallable
  }
}

@JsName("OnAudioOutputDevicesObtained__PythonCallable")
public open external class OnAudioOutputDevicesObtainedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAudioOutputDevicesObtainedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnAudioOutputDevicesObtainedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAudioOutputDevicesObtainedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAudioOutputDevicesObtainedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAudioOutputDevicesObtainedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAudioOutputDevicesObtainedPythonCallable
  }
}

@JsName("OnCompletedDeviceSwap__PythonCallable")
public open external class OnCompletedDeviceSwapPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnCompletedDeviceSwapPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnCompletedDeviceSwapPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnCompletedDeviceSwapPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnCompletedDeviceSwapPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnCompletedDeviceSwapPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnCompletedDeviceSwapPythonCallable
  }
}

@JsName("OnMainAudioOutputDeviceObtained__PythonCallable")
public open external class OnMainAudioOutputDeviceObtainedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMainAudioOutputDeviceObtainedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMainAudioOutputDeviceObtainedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMainAudioOutputDeviceObtainedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMainAudioOutputDeviceObtainedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMainAudioOutputDeviceObtainedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMainAudioOutputDeviceObtainedPythonCallable
  }
}

@JsName("OnSoundLoadComplete__PythonCallable")
public open external class OnSoundLoadCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSoundLoadCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSoundLoadCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSoundLoadCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSoundLoadCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSoundLoadCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSoundLoadCompletePythonCallable
  }
}

@JsName("OnSynthEnvelopeValue__PythonCallable")
public open external class OnSynthEnvelopeValuePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSynthEnvelopeValuePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSynthEnvelopeValuePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSynthEnvelopeValuePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSynthEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSynthEnvelopeValuePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSynthEnvelopeValuePythonCallable
  }
}

@JsName("OnMediaPlayerMediaEvent__PythonCallable")
public open external class OnMediaPlayerMediaEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMediaPlayerMediaEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMediaPlayerMediaEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMediaPlayerMediaEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMediaPlayerMediaEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMediaPlayerMediaEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMediaPlayerMediaEventPythonCallable
  }
}

@JsName("OnMediaPlayerMediaOpened__PythonCallable")
public open external class OnMediaPlayerMediaOpenedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMediaPlayerMediaOpenedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMediaPlayerMediaOpenedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMediaPlayerMediaOpenedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMediaPlayerMediaOpenedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMediaPlayerMediaOpenedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMediaPlayerMediaOpenedPythonCallable
  }
}

@JsName("OnMediaPlayerMediaOpenFailed__PythonCallable")
public open external class OnMediaPlayerMediaOpenFailedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMediaPlayerMediaOpenFailedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnMediaPlayerMediaOpenFailedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMediaPlayerMediaOpenFailedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMediaPlayerMediaOpenFailedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMediaPlayerMediaOpenFailedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMediaPlayerMediaOpenFailedPythonCallable
  }
}

@JsName("OnAssetPostImport_Dyn__PythonCallable")
public open external class OnAssetPostImportDynPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetPostImportDynPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetPostImportDynPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetPostImportDynPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetPostImportDynPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetPostImportDynPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetPostImportDynPythonCallable
  }
}

@JsName("OnAssetPostLODImport_Dyn__PythonCallable")
public open external class OnAssetPostLodImportDynPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetPostLodImportDynPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetPostLodImportDynPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetPostLodImportDynPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetPostLodImportDynPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetPostLodImportDynPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetPostLodImportDynPythonCallable
  }
}

@JsName("OnAssetPreImport_Dyn__PythonCallable")
public open external class OnAssetPreImportDynPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetPreImportDynPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetPreImportDynPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetPreImportDynPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetPreImportDynPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetPreImportDynPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetPreImportDynPythonCallable
  }
}

@JsName("OnAssetReimport_Dyn__PythonCallable")
public open external class OnAssetReimportDynPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAssetReimportDynPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAssetReimportDynPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAssetReimportDynPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAssetReimportDynPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAssetReimportDynPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAssetReimportDynPythonCallable
  }
}

@JsName("OnDeleteActorsBegin__PythonCallable")
public open external class OnDeleteActorsBeginPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDeleteActorsBeginPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDeleteActorsBeginPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDeleteActorsBeginPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDeleteActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDeleteActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDeleteActorsBeginPythonCallable
  }
}

@JsName("OnDeleteActorsEnd__PythonCallable")
public open external class OnDeleteActorsEndPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDeleteActorsEndPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDeleteActorsEndPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDeleteActorsEndPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDeleteActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDeleteActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDeleteActorsEndPythonCallable
  }
}

@JsName("OnDuplicateActorsBegin__PythonCallable")
public open external class OnDuplicateActorsBeginPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDuplicateActorsBeginPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDuplicateActorsBeginPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDuplicateActorsBeginPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDuplicateActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDuplicateActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDuplicateActorsBeginPythonCallable
  }
}

@JsName("OnDuplicateActorsEnd__PythonCallable")
public open external class OnDuplicateActorsEndPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnDuplicateActorsEndPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnDuplicateActorsEndPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnDuplicateActorsEndPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnDuplicateActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnDuplicateActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnDuplicateActorsEndPythonCallable
  }
}

@JsName("OnEditCopyActorsBegin__PythonCallable")
public open external class OnEditCopyActorsBeginPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditCopyActorsBeginPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditCopyActorsBeginPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditCopyActorsBeginPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditCopyActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditCopyActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditCopyActorsBeginPythonCallable
  }
}

@JsName("OnEditCopyActorsEnd__PythonCallable")
public open external class OnEditCopyActorsEndPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditCopyActorsEndPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditCopyActorsEndPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditCopyActorsEndPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditCopyActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditCopyActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditCopyActorsEndPythonCallable
  }
}

@JsName("OnEditCutActorsBegin__PythonCallable")
public open external class OnEditCutActorsBeginPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditCutActorsBeginPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditCutActorsBeginPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditCutActorsBeginPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditCutActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditCutActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditCutActorsBeginPythonCallable
  }
}

@JsName("OnEditCutActorsEnd__PythonCallable")
public open external class OnEditCutActorsEndPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditCutActorsEndPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditCutActorsEndPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditCutActorsEndPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditCutActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditCutActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditCutActorsEndPythonCallable
  }
}

@JsName("OnEditPasteActorsBegin__PythonCallable")
public open external class OnEditPasteActorsBeginPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditPasteActorsBeginPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditPasteActorsBeginPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditPasteActorsBeginPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditPasteActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditPasteActorsBeginPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditPasteActorsBeginPythonCallable
  }
}

@JsName("OnEditPasteActorsEnd__PythonCallable")
public open external class OnEditPasteActorsEndPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditPasteActorsEndPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditPasteActorsEndPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditPasteActorsEndPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditPasteActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditPasteActorsEndPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditPasteActorsEndPythonCallable
  }
}

@JsName("InstancePointDamageSignature__PythonCallable")
public open external class InstancePointDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InstancePointDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InstancePointDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InstancePointDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InstancePointDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InstancePointDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InstancePointDamageSignaturePythonCallable
  }
}

@JsName("InstanceRadialDamageSignature__PythonCallable")
public open external class InstanceRadialDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InstanceRadialDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        InstanceRadialDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InstanceRadialDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InstanceRadialDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): InstanceRadialDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): InstanceRadialDamageSignaturePythonCallable
  }
}

@JsName("OnImageWriteComplete__PythonCallable")
public open external class OnImageWriteCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnImageWriteCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnImageWriteCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnImageWriteCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnImageWriteCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnImageWriteCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnImageWriteCompletePythonCallable
  }
}

@JsName("OnNiagaraScriptCompilationComplete__PythonCallable")
public open external class OnNiagaraScriptCompilationCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNiagaraScriptCompilationCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnNiagaraScriptCompilationCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNiagaraScriptCompilationCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNiagaraScriptCompilationCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNiagaraScriptCompilationCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNiagaraScriptCompilationCompletePythonCallable
  }
}

@JsName("AchievementWriteDelegate__PythonCallable")
public open external class AchievementWriteDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AchievementWriteDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AchievementWriteDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AchievementWriteDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AchievementWriteDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): AchievementWriteDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): AchievementWriteDelegatePythonCallable
  }
}

@JsName("BlueprintFindSessionsResultDelegate__PythonCallable")
public open external class BlueprintFindSessionsResultDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): BlueprintFindSessionsResultDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        BlueprintFindSessionsResultDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): BlueprintFindSessionsResultDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): BlueprintFindSessionsResultDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): BlueprintFindSessionsResultDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): BlueprintFindSessionsResultDelegatePythonCallable
  }
}

@JsName("InAppPurchaseQuery2Result__PythonCallable")
public open external class InAppPurchaseQuery2ResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseQuery2ResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseQuery2ResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseQuery2ResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseQuery2ResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseQuery2ResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseQuery2ResultPythonCallable
  }
}

@JsName("InAppPurchaseQueryResult__PythonCallable")
public open external class InAppPurchaseQueryResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseQueryResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseQueryResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseQueryResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseQueryResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseQueryResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseQueryResultPythonCallable
  }
}

@JsName("InAppPurchaseRestoreResult2__PythonCallable")
public open external class InAppPurchaseRestoreResult2PythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseRestoreResult2PythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseRestoreResult2PythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseRestoreResult2PythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseRestoreResult2PythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreResult2PythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreResult2PythonCallable
  }
}

@JsName("InAppPurchaseRestoreResult__PythonCallable")
public open external class InAppPurchaseRestoreResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseRestoreResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseRestoreResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseRestoreResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseRestoreResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseRestoreResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseRestoreResultPythonCallable
  }
}

@JsName("InAppPurchaseResult2__PythonCallable")
public open external class InAppPurchaseResult2PythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseResult2PythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseResult2PythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseResult2PythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseResult2PythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseResult2PythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseResult2PythonCallable
  }
}

@JsName("InAppPurchaseResult__PythonCallable")
public open external class InAppPurchaseResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): InAppPurchaseResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): InAppPurchaseResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): InAppPurchaseResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): InAppPurchaseResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): InAppPurchaseResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): InAppPurchaseResultPythonCallable
  }
}

@JsName("LeaderboardQueryResult__PythonCallable")
public open external class LeaderboardQueryResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LeaderboardQueryResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LeaderboardQueryResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LeaderboardQueryResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LeaderboardQueryResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): LeaderboardQueryResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): LeaderboardQueryResultPythonCallable
  }
}

@JsName("OnLeaderboardFlushed__PythonCallable")
public open external class OnLeaderboardFlushedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnLeaderboardFlushedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnLeaderboardFlushedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnLeaderboardFlushedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnLeaderboardFlushedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnLeaderboardFlushedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnLeaderboardFlushedPythonCallable
  }
}

@JsName("OnlineConnectionResult__PythonCallable")
public open external class OnlineConnectionResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineConnectionResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineConnectionResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineConnectionResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineConnectionResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnlineConnectionResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnlineConnectionResultPythonCallable
  }
}

@JsName("OnlineLogoutResult__PythonCallable")
public open external class OnlineLogoutResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineLogoutResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineLogoutResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineLogoutResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineLogoutResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnlineLogoutResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnlineLogoutResultPythonCallable
  }
}

@JsName("OnlineShowLoginUIResult__PythonCallable")
public open external class OnlineShowLoginUiResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineShowLoginUiResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineShowLoginUiResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineShowLoginUiResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineShowLoginUiResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnlineShowLoginUiResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnlineShowLoginUiResultPythonCallable
  }
}

@JsName("OnlineTurnBasedMatchResult__PythonCallable")
public open external class OnlineTurnBasedMatchResultPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnlineTurnBasedMatchResultPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnlineTurnBasedMatchResultPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnlineTurnBasedMatchResultPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnlineTurnBasedMatchResultPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnlineTurnBasedMatchResultPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnlineTurnBasedMatchResultPythonCallable
  }
}

@JsName("OnNiagaraSystemFinished__PythonCallable")
public open external class OnNiagaraSystemFinishedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnNiagaraSystemFinishedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnNiagaraSystemFinishedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnNiagaraSystemFinishedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnNiagaraSystemFinishedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnNiagaraSystemFinishedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnNiagaraSystemFinishedPythonCallable
  }
}

@JsName("OnChaosPhysicsCollision__PythonCallable")
public open external class OnChaosPhysicsCollisionPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnChaosPhysicsCollisionPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnChaosPhysicsCollisionPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnChaosPhysicsCollisionPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnChaosPhysicsCollisionPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnChaosPhysicsCollisionPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnChaosPhysicsCollisionPythonCallable
  }
}

@JsName("OnLevelSequenceLoaded__PythonCallable")
public open external class OnLevelSequenceLoadedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnLevelSequenceLoadedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnLevelSequenceLoadedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnLevelSequenceLoadedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnLevelSequenceLoadedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnLevelSequenceLoadedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnLevelSequenceLoadedPythonCallable
  }
}

@JsName("OnLevelSequencePlayerCameraCutEvent__PythonCallable")
public open external class OnLevelSequencePlayerCameraCutEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnLevelSequencePlayerCameraCutEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnLevelSequencePlayerCameraCutEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnLevelSequencePlayerCameraCutEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnLevelSequencePlayerCameraCutEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnLevelSequencePlayerCameraCutEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnLevelSequencePlayerCameraCutEventPythonCallable
  }
}

@JsName("OnPropertyValueChanged__PythonCallable")
public open external class OnPropertyValueChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnPropertyValueChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnPropertyValueChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnPropertyValueChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnPropertyValueChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnPropertyValueChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnPropertyValueChangedPythonCallable
  }
}

@JsName("FunctionalTestAISpawned__PythonCallable")
public open external class FunctionalTestAiSpawnedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FunctionalTestAiSpawnedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): FunctionalTestAiSpawnedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestAiSpawnedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestAiSpawnedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestAiSpawnedPythonCallable

    @JsName("C")
    public fun copy(other: Any): FunctionalTestAiSpawnedPythonCallable
  }
}

@JsName("FunctionalTestEventSignature__PythonCallable")
public open external class FunctionalTestEventSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FunctionalTestEventSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        FunctionalTestEventSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FunctionalTestEventSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FunctionalTestEventSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): FunctionalTestEventSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): FunctionalTestEventSignaturePythonCallable
  }
}

@JsName("FlipbookFinishedPlaySignature__PythonCallable")
public open external class FlipbookFinishedPlaySignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): FlipbookFinishedPlaySignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        FlipbookFinishedPlaySignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): FlipbookFinishedPlaySignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): FlipbookFinishedPlaySignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): FlipbookFinishedPlaySignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): FlipbookFinishedPlaySignaturePythonCallable
  }
}

@JsName("AsyncDelayComplete__PythonCallable")
public open external class AsyncDelayCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncDelayCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AsyncDelayCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncDelayCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncDelayCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): AsyncDelayCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): AsyncDelayCompletePythonCallable
  }
}

@JsName("AsyncEditorWaitForGameWorldEvent__PythonCallable")
public open external class AsyncEditorWaitForGameWorldEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AsyncEditorWaitForGameWorldEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        AsyncEditorWaitForGameWorldEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AsyncEditorWaitForGameWorldEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AsyncEditorWaitForGameWorldEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): AsyncEditorWaitForGameWorldEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): AsyncEditorWaitForGameWorldEventPythonCallable
  }
}

@JsName("ForEachActorIteratorSignature__PythonCallable")
public open external class ForEachActorIteratorSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ForEachActorIteratorSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ForEachActorIteratorSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ForEachActorIteratorSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ForEachActorIteratorSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ForEachActorIteratorSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ForEachActorIteratorSignaturePythonCallable
  }
}

@JsName("ForEachAssetIteratorSignature__PythonCallable")
public open external class ForEachAssetIteratorSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ForEachAssetIteratorSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ForEachAssetIteratorSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ForEachAssetIteratorSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ForEachAssetIteratorSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ForEachAssetIteratorSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ForEachAssetIteratorSignaturePythonCallable
  }
}

@JsName("OnAsyncCaptureSceneComplete__PythonCallable")
public open external class OnAsyncCaptureSceneCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnAsyncCaptureSceneCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnAsyncCaptureSceneCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnAsyncCaptureSceneCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnAsyncCaptureSceneCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnAsyncCaptureSceneCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnAsyncCaptureSceneCompletePythonCallable
  }
}

@JsName("OnEditorUtilityPIEEvent__PythonCallable")
public open external class OnEditorUtilityPieEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditorUtilityPieEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnEditorUtilityPieEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditorUtilityPieEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditorUtilityPieEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditorUtilityPieEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditorUtilityPieEventPythonCallable
  }
}

@JsName("OnEditorUtilityTaskDynamicDelegate__PythonCallable")
public open external class OnEditorUtilityTaskDynamicDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnEditorUtilityTaskDynamicDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        OnEditorUtilityTaskDynamicDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnEditorUtilityTaskDynamicDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnEditorUtilityTaskDynamicDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnEditorUtilityTaskDynamicDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnEditorUtilityTaskDynamicDelegatePythonCallable
  }
}

@JsName("OnExportImageAsyncComplete__PythonCallable")
public open external class OnExportImageAsyncCompletePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnExportImageAsyncCompletePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnExportImageAsyncCompletePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnExportImageAsyncCompletePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnExportImageAsyncCompletePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnExportImageAsyncCompletePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnExportImageAsyncCompletePythonCallable
  }
}

@JsName("RigVMGraphModifiedDynamicEvent__PythonCallable")
public open external class RigVmGraphModifiedDynamicEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): RigVmGraphModifiedDynamicEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        RigVmGraphModifiedDynamicEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): RigVmGraphModifiedDynamicEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): RigVmGraphModifiedDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): RigVmGraphModifiedDynamicEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): RigVmGraphModifiedDynamicEventPythonCallable
  }
}

@JsName("ControlRigComponentDelegate__PythonCallable")
public open external class ControlRigComponentDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ControlRigComponentDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ControlRigComponentDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ControlRigComponentDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ControlRigComponentDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ControlRigComponentDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): ControlRigComponentDelegatePythonCallable
  }
}

@JsName("PyTestDelegate__PythonCallable")
public open external class PyTestDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PyTestDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PyTestDelegatePythonCallable
  }
}

@JsName("PyTestMulticastDelegate__PythonCallable")
public open external class PyTestMulticastDelegatePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PyTestMulticastDelegatePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PyTestMulticastDelegatePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PyTestMulticastDelegatePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PyTestMulticastDelegatePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PyTestMulticastDelegatePythonCallable

    @JsName("C")
    public fun copy(other: Any): PyTestMulticastDelegatePythonCallable
  }
}

@JsName("ActorComponentDeactivateSignature__PythonCallable")
public open external class ActorComponentDeactivateSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorComponentDeactivateSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorComponentDeactivateSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorComponentDeactivateSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorComponentDeactivateSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorComponentDeactivateSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorComponentDeactivateSignaturePythonCallable
  }
}

@JsName("ActorComponentActivatedSignature__PythonCallable")
public open external class ActorComponentActivatedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorComponentActivatedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorComponentActivatedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorComponentActivatedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorComponentActivatedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorComponentActivatedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorComponentActivatedSignaturePythonCallable
  }
}

@JsName("ActorBeginCursorOverSignature__PythonCallable")
public open external class ActorBeginCursorOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorBeginCursorOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorBeginCursorOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorBeginCursorOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorBeginCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorBeginCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorBeginCursorOverSignaturePythonCallable
  }
}

@JsName("ActorBeginOverlapSignature__PythonCallable")
public open external class ActorBeginOverlapSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorBeginOverlapSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorBeginOverlapSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorBeginOverlapSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorBeginOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorBeginOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorBeginOverlapSignaturePythonCallable
  }
}

@JsName("ActorBeginTouchOverSignature__PythonCallable")
public open external class ActorBeginTouchOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorBeginTouchOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorBeginTouchOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorBeginTouchOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorBeginTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorBeginTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorBeginTouchOverSignaturePythonCallable
  }
}

@JsName("ActorDestroyedSignature__PythonCallable")
public open external class ActorDestroyedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorDestroyedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorDestroyedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorDestroyedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorDestroyedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorDestroyedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorDestroyedSignaturePythonCallable
  }
}

@JsName("ActorEndCursorOverSignature__PythonCallable")
public open external class ActorEndCursorOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorEndCursorOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorEndCursorOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorEndCursorOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorEndCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorEndCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorEndCursorOverSignaturePythonCallable
  }
}

@JsName("ActorEndOverlapSignature__PythonCallable")
public open external class ActorEndOverlapSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorEndOverlapSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorEndOverlapSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorEndOverlapSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorEndOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorEndOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorEndOverlapSignaturePythonCallable
  }
}

@JsName("ActorEndPlaySignature__PythonCallable")
public open external class ActorEndPlaySignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorEndPlaySignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorEndPlaySignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorEndPlaySignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorEndPlaySignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorEndPlaySignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorEndPlaySignaturePythonCallable
  }
}

@JsName("ActorEndTouchOverSignature__PythonCallable")
public open external class ActorEndTouchOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorEndTouchOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorEndTouchOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorEndTouchOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorEndTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorEndTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorEndTouchOverSignaturePythonCallable
  }
}

@JsName("ActorHitSignature__PythonCallable")
public open external class ActorHitSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorHitSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorHitSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorHitSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorHitSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorHitSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorHitSignaturePythonCallable
  }
}

@JsName("ActorOnClickedSignature__PythonCallable")
public open external class ActorOnClickedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorOnClickedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorOnClickedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorOnClickedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorOnClickedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorOnClickedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorOnClickedSignaturePythonCallable
  }
}

@JsName("ActorOnInputTouchBeginSignature__PythonCallable")
public open external class ActorOnInputTouchBeginSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorOnInputTouchBeginSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorOnInputTouchBeginSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorOnInputTouchBeginSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorOnInputTouchBeginSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorOnInputTouchBeginSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorOnInputTouchBeginSignaturePythonCallable
  }
}

@JsName("ActorOnInputTouchEndSignature__PythonCallable")
public open external class ActorOnInputTouchEndSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorOnInputTouchEndSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ActorOnInputTouchEndSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorOnInputTouchEndSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorOnInputTouchEndSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorOnInputTouchEndSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorOnInputTouchEndSignaturePythonCallable
  }
}

@JsName("ActorOnReleasedSignature__PythonCallable")
public open external class ActorOnReleasedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorOnReleasedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorOnReleasedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorOnReleasedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorOnReleasedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ActorOnReleasedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ActorOnReleasedSignaturePythonCallable
  }
}

@JsName("ComponentBeginCursorOverSignature__PythonCallable")
public open external class ComponentBeginCursorOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentBeginCursorOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentBeginCursorOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentBeginCursorOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentBeginCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentBeginCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentBeginCursorOverSignaturePythonCallable
  }
}

@JsName("ComponentBeginOverlapSignature__PythonCallable")
public open external class ComponentBeginOverlapSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentBeginOverlapSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentBeginOverlapSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentBeginOverlapSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentBeginOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentBeginOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentBeginOverlapSignaturePythonCallable
  }
}

@JsName("ComponentBeginTouchOverSignature__PythonCallable")
public open external class ComponentBeginTouchOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentBeginTouchOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentBeginTouchOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentBeginTouchOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentBeginTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentBeginTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentBeginTouchOverSignaturePythonCallable
  }
}

@JsName("ComponentCollisionSettingsChangedSignature__PythonCallable")
public open external class ComponentCollisionSettingsChangedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentCollisionSettingsChangedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentCollisionSettingsChangedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentCollisionSettingsChangedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentCollisionSettingsChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentCollisionSettingsChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentCollisionSettingsChangedSignaturePythonCallable
  }
}

@JsName("ComponentEndCursorOverSignature__PythonCallable")
public open external class ComponentEndCursorOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentEndCursorOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentEndCursorOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentEndCursorOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentEndCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentEndCursorOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentEndCursorOverSignaturePythonCallable
  }
}

@JsName("ComponentEndOverlapSignature__PythonCallable")
public open external class ComponentEndOverlapSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentEndOverlapSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentEndOverlapSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentEndOverlapSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentEndOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentEndOverlapSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentEndOverlapSignaturePythonCallable
  }
}

@JsName("ComponentEndTouchOverSignature__PythonCallable")
public open external class ComponentEndTouchOverSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentEndTouchOverSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentEndTouchOverSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentEndTouchOverSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentEndTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentEndTouchOverSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentEndTouchOverSignaturePythonCallable
  }
}

@JsName("ComponentHitSignature__PythonCallable")
public open external class ComponentHitSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentHitSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ComponentHitSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentHitSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentHitSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentHitSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentHitSignaturePythonCallable
  }
}

@JsName("ComponentOnClickedSignature__PythonCallable")
public open external class ComponentOnClickedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentOnClickedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ComponentOnClickedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentOnClickedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentOnClickedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentOnClickedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentOnClickedSignaturePythonCallable
  }
}

@JsName("ComponentOnInputTouchBeginSignature__PythonCallable")
public open external class ComponentOnInputTouchBeginSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentOnInputTouchBeginSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentOnInputTouchBeginSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentOnInputTouchBeginSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentOnInputTouchBeginSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentOnInputTouchBeginSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentOnInputTouchBeginSignaturePythonCallable
  }
}

@JsName("ComponentOnInputTouchEndSignature__PythonCallable")
public open external class ComponentOnInputTouchEndSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentOnInputTouchEndSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentOnInputTouchEndSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentOnInputTouchEndSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentOnInputTouchEndSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentOnInputTouchEndSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentOnInputTouchEndSignaturePythonCallable
  }
}

@JsName("ComponentOnReleasedSignature__PythonCallable")
public open external class ComponentOnReleasedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentOnReleasedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        ComponentOnReleasedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentOnReleasedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentOnReleasedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentOnReleasedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentOnReleasedSignaturePythonCallable
  }
}

@JsName("ComponentSleepSignature__PythonCallable")
public open external class ComponentSleepSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentSleepSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ComponentSleepSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentSleepSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentSleepSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentSleepSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentSleepSignaturePythonCallable
  }
}

@JsName("ComponentWakeSignature__PythonCallable")
public open external class ComponentWakeSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ComponentWakeSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ComponentWakeSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ComponentWakeSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ComponentWakeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): ComponentWakeSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): ComponentWakeSignaturePythonCallable
  }
}

@JsName("IsRootComponentChanged__PythonCallable")
public open external class IsRootComponentChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IsRootComponentChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IsRootComponentChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IsRootComponentChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IsRootComponentChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): IsRootComponentChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): IsRootComponentChangedPythonCallable
  }
}

@JsName("PawnControllerChangedSignature__PythonCallable")
public open external class PawnControllerChangedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PawnControllerChangedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        PawnControllerChangedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PawnControllerChangedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PawnControllerChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PawnControllerChangedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): PawnControllerChangedSignaturePythonCallable
  }
}

@JsName("PawnRestartedSignature__PythonCallable")
public open external class PawnRestartedSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PawnRestartedSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PawnRestartedSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PawnRestartedSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PawnRestartedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): PawnRestartedSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): PawnRestartedSignaturePythonCallable
  }
}

@JsName("PhysicsVolumeChanged__PythonCallable")
public open external class PhysicsVolumeChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): PhysicsVolumeChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): PhysicsVolumeChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): PhysicsVolumeChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): PhysicsVolumeChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): PhysicsVolumeChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): PhysicsVolumeChangedPythonCallable
  }
}

@JsName("TakeAnyDamageSignature__PythonCallable")
public open external class TakeAnyDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TakeAnyDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TakeAnyDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TakeAnyDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TakeAnyDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TakeAnyDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): TakeAnyDamageSignaturePythonCallable
  }
}

@JsName("TakePointDamageSignature__PythonCallable")
public open external class TakePointDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TakePointDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TakePointDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TakePointDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TakePointDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TakePointDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): TakePointDamageSignaturePythonCallable
  }
}

@JsName("TakeRadialDamageSignature__PythonCallable")
public open external class TakeRadialDamageSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TakeRadialDamageSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TakeRadialDamageSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TakeRadialDamageSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TakeRadialDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): TakeRadialDamageSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): TakeRadialDamageSignaturePythonCallable
  }
}

public open external class ActorFactoryNiagara(
  outer: UObject,
) : ActorFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorFactoryNiagara

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorFactoryNiagara

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorFactoryNiagara

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorFactoryNiagara

    @JsName("C")
    public fun copy(other: UObject): ActorFactoryNiagara

    @JsName("C")
    public fun copy(other: Any): ActorFactoryNiagara
  }
}

@JsName("EdGraphSchema_Niagara")
public open external class EdGraphSchemaNiagara(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphSchemaNiagara

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphSchemaNiagara

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphSchemaNiagara

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphSchemaNiagara

    @JsName("C")
    public fun copy(other: UObject): EdGraphSchemaNiagara

    @JsName("C")
    public fun copy(other: Any): EdGraphSchemaNiagara
  }
}

@JsName("EdGraphSchema_NiagaraSystemOverview")
public open external class EdGraphSchemaNiagaraSystemOverview(
  outer: UObject,
) : EdGraphSchema {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EdGraphSchemaNiagaraSystemOverview

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EdGraphSchemaNiagaraSystemOverview

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EdGraphSchemaNiagaraSystemOverview

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EdGraphSchemaNiagaraSystemOverview

    @JsName("C")
    public fun copy(other: UObject): EdGraphSchemaNiagaraSystemOverview

    @JsName("C")
    public fun copy(other: Any): EdGraphSchemaNiagaraSystemOverview
  }
}

public open external class MovieSceneNiagaraEmitterSectionBase(
  outer: UObject,
) : MovieSceneSection {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraEmitterSectionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraEmitterSectionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraEmitterSectionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraEmitterSectionBase

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraEmitterSectionBase

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraEmitterSectionBase
  }
}

public open external class MovieSceneNiagaraEmitterSection(
  outer: UObject,
) : MovieSceneNiagaraEmitterSectionBase {
  @JsName("NumLoops")
  public open var numLoops: Number

  @JsName("bStartTimeIncludedInFirstLoopOnly")
  public open var startTimeIncludedInFirstLoopOnly: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraEmitterSection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraEmitterSection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraEmitterSection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraEmitterSection

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraEmitterSection

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraEmitterSection
  }
}

public open external class MovieSceneNiagaraEmitterTrack(
  outer: UObject,
) : MovieSceneNameableTrack {
  @JsName("Sections")
  public open var sections: Array<MovieSceneSection>

  @JsName("bSectionsWereModified")
  public open var sectionsWereModified: Boolean

  @JsName("EmitterHandleId")
  public open var emitterHandleId: Guid

  @JsName("SystemPath")
  public open var systemPath: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MovieSceneNiagaraEmitterTrack

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MovieSceneNiagaraEmitterTrack

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MovieSceneNiagaraEmitterTrack

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MovieSceneNiagaraEmitterTrack

    @JsName("C")
    public fun copy(other: UObject): MovieSceneNiagaraEmitterTrack

    @JsName("C")
    public fun copy(other: Any): MovieSceneNiagaraEmitterTrack
  }
}

@JsName("ENiagaraClipboardFunctionInputValueMode")
public external object NiagaraClipboardFunctionInputValueMode {
  public var Local: String

  public var Linked: String

  public var Data: String

  public var Expression: String

  public var Dynamic: String

  @JsName("ENiagaraClipboardFunctionInputValueMode_MAX")
  public var Max: String
}

@JsName("ENiagaraClipboardFunctionScriptMode")
public external object NiagaraClipboardFunctionScriptMode {
  public var ScriptAsset: String

  public var Assignment: String

  @JsName("ENiagaraClipboardFunctionScriptMode_MAX")
  public var Max: String
}

public open external class NiagaraNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("ChangeId")
  public open var changeId: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNode

    @JsName("C")
    public fun copy(other: UObject): NiagaraNode

    @JsName("C")
    public fun copy(other: Any): NiagaraNode
  }
}

public open external class NiagaraNodeWithDynamicPins(
  outer: UObject,
) : NiagaraNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeWithDynamicPins

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeWithDynamicPins

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeWithDynamicPins

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeWithDynamicPins

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeWithDynamicPins

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeWithDynamicPins
  }
}

public open external class NiagaraPropagatedVariable {
  @JsName("SwitchParameter")
  public open var switchParameter: NiagaraVariable

  @JsName("PropagatedName")
  public open var propagatedName: String

  public open fun clone(): NiagaraPropagatedVariable

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraPropagatedVariable

    @JsName("C")
    public fun copy(other: Any): NiagaraPropagatedVariable
  }
}

@JsName("ENiagaraFunctionDebugState")
public external object NiagaraFunctionDebugState {
  public var NoDebug: String

  public var Basic: String

  @JsName("ENiagaraFunctionDebugState_MAX")
  public var Max: String
}

@JsName("ENiagaraMessageSeverity")
public external object NiagaraMessageSeverity {
  public var CriticalError: String

  public var Error: String

  public var PerformanceWarning: String

  public var Warning: String

  public var Info: String

  public var CustomNote: String

  @JsName("ENiagaraMessageSeverity_MAX")
  public var Max: String
}

public open external class NiagaraStackMessage {
  @JsName("MessageText")
  public open var messageText: String

  @JsName("ShortDescription")
  public open var shortDescription: String

  @JsName("MessageSeverity")
  public open var messageSeverity: String

  @JsName("bAllowDismissal")
  public open var allowDismissal: Boolean

  @JsName("Guid")
  public open var guid: Guid

  public open fun clone(): NiagaraStackMessage

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraStackMessage

    @JsName("C")
    public fun copy(other: Any): NiagaraStackMessage
  }
}

public open external class NiagaraNodeFunctionCall(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("FunctionScript")
  public open var functionScript: NiagaraScript

  @JsName("SelectedScriptVersion")
  public open var selectedScriptVersion: Guid

  @JsName("FunctionScriptAssetObjectPath")
  public open var functionScriptAssetObjectPath: String

  @JsName("Signature")
  public open var signature: NiagaraFunctionSignature

  @JsName("FunctionSpecifiers")
  public open var functionSpecifiers: Any

  @JsName("PropagatedStaticSwitchParameters")
  public open var propagatedStaticSwitchParameters: Array<NiagaraPropagatedVariable>

  @JsName("PreviousScriptVersion")
  public open var previousScriptVersion: Guid

  @JsName("PythonUpgradeScriptWarnings")
  public open var pythonUpgradeScriptWarnings: String

  @JsName("DebugState")
  public open var debugState: String

  @JsName("bInheritDebugStatus")
  public open var inheritDebugStatus: Boolean

  @JsName("CachedChangeId")
  public open var cachedChangeId: Guid

  @JsName("InvalidScriptVersionReference")
  public open var invalidScriptVersionReference: Guid

  @JsName("FunctionDisplayName")
  public open var functionDisplayName: String

  @JsName("MessageKeyToMessageMap")
  public open var messageKeyToMessageMap: Any

  @JsName("StackMessages")
  public open var stackMessages: Array<NiagaraStackMessage>

  @JsName("BoundPinNames")
  public open var boundPinNames: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeFunctionCall

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeFunctionCall

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeFunctionCall

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeFunctionCall

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeFunctionCall

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeFunctionCall
  }
}

public open external class NiagaraClipboardFunction(
  outer: UObject,
) : UObject {
  @JsName("FunctionName")
  public open var functionName: String

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("ScriptMode")
  public open var scriptMode: String

  @JsName("Script")
  public open var script: NiagaraScript

  @JsName("AssignmentTargets")
  public open var assignmentTargets: Array<NiagaraVariable>

  @JsName("AssignmentDefaults")
  public open var assignmentDefaults: Array<String>

  @JsName("Inputs")
  public open var inputs: Array<NiagaraClipboardFunctionInput>

  @JsName("OnPastedFunctionCallNodeDelegate")
  public open var onPastedFunctionCallNodeDelegate:
      UnrealEngineDelegate<(PastedFunctionCall: NiagaraNodeFunctionCall) -> Unit>

  @JsName("ScriptVersion")
  public open var scriptVersion: Guid

  @JsName("Messages")
  public open var messages: Array<NiagaraStackMessage>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraClipboardFunction

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraClipboardFunction

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraClipboardFunction

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraClipboardFunction

    @JsName("C")
    public fun copy(other: UObject): NiagaraClipboardFunction

    @JsName("C")
    public fun copy(other: Any): NiagaraClipboardFunction
  }
}

public open external class NiagaraClipboardFunctionInput(
  outer: UObject,
) : UObject {
  @JsName("InputName")
  public open var inputName: String

  @JsName("InputType")
  public open var inputType: NiagaraTypeDefinition

  @JsName("bHasEditCondition")
  public open var hasEditCondition: Boolean

  @JsName("bEditConditionValue")
  public open var editConditionValue: Boolean

  @JsName("ValueMode")
  public open var valueMode: String

  @JsName("Local")
  public open var local: Array<Number>

  @JsName("Linked")
  public open var linked: String

  @JsName("Data")
  public open var data: NiagaraDataInterface

  @JsName("Expression")
  public open var expression: String

  @JsName("Dynamic")
  public open var dynamic: NiagaraClipboardFunction

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraClipboardFunctionInput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraClipboardFunctionInput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraClipboardFunctionInput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraClipboardFunctionInput

    @JsName("C")
    public fun copy(other: UObject): NiagaraClipboardFunctionInput

    @JsName("C")
    public fun copy(other: Any): NiagaraClipboardFunctionInput
  }
}

@JsName("ENiagaraDefaultMode")
public external object NiagaraDefaultMode {
  public var Value: String

  public var Binding: String

  public var Custom: String

  public var FailIfPreviouslyNotSet: String

  @JsName("ENiagaraDefaultMode_MAX")
  public var Max: String
}

public open external class NiagaraScriptVariableBinding {
  @JsName("Name")
  public open var name: String

  public open fun clone(): NiagaraScriptVariableBinding

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraScriptVariableBinding

    @JsName("C")
    public fun copy(other: Any): NiagaraScriptVariableBinding
  }
}

public open external class NiagaraEnumParameterMetaData {
  @JsName("OverrideName")
  public open var overrideName: String

  @JsName("IconOverride")
  public open var iconOverride: Texture2d

  @JsName("bUseColorOverride")
  public open var useColorOverride: Boolean

  @JsName("ColorOverride")
  public open var colorOverride: LinearColor

  public open fun clone(): NiagaraEnumParameterMetaData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraEnumParameterMetaData

    @JsName("C")
    public fun copy(other: Any): NiagaraEnumParameterMetaData
  }
}

@JsName("ENiagaraBoolDisplayMode")
public external object NiagaraBoolDisplayMode {
  @JsName("DisplayAlways")
  public var Always: String

  @JsName("DisplayIfTrue")
  public var IfTrue: String

  @JsName("DisplayIfFalse")
  public var IfFalse: String

  @JsName("ENiagaraBoolDisplayMode_MAX")
  public var Max: String
}

public open external class NiagaraBoolParameterMetaData {
  @JsName("DisplayMode")
  public open var displayMode: String

  @JsName("OverrideNameTrue")
  public open var overrideNameTrue: String

  @JsName("OverrideNameFalse")
  public open var overrideNameFalse: String

  @JsName("IconOverrideTrue")
  public open var iconOverrideTrue: Texture2d

  @JsName("IconOverrideFalse")
  public open var iconOverrideFalse: Texture2d

  public open fun clone(): NiagaraBoolParameterMetaData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraBoolParameterMetaData

    @JsName("C")
    public fun copy(other: Any): NiagaraBoolParameterMetaData
  }
}

public open external class NiagaraInputConditionMetadata {
  @JsName("InputName")
  public open var inputName: String

  @JsName("TargetValues")
  public open var targetValues: Array<String>

  public open fun clone(): NiagaraInputConditionMetadata

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraInputConditionMetadata

    @JsName("C")
    public fun copy(other: Any): NiagaraInputConditionMetadata
  }
}

public open external class NiagaraVariableMetaData {
  @JsName("Description")
  public open var description: String

  @JsName("CategoryName")
  public open var categoryName: String

  @JsName("bAdvancedDisplay")
  public open var advancedDisplay: Boolean

  @JsName("bDisplayInOverviewStack")
  public open var displayInOverviewStack: Boolean

  @JsName("InlineParameterSortPriority")
  public open var inlineParameterSortPriority: Number

  @JsName("bOverrideColor")
  public open var overrideColor: Boolean

  @JsName("InlineParameterColorOverride")
  public open var inlineParameterColorOverride: LinearColor

  @JsName("InlineParameterEnumOverrides")
  public open var inlineParameterEnumOverrides: Array<NiagaraEnumParameterMetaData>

  @JsName("bEnableBoolOverride")
  public open var enableBoolOverride: Boolean

  @JsName("InlineParameterBoolOverride")
  public open var inlineParameterBoolOverride: NiagaraBoolParameterMetaData

  @JsName("EditorSortPriority")
  public open var editorSortPriority: Number

  @JsName("bInlineEditConditionToggle")
  public open var inlineEditConditionToggle: Boolean

  public open var editcondition: NiagaraInputConditionMetadata

  @JsName("VisibleCondition")
  public open var visibleCondition: NiagaraInputConditionMetadata

  @JsName("PropertyMetaData")
  public open var propertyMetaData: Any

  @JsName("ParentAttribute")
  public open var parentAttribute: String

  @JsName("VariableGuid")
  public open var variableGuid: Guid

  @JsName("bIsStaticSwitch")
  public open var isStaticSwitch: Boolean

  @JsName("StaticSwitchDefaultValue")
  public open var staticSwitchDefaultValue: Number

  public open fun clone(): NiagaraVariableMetaData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraVariableMetaData

    @JsName("C")
    public fun copy(other: Any): NiagaraVariableMetaData
  }
}

@JsName("ENiagaraVariantMode")
public external object NiagaraVariantMode {
  public var None: String

  public var Object: String

  public var DataInterface: String

  public var Bytes: String

  @JsName("ENiagaraVariantMode_MAX")
  public var Max: String
}

public open external class NiagaraVariant {
  @JsName("UObject")
  public open var uObject: UObject

  @JsName("DataInterface")
  public open var dataInterface: NiagaraDataInterface

  @JsName("Bytes")
  public open var bytes: Array<Number>

  @JsName("CurrentMode")
  public open var currentMode: String

  public open fun clone(): NiagaraVariant

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraVariant

    @JsName("C")
    public fun copy(other: Any): NiagaraVariant
  }
}

public open external class NiagaraScriptVariable(
  outer: UObject,
) : UObject {
  @JsName("DefaultMode")
  public open var defaultMode: String

  @JsName("DefaultBinding")
  public open var defaultBinding: NiagaraScriptVariableBinding

  @JsName("Variable")
  public open var variable: NiagaraVariable

  @JsName("MetaData")
  public open var metaData: NiagaraVariableMetaData

  @JsName("DefaultValueVariant")
  public open var defaultValueVariant: NiagaraVariant

  @JsName("StaticSwitchDefaultValue")
  public open var staticSwitchDefaultValue: Number

  @JsName("bIsStaticSwitch")
  public open var isStaticSwitch: Boolean

  @JsName("bSubscribedToParameterDefinitions")
  public open var subscribedToParameterDefinitions: Boolean

  @JsName("ChangeId")
  public open var changeId: Guid

  @JsName("bOverrideParameterDefinitionsDefaultValue")
  public open var overrideParameterDefinitionsDefaultValue: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraScriptVariable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraScriptVariable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraScriptVariable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraScriptVariable

    @JsName("C")
    public fun copy(other: UObject): NiagaraScriptVariable

    @JsName("C")
    public fun copy(other: Any): NiagaraScriptVariable
  }
}

public open external class NiagaraClipboardScriptVariable {
  @JsName("ScriptVariable")
  public open var scriptVariable: NiagaraScriptVariable

  @JsName("OriginalChangeId")
  public open var originalChangeId: Guid

  public open fun clone(): NiagaraClipboardScriptVariable

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraClipboardScriptVariable

    @JsName("C")
    public fun copy(other: Any): NiagaraClipboardScriptVariable
  }
}

public open external class NiagaraClipboardContent(
  outer: UObject,
) : UObject {
  @JsName("Functions")
  public open var functions: Array<NiagaraClipboardFunction>

  @JsName("FunctionInputs")
  public open var functionInputs: Array<NiagaraClipboardFunctionInput>

  @JsName("Renderers")
  public open var renderers: Array<NiagaraRendererProperties>

  @JsName("Scripts")
  public open var scripts: Array<NiagaraScript>

  @JsName("ScriptVariables")
  public open var scriptVariables: Array<NiagaraClipboardScriptVariable>

  @JsName("ExportedNodes")
  public open var exportedNodes: String

  @JsName("bFixupPasteIndexForScriptDependenciesInStack")
  public open var fixupPasteIndexForScriptDependenciesInStack: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraClipboardContent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraClipboardContent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraClipboardContent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraClipboardContent

    @JsName("C")
    public fun copy(other: UObject): NiagaraClipboardContent

    @JsName("C")
    public fun copy(other: Any): NiagaraClipboardContent
  }
}

@JsName("T$836")
public external interface OutSucceededProvider {
  @JsName("bOutSucceeded")
  public var outSucceeded: Boolean
}

@JsName("T$837")
public external interface Object837 {
  @JsName("bOutSucceeded")
  public var outSucceeded: Boolean

  @JsName("OutValue")
  public var outValue: Number
}

@JsName("T$838")
public external interface Object838 {
  @JsName("bOutSucceeded")
  public var outSucceeded: Boolean

  @JsName("OutInput")
  public var outInput: NiagaraClipboardFunctionInput
}

public open external class NiagaraClipboardEditorScriptingUtilities(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraClipboardEditorScriptingUtilities

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraClipboardEditorScriptingUtilities

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraClipboardEditorScriptingUtilities

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraClipboardEditorScriptingUtilities

    @JsName("TrySetLocalValueAsInt")
    public fun trySetLocalValueAsInt(
      inInput: NiagaraClipboardFunctionInput,
      outSucceeded: Boolean,
      inValue: Number,
      looseTyping: Boolean,
    ): OutSucceededProvider

    @JsName("TryGetLocalValueAsInt")
    public fun tryGetLocalValueAsInt(
      inInput: NiagaraClipboardFunctionInput,
      outSucceeded: Boolean,
      outValue: Number,
    ): Object837

    @JsName("TryGetLocalValueAsFloat")
    public fun tryGetLocalValueAsFloat(
      inInput: NiagaraClipboardFunctionInput,
      outSucceeded: Boolean,
      outValue: Number,
    ): Object837

    @JsName("TryGetInputByName")
    public fun tryGetInputByName(
      inInputs: Array<NiagaraClipboardFunctionInput>,
      inInputName: String,
      outSucceeded: Boolean,
      outInput: NiagaraClipboardFunctionInput,
    ): Object838

    @JsName("GetTypeName")
    public fun getTypeName(inInput: NiagaraClipboardFunctionInput): String

    @JsName("CreateVec3LocalValueInput")
    public fun createVec3LocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inVec3Value: Vector,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateVec2LocalValueInput")
    public fun createVec2LocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inVec2Value: Vector2d,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateStructLocalValueInput")
    public fun createStructLocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inStructValue: UserDefinedStruct,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateLinkedValueInput")
    public fun createLinkedValueInput(
      inOuter: UObject,
      inInputName: String,
      inInputTypeName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inLinkedValue: String,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateIntLocalValueInput")
    public fun createIntLocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inLocalValue: Number,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateFloatLocalValueInput")
    public fun createFloatLocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inLocalValue: Number,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateExpressionValueInput")
    public fun createExpressionValueInput(
      inOuter: UObject,
      inInputName: String,
      inInputTypeName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inExpressionValue: String,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateEnumLocalValueInput")
    public fun createEnumLocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditCoditionValue: Boolean,
      inEnumType: UserDefinedEnum,
      inEnumValue: Number,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateDynamicValueInput")
    public fun createDynamicValueInput(
      inOuter: UObject,
      inInputName: String,
      inInputTypeName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inDynamicValueName: String,
      inDynamicValue: NiagaraScript,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateDataValueInput")
    public fun createDataValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inDataValue: NiagaraDataInterface,
    ): NiagaraClipboardFunctionInput

    @JsName("CreateBoolLocalValueInput")
    public fun createBoolLocalValueInput(
      inOuter: UObject,
      inInputName: String,
      inHasEditCondition: Boolean,
      inEditConditionValue: Boolean,
      inBoolValue: Boolean,
    ): NiagaraClipboardFunctionInput

    @JsName("C")
    public fun copy(other: UObject): NiagaraClipboardEditorScriptingUtilities

    @JsName("C")
    public fun copy(other: Any): NiagaraClipboardEditorScriptingUtilities
  }
}

public open external class NiagaraConvertInPlaceEmitterAndSystemState(
  outer: UObject,
) : NiagaraConvertInPlaceUtilityBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraConvertInPlaceEmitterAndSystemState

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraConvertInPlaceEmitterAndSystemState

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraConvertInPlaceEmitterAndSystemState

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraConvertInPlaceEmitterAndSystemState

    @JsName("C")
    public fun copy(other: UObject): NiagaraConvertInPlaceEmitterAndSystemState

    @JsName("C")
    public fun copy(other: Any): NiagaraConvertInPlaceEmitterAndSystemState
  }
}

public open external class NiagaraCurveSelectionViewModel(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraCurveSelectionViewModel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraCurveSelectionViewModel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraCurveSelectionViewModel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraCurveSelectionViewModel

    @JsName("C")
    public fun copy(other: UObject): NiagaraCurveSelectionViewModel

    @JsName("C")
    public fun copy(other: Any): NiagaraCurveSelectionViewModel
  }
}

public open external class NiagaraDumpByteCodeCommandlet(
  outer: UObject,
) : Commandlet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDumpByteCodeCommandlet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDumpByteCodeCommandlet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDumpByteCodeCommandlet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDumpByteCodeCommandlet

    @JsName("C")
    public fun copy(other: UObject): NiagaraDumpByteCodeCommandlet

    @JsName("C")
    public fun copy(other: Any): NiagaraDumpByteCodeCommandlet
  }
}

public open external class NiagaraEditorParametersAdapter(
  outer: UObject,
) : NiagaraEditorParametersAdapterBase {
  @JsName("EditorOnlyScriptVars")
  public open var editorOnlyScriptVars: Array<NiagaraScriptVariable>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEditorParametersAdapter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEditorParametersAdapter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEditorParametersAdapter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEditorParametersAdapter

    @JsName("C")
    public fun copy(other: UObject): NiagaraEditorParametersAdapter

    @JsName("C")
    public fun copy(other: Any): NiagaraEditorParametersAdapter
  }
}

public open external class NiagaraSpawnShortcut {
  @JsName("Name")
  public open var name: String

  @JsName("Input")
  public open var input: InputChord

  public open fun clone(): NiagaraSpawnShortcut

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraSpawnShortcut

    @JsName("C")
    public fun copy(other: Any): NiagaraSpawnShortcut
  }
}

public open external class NiagaraActionColors {
  @JsName("NiagaraColor")
  public open var niagaraColor: LinearColor

  @JsName("GameColor")
  public open var gameColor: LinearColor

  @JsName("PluginColor")
  public open var pluginColor: LinearColor

  @JsName("DeveloperColor")
  public open var developerColor: LinearColor

  public open fun clone(): NiagaraActionColors

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraActionColors

    @JsName("C")
    public fun copy(other: Any): NiagaraActionColors
  }
}

@JsName("ENiagaraNamespaceMetadataOptions")
public external object NiagaraNamespaceMetadataOptions {
  public var HideInScript: String

  public var HideInSystem: String

  public var AdvancedInScript: String

  public var AdvancedInSystem: String

  public var PreventEditingNamespace: String

  public var PreventEditingNamespaceModifier: String

  public var PreventEditingName: String

  public var PreventCreatingInSystemEditor: String

  public var HideInDefinitions: String

  @JsName("ENiagaraNamespaceMetadataOptions_MAX")
  public var Max: String
}

public open external class NiagaraNamespaceMetadata {
  @JsName("Namespaces")
  public open var namespaces: Array<String>

  @JsName("RequiredNamespaceModifier")
  public open var requiredNamespaceModifier: String

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("DisplayNameLong")
  public open var displayNameLong: String

  @JsName("Description")
  public open var description: String

  @JsName("BackgroundColor")
  public open var backgroundColor: LinearColor

  @JsName("ForegroundStyle")
  public open var foregroundStyle: String

  @JsName("SortId")
  public open var sortId: Number

  @JsName("OptionalNamespaceModifiers")
  public open var optionalNamespaceModifiers: Array<String>

  @JsName("Options")
  public open var options: Array<String>

  @JsName("Guid")
  public open var guid: Guid

  public open fun clone(): NiagaraNamespaceMetadata

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraNamespaceMetadata

    @JsName("C")
    public fun copy(other: Any): NiagaraNamespaceMetadata
  }
}

public open external class NiagaraCurveTemplate {
  @JsName("DisplayNameOverride")
  public open var displayNameOverride: String

  @JsName("CurveAsset")
  public open var curveAsset: SoftObjectPath

  public open fun clone(): NiagaraCurveTemplate

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraCurveTemplate

    @JsName("C")
    public fun copy(other: Any): NiagaraCurveTemplate
  }
}

public open external class NiagaraEditorSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("DefaultScript")
  public open var defaultScript: SoftObjectPath

  @JsName("DefaultDynamicInputScript")
  public open var defaultDynamicInputScript: SoftObjectPath

  @JsName("DefaultFunctionScript")
  public open var defaultFunctionScript: SoftObjectPath

  @JsName("DefaultModuleScript")
  public open var defaultModuleScript: SoftObjectPath

  @JsName("RequiredSystemUpdateScript")
  public open var requiredSystemUpdateScript: SoftObjectPath

  @JsName("GraphCreationShortcuts")
  public open var graphCreationShortcuts: Array<NiagaraSpawnShortcut>

  @JsName("bEnableBaker")
  public open var enableBaker: Boolean

  @JsName("bAutoCompile")
  public open var autoCompile: Boolean

  @JsName("bAutoPlay")
  public open var autoPlay: Boolean

  @JsName("bResetSimulationOnChange")
  public open var resetSimulationOnChange: Boolean

  @JsName("bResimulateOnChangeWhilePaused")
  public open var resimulateOnChangeWhilePaused: Boolean

  @JsName("bResetDependentSystemsWhenEditingEmitters")
  public open var resetDependentSystemsWhenEditingEmitters: Boolean

  @JsName("bDisplayAdvancedParameterPanelCategories")
  public open var displayAdvancedParameterPanelCategories: Boolean

  @JsName("PlaybackSpeeds")
  public open var playbackSpeeds: Array<Number>

  @JsName("ActionColors")
  public open var actionColors: NiagaraActionColors

  @JsName("NewAssetDialogConfigMap")
  public open var newAssetDialogConfigMap: Any

  @JsName("HLSLKeywordReplacements")
  public open var hlslKeywordReplacements: Any

  @JsName("NamespaceMetadata")
  public open var namespaceMetadata: Array<NiagaraNamespaceMetadata>

  @JsName("NamespaceModifierMetadata")
  public open var namespaceModifierMetadata: Array<NiagaraNamespaceMetadata>

  @JsName("DefaultNamespaceMetadata")
  public open var defaultNamespaceMetadata: NiagaraNamespaceMetadata

  @JsName("DefaultNamespaceModifierMetadata")
  public open var defaultNamespaceModifierMetadata: NiagaraNamespaceMetadata

  @JsName("CurveTemplates")
  public open var curveTemplates: Array<NiagaraCurveTemplate>

  @JsName("bShowGridInViewport")
  public open var showGridInViewport: Boolean

  @JsName("bShowInstructionsCount")
  public open var showInstructionsCount: Boolean

  @JsName("bShowParticleCountsInViewport")
  public open var showParticleCountsInViewport: Boolean

  @JsName("bShowEmitterExecutionOrder")
  public open var showEmitterExecutionOrder: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEditorSettings

    @JsName("C")
    public fun copy(other: UObject): NiagaraEditorSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraEditorSettings
  }
}

public open external class NiagaraEffectTypeFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEffectTypeFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEffectTypeFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEffectTypeFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEffectTypeFactoryNew

    @JsName("C")
    public fun copy(other: UObject): NiagaraEffectTypeFactoryNew

    @JsName("C")
    public fun copy(other: Any): NiagaraEffectTypeFactoryNew
  }
}

public open external class NiagaraStackEditorData(
  outer: UObject,
) : NiagaraEditorDataBase {
  @JsName("StackEntryKeyToExpandedMap")
  public open var stackEntryKeyToExpandedMap: Any

  @JsName("StackEntryKeyToExpandedOverviewMap")
  public open var stackEntryKeyToExpandedOverviewMap: Any

  @JsName("StackEntryKeyToDisplayName")
  public open var stackEntryKeyToDisplayName: Any

  @JsName("DismissedStackIssueIds")
  public open var dismissedStackIssueIds: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEditorData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEditorData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEditorData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEditorData

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEditorData

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEditorData
  }
}

public open external class NiagaraEmitterEditorData(
  outer: UObject,
) : NiagaraEditorDataBase {
  @JsName("StackEditorData")
  public open var stackEditorData: NiagaraStackEditorData

  @JsName("PlaybackRangeMin")
  public open var playbackRangeMin: Number

  @JsName("PlaybackRangeMax")
  public open var playbackRangeMax: Number

  @JsName("bShowSummaryView")
  public open var showSummaryView: Boolean

  @JsName("SummaryViewFunctionInputMetadata")
  public open var summaryViewFunctionInputMetadata: Any

  @JsName("SummarySections")
  public open var summarySections: Array<NiagaraStackSection>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEmitterEditorData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEmitterEditorData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEmitterEditorData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEmitterEditorData

    @JsName("C")
    public fun copy(other: UObject): NiagaraEmitterEditorData

    @JsName("C")
    public fun copy(other: Any): NiagaraEmitterEditorData
  }
}

public open external class NiagaraEmitterFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraEmitterFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraEmitterFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraEmitterFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraEmitterFactoryNew

    @JsName("C")
    public fun copy(other: UObject): NiagaraEmitterFactoryNew

    @JsName("C")
    public fun copy(other: Any): NiagaraEmitterFactoryNew
  }
}

public open external class NiagaraCompileHashVisitorDebugInfo {
  @JsName("UObject")
  public open var uObject: String

  @JsName("PropertyKeys")
  public open var propertyKeys: Array<String>

  @JsName("PropertyValues")
  public open var propertyValues: Array<String>

  public open fun clone(): NiagaraCompileHashVisitorDebugInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraCompileHashVisitorDebugInfo

    @JsName("C")
    public fun copy(other: Any): NiagaraCompileHashVisitorDebugInfo
  }
}

public open external class NiagaraGraphScriptUsageInfo {
  @JsName("BaseId")
  public open var baseId: Guid

  @JsName("UsageType")
  public open var usageType: String

  @JsName("UsageId")
  public open var usageId: Guid

  @JsName("CompileHash")
  public open var compileHash: NiagaraCompileHash

  @JsName("CompileHashFromGraph")
  public open var compileHashFromGraph: NiagaraCompileHash

  @JsName("CompileLastObjects")
  public open var compileLastObjects: Array<NiagaraCompileHashVisitorDebugInfo>

  @JsName("Traversal")
  public open var traversal: Array<NiagaraNode>

  @JsName("DataHash")
  public open var dataHash: Array<Number>

  @JsName("GeneratedCompileId")
  public open var generatedCompileId: Guid

  public open fun clone(): NiagaraGraphScriptUsageInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraGraphScriptUsageInfo

    @JsName("C")
    public fun copy(other: Any): NiagaraGraphScriptUsageInfo
  }
}

public open external class NiagaraGraph(
  outer: UObject,
) : EdGraph {
  @JsName("ChangeId")
  public open var changeId: Guid

  @JsName("ForceRebuildId")
  public open var forceRebuildId: Guid

  @JsName("LastBuiltTraversalDataChangeId")
  public open var lastBuiltTraversalDataChangeId: Guid

  @JsName("CachedUsageInfo")
  public open var cachedUsageInfo: Array<NiagaraGraphScriptUsageInfo>

  @JsName("VariableToMetaData")
  public open var variableToMetaData: Any

  @JsName("VariableToScriptVariable")
  public open var variableToScriptVariable: Any

  @JsName("ParameterToReferencesMap")
  public open var parameterToReferencesMap: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraGraph

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraGraph

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraGraph

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraGraph

    @JsName("C")
    public fun copy(other: UObject): NiagaraGraph

    @JsName("C")
    public fun copy(other: Any): NiagaraGraph
  }
}

public open external class NiagaraMessageData(
  outer: UObject,
) : NiagaraMessageDataBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraMessageData

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraMessageData

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraMessageData

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraMessageData

    @JsName("C")
    public fun copy(other: UObject): NiagaraMessageData

    @JsName("C")
    public fun copy(other: Any): NiagaraMessageData
  }
}

public open external class NiagaraMessageDataText(
  outer: UObject,
) : NiagaraMessageData {
  @JsName("MessageText")
  public open var messageText: String

  @JsName("ShortDescription")
  public open var shortDescription: String

  @JsName("MessageSeverity")
  public open var messageSeverity: String

  @JsName("bAllowDismissal")
  public open var allowDismissal: Boolean

  @JsName("TopicName")
  public open var topicName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraMessageDataText

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraMessageDataText

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraMessageDataText

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraMessageDataText

    @JsName("C")
    public fun copy(other: UObject): NiagaraMessageDataText

    @JsName("C")
    public fun copy(other: Any): NiagaraMessageDataText
  }
}

public open external class NiagaraNodeAssignment(
  outer: UObject,
) : NiagaraNodeFunctionCall {
  @JsName("AssignmentTarget")
  public open var assignmentTarget: NiagaraVariable

  @JsName("AssignmentDefaultValue")
  public open var assignmentDefaultValue: String

  @JsName("AssignmentTargets")
  public open var assignmentTargets: Array<NiagaraVariable>

  @JsName("AssignmentDefaultValues")
  public open var assignmentDefaultValues: Array<String>

  @JsName("OldFunctionCallName")
  public open var oldFunctionCallName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeAssignment

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeAssignment

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeAssignment

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeAssignment

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeAssignment

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeAssignment
  }
}

public open external class NiagaraConvertConnection {
  @JsName("SourcePinId")
  public open var sourcePinId: Guid

  @JsName("SourcePath")
  public open var sourcePath: Array<String>

  @JsName("DestinationPinId")
  public open var destinationPinId: Guid

  @JsName("DestinationPath")
  public open var destinationPath: Array<String>

  @JsName("SourcePropertyId")
  public open var sourcePropertyId: Guid

  @JsName("DestinationPropertyId")
  public open var destinationPropertyId: Guid

  public open fun clone(): NiagaraConvertConnection

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraConvertConnection

    @JsName("C")
    public fun copy(other: Any): NiagaraConvertConnection
  }
}

public open external class NiagaraConvertPinRecord {
  @JsName("PinId")
  public open var pinId: Guid

  @JsName("Path")
  public open var path: Array<String>

  public open fun clone(): NiagaraConvertPinRecord

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraConvertPinRecord

    @JsName("C")
    public fun copy(other: Any): NiagaraConvertPinRecord
  }
}

public open external class NiagaraNodeConvert(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("AutowireSwizzle")
  public open var autowireSwizzle: String

  @JsName("AutowireMakeType")
  public open var autowireMakeType: NiagaraTypeDefinition

  @JsName("AutowireBreakType")
  public open var autowireBreakType: NiagaraTypeDefinition

  @JsName("Connections")
  public open var connections: Array<NiagaraConvertConnection>

  @JsName("bIsWiringShown")
  public open var isWiringShown: Boolean

  @JsName("ExpandedItems")
  public open var expandedItems: Array<NiagaraConvertPinRecord>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeConvert

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeConvert

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeConvert

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeConvert

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeConvert

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeConvert
  }
}

public open external class NiagaraNodeCustomHlsl(
  outer: UObject,
) : NiagaraNodeFunctionCall {
  @JsName("ScriptUsage")
  public open var scriptUsage: String

  @JsName("CustomHlsl")
  public open var customHlsl: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeCustomHlsl

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeCustomHlsl

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeCustomHlsl

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeCustomHlsl

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeCustomHlsl

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeCustomHlsl
  }
}

public open external class NiagaraNodeDataSetBase(
  outer: UObject,
) : NiagaraNode {
  @JsName("DataSet")
  public open var dataSet: NiagaraDataSetId

  @JsName("Variables")
  public open var variables: Array<NiagaraVariable>

  @JsName("VariableFriendlyNames")
  public open var variableFriendlyNames: Array<String>

  @JsName("ExternalStructAsset")
  public open var externalStructAsset: Struct

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeDataSetBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeDataSetBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeDataSetBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeDataSetBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeDataSetBase

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeDataSetBase
  }
}

public open external class NiagaraNodeEmitter(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("OwnerSystem")
  public open var ownerSystem: NiagaraSystem

  @JsName("EmitterHandleId")
  public open var emitterHandleId: Guid

  @JsName("DisplayName")
  public open var displayName: String

  @JsName("ScriptType")
  public open var scriptType: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeEmitter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeEmitter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeEmitter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeEmitter

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeEmitter

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeEmitter
  }
}

public open external class PinGuidsForPath {
  @JsName("OutputPinGuid")
  public open var outputPinGuid: Guid

  @JsName("InputTruePinGuid")
  public open var inputTruePinGuid: Guid

  @JsName("InputFalsePinGuid")
  public open var inputFalsePinGuid: Guid

  public open fun clone(): PinGuidsForPath

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): PinGuidsForPath

    @JsName("C")
    public fun copy(other: Any): PinGuidsForPath
  }
}

public open external class NiagaraNodeIf(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("OutputVars")
  public open var outputVars: Array<NiagaraVariable>

  @JsName("PathAssociatedPinGuids")
  public open var pathAssociatedPinGuids: Array<PinGuidsForPath>

  @JsName("ConditionPinGuid")
  public open var conditionPinGuid: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeIf

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeIf

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeIf

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeIf

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeIf

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeIf
  }
}

@JsName("ENiagaraInputNodeUsage")
public external object NiagaraInputNodeUsage {
  public var Undefined: String

  public var Parameter: String

  public var Attribute: String

  public var SystemConstant: String

  public var TranslatorConstant: String

  public var RapidIterationParameter: String

  @JsName("ENiagaraInputNodeUsage_MAX")
  public var Max: String
}

public open external class NiagaraInputExposureOptions {
  @JsName("bExposed")
  public open var exposed: Boolean

  @JsName("bRequired")
  public open var required: Boolean

  @JsName("bCanAutoBind")
  public open var canAutoBind: Boolean

  @JsName("bHidden")
  public open var hidden: Boolean

  public open fun clone(): NiagaraInputExposureOptions

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraInputExposureOptions

    @JsName("C")
    public fun copy(other: Any): NiagaraInputExposureOptions
  }
}

public open external class NiagaraNodeInput(
  outer: UObject,
) : NiagaraNode {
  @JsName("Input")
  public open var input: NiagaraVariable

  @JsName("Usage")
  public open var usage: String

  @JsName("CallSortPriority")
  public open var callSortPriority: Number

  @JsName("ExposureOptions")
  public open var exposureOptions: NiagaraInputExposureOptions

  @JsName("DataInterface")
  public open var dataInterface: NiagaraDataInterface

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeInput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeInput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeInput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeInput

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeInput

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeInput
  }
}

public open external class AddedPinData {
  @JsName("PinType")
  public open var pinType: EdGraphPinType

  @JsName("PinName")
  public open var pinName: String

  public open fun clone(): AddedPinData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): AddedPinData

    @JsName("C")
    public fun copy(other: Any): AddedPinData
  }
}

public open external class NiagaraNodeOp(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("OpName")
  public open var opName: String

  @JsName("AddedPins")
  public open var addedPins: Array<AddedPinData>

  @JsName("bAllStatic")
  public open var allStatic: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeOp

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeOp

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeOp

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeOp

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeOp

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeOp
  }
}

public open external class NiagaraNodeOutput(
  outer: UObject,
) : NiagaraNode {
  @JsName("Outputs")
  public open var outputs: Array<NiagaraVariable>

  @JsName("ScriptType")
  public open var scriptType: String

  @JsName("ScriptTypeId")
  public open var scriptTypeId: Guid

  @JsName("ScriptTypeIndex")
  public open var scriptTypeIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeOutput

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeOutput

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeOutput
  }
}

public open external class NiagaraNodeOutputTag(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("bEmitMessageOnFailure")
  public open var emitMessageOnFailure: Boolean

  @JsName("FailureSeverity")
  public open var failureSeverity: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeOutputTag

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeOutputTag

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeOutputTag

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeOutputTag

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeOutputTag

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeOutputTag
  }
}

public open external class NiagaraNodeParameterMapBase(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapBase

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapBase
  }
}

public open external class NiagaraNodeParameterMapSet(
  outer: UObject,
) : NiagaraNodeParameterMapBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapSet

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapSet

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapSet
  }
}

public open external class NiagaraNodeParameterMapFor(
  outer: UObject,
) : NiagaraNodeParameterMapSet {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapFor

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapFor

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapFor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapFor

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapFor

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapFor
  }
}

public open external class NiagaraNodeParameterMapForWithContinue(
  outer: UObject,
) : NiagaraNodeParameterMapFor {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapForWithContinue

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapForWithContinue

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapForWithContinue

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapForWithContinue

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapForWithContinue

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapForWithContinue
  }
}

public open external class NiagaraNodeParameterMapForIndex(
  outer: UObject,
) : NiagaraNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapForIndex

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapForIndex

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapForIndex

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapForIndex

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapForIndex

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapForIndex
  }
}

public open external class NiagaraNodeParameterMapGet(
  outer: UObject,
) : NiagaraNodeParameterMapBase {
  @JsName("PinOutputToPinDefaultPersistentId")
  public open var pinOutputToPinDefaultPersistentId: Any

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeParameterMapGet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeParameterMapGet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeParameterMapGet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeParameterMapGet

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeParameterMapGet

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeParameterMapGet
  }
}

public open external class NiagaraNodeReadDataSet(
  outer: UObject,
) : NiagaraNodeDataSetBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeReadDataSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeReadDataSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeReadDataSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeReadDataSet

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeReadDataSet

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeReadDataSet
  }
}

public open external class NiagaraNodeReroute(
  outer: UObject,
) : NiagaraNode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeReroute

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeReroute

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeReroute

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeReroute

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeReroute

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeReroute
  }
}

public open external class NiagaraNodeUsageSelector(
  outer: UObject,
) : NiagaraNodeWithDynamicPins {
  @JsName("OutputVars")
  public open var outputVars: Array<NiagaraVariable>

  @JsName("OutputVarGuids")
  public open var outputVarGuids: Array<Guid>

  @JsName("SelectorGuid")
  public open var selectorGuid: Guid

  @JsName("NumOptionsPerVariable")
  public open var numOptionsPerVariable: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeUsageSelector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeUsageSelector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeUsageSelector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeUsageSelector

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeUsageSelector

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeUsageSelector
  }
}

public open external class NiagaraNodeSelect(
  outer: UObject,
) : NiagaraNodeUsageSelector {
  @JsName("SelectorPinType")
  public open var selectorPinType: NiagaraTypeDefinition

  @JsName("SelectorPinGuid")
  public open var selectorPinGuid: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeSelect

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeSelect

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeSelect

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeSelect

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeSelect

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeSelect
  }
}

public open external class NiagaraNodeSimTargetSelector(
  outer: UObject,
) : NiagaraNodeUsageSelector {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeSimTargetSelector

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeSimTargetSelector

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeSimTargetSelector

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeSimTargetSelector

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeSimTargetSelector

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeSimTargetSelector
  }
}

@JsName("ENiagaraStaticSwitchType")
public external object NiagaraStaticSwitchType {
  public var Bool: String

  public var Integer: String

  public var Enum: String

  @JsName("ENiagaraStaticSwitchType_MAX")
  public var Max: String
}

public open external class StaticSwitchTypeData {
  @JsName("SwitchType")
  public open var switchType: String

  @JsName("Enum")
  public open var enum: Enum

  @JsName("SwitchConstant")
  public open var switchConstant: String

  @JsName("bAutoRefreshEnabled")
  public open var autoRefreshEnabled: Boolean

  @JsName("bExposeAsPin")
  public open var exposeAsPin: Boolean

  public open fun clone(): StaticSwitchTypeData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): StaticSwitchTypeData

    @JsName("C")
    public fun copy(other: Any): StaticSwitchTypeData
  }
}

public open external class NiagaraNodeStaticSwitch(
  outer: UObject,
) : NiagaraNodeUsageSelector {
  @JsName("InputParameterName")
  public open var inputParameterName: String

  @JsName("SwitchTypeData")
  public open var switchTypeData: StaticSwitchTypeData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeStaticSwitch

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeStaticSwitch

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeStaticSwitch

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeStaticSwitch

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeStaticSwitch

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeStaticSwitch
  }
}

public open external class NiagaraNodeWriteDataSet(
  outer: UObject,
) : NiagaraNodeDataSetBase {
  @JsName("EventName")
  public open var eventName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraNodeWriteDataSet

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraNodeWriteDataSet

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraNodeWriteDataSet

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraNodeWriteDataSet

    @JsName("C")
    public fun copy(other: UObject): NiagaraNodeWriteDataSet

    @JsName("C")
    public fun copy(other: Any): NiagaraNodeWriteDataSet
  }
}

public open external class NiagaraOutlinerCaptureSettings {
  @JsName("bTriggerCapture")
  public open var triggerCapture: Boolean

  @JsName("CaptureDelayFrames")
  public open var captureDelayFrames: Any

  @JsName("bGatherPerfData")
  public open var gatherPerfData: Boolean

  public open fun clone(): NiagaraOutlinerCaptureSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraOutlinerCaptureSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraOutlinerCaptureSettings
  }
}

@JsName("ENiagaraOutlinerViewModes")
public external object NiagaraOutlinerViewModes {
  public var State: String

  public var Performance: String

  @JsName("ENiagaraOutlinerViewModes_MAX")
  public var Max: String
}

@JsName("ENiagaraExecutionState")
public external object NiagaraExecutionState {
  public var Active: String

  public var Inactive: String

  public var InactiveClear: String

  public var Complete: String

  public var Disabled: String

  public var Num: String

  @JsName("ENiagaraExecutionState_MAX")
  public var Max: String
}

public open external class NiagaraOutlinerFilterSettings {
  @JsName("bFilterBySystemExecutionState")
  public open var filterBySystemExecutionState: Boolean

  @JsName("bFilterByEmitterExecutionState")
  public open var filterByEmitterExecutionState: Boolean

  @JsName("bFilterByEmitterSimTarget")
  public open var filterByEmitterSimTarget: Boolean

  @JsName("bFilterBySystemCullState")
  public open var filterBySystemCullState: Boolean

  @JsName("SystemExecutionState")
  public open var systemExecutionState: String

  @JsName("EmitterExecutionState")
  public open var emitterExecutionState: String

  @JsName("EmitterSimTarget")
  public open var emitterSimTarget: String

  @JsName("bSystemCullState")
  public open var systemCullState: Boolean

  public open fun clone(): NiagaraOutlinerFilterSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraOutlinerFilterSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraOutlinerFilterSettings
  }
}

@JsName("ENiagaraOutlinerSortMode")
public external object NiagaraOutlinerSortMode {
  public var Auto: String

  public var FilterMatches: String

  public var AverageTime: String

  public var MaxTime: String

  @JsName("ENiagaraOutlinerSortMode_MAX")
  public var Max: String
}

@JsName("ENiagaraOutlinerTimeUnits")
public external object NiagaraOutlinerTimeUnits {
  public var Microseconds: String

  public var Milliseconds: String

  public var Seconds: String

  @JsName("ENiagaraOutlinerTimeUnits_MAX")
  public var Max: String
}

public open external class NiagaraOutlinerViewSettings {
  @JsName("ViewMode")
  public open var viewMode: String

  @JsName("FilterSettings")
  public open var filterSettings: NiagaraOutlinerFilterSettings

  @JsName("bSortDescending")
  public open var sortDescending: Boolean

  @JsName("SortMode")
  public open var sortMode: String

  @JsName("TimeUnits")
  public open var timeUnits: String

  public open fun clone(): NiagaraOutlinerViewSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraOutlinerViewSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraOutlinerViewSettings
  }
}

public open external class NiagaraOutlinerData {
  @JsName("WorldData")
  public open var worldData: Any

  public open fun clone(): NiagaraOutlinerData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): NiagaraOutlinerData

    @JsName("C")
    public fun copy(other: Any): NiagaraOutlinerData
  }
}

public open external class NiagaraOutliner(
  outer: UObject,
) : UObject {
  @JsName("CaptureSettings")
  public open var captureSettings: NiagaraOutlinerCaptureSettings

  @JsName("ViewSettings")
  public open var viewSettings: NiagaraOutlinerViewSettings

  @JsName("Data")
  public open var data: NiagaraOutlinerData

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraOutliner

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraOutliner

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraOutliner

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraOutliner

    @JsName("C")
    public fun copy(other: UObject): NiagaraOutliner

    @JsName("C")
    public fun copy(other: Any): NiagaraOutliner
  }
}

public open external class NiagaraOverviewNode(
  outer: UObject,
) : EdGraphNode {
  @JsName("OwningSystem")
  public open var owningSystem: NiagaraSystem

  @JsName("EmitterHandleGuid")
  public open var emitterHandleGuid: Guid

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraOverviewNode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraOverviewNode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraOverviewNode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraOverviewNode

    @JsName("C")
    public fun copy(other: UObject): NiagaraOverviewNode

    @JsName("C")
    public fun copy(other: Any): NiagaraOverviewNode
  }
}

public open external class NiagaraParameterCollectionFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraParameterCollectionFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraParameterCollectionFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraParameterCollectionFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraParameterCollectionFactoryNew

    @JsName("C")
    public fun copy(other: UObject): NiagaraParameterCollectionFactoryNew

    @JsName("C")
    public fun copy(other: Any): NiagaraParameterCollectionFactoryNew
  }
}

public open external class NiagaraParameterCollectionInstanceFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraParameterCollectionInstanceFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraParameterCollectionInstanceFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraParameterCollectionInstanceFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraParameterCollectionInstanceFactoryNew

    @JsName("C")
    public fun copy(other: UObject): NiagaraParameterCollectionInstanceFactoryNew

    @JsName("C")
    public fun copy(other: Any): NiagaraParameterCollectionInstanceFactoryNew
  }
}

public open external class ScriptVarBindingNameSubscription {
  @JsName("ExternalScriptVarId")
  public open var externalScriptVarId: Guid

  @JsName("InternalScriptVarIds")
  public open var internalScriptVarIds: Array<Guid>

  public open fun clone(): ScriptVarBindingNameSubscription

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ScriptVarBindingNameSubscription

    @JsName("C")
    public fun copy(other: Any): ScriptVarBindingNameSubscription
  }
}

public open external class ParameterDefinitionsBindingNameSubscription {
  @JsName("SubscribedParameterDefinitions")
  public open var subscribedParameterDefinitions: NiagaraParameterDefinitions

  @JsName("BindingNameSubscriptions")
  public open var bindingNameSubscriptions: Array<ScriptVarBindingNameSubscription>

  public open fun clone(): ParameterDefinitionsBindingNameSubscription

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): ParameterDefinitionsBindingNameSubscription

    @JsName("C")
    public fun copy(other: Any): ParameterDefinitionsBindingNameSubscription
  }
}

public open external class NiagaraParameterDefinitions(
  outer: UObject,
) : NiagaraParameterDefinitionsBase {
  @JsName("bPromoteToTopInAddMenus")
  public open var promoteToTopInAddMenus: Boolean

  @JsName("MenuSortOrder")
  public open var menuSortOrder: Number

  @JsName("ScriptVariables")
  public open var scriptVariables: Array<NiagaraScriptVariable>

  @JsName("ExternalParameterDefinitionsSubscriptions")
  public open var externalParameterDefinitionsSubscriptions:
      Array<ParameterDefinitionsBindingNameSubscription>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraParameterDefinitions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraParameterDefinitions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraParameterDefinitions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraParameterDefinitions

    @JsName("C")
    public fun copy(other: UObject): NiagaraParameterDefinitions

    @JsName("C")
    public fun copy(other: Any): NiagaraParameterDefinitions
  }
}

public open external class NiagaraParameterDefinitionsFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraParameterDefinitionsFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraParameterDefinitionsFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraParameterDefinitionsFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraParameterDefinitionsFactory

    @JsName("C")
    public fun copy(other: UObject): NiagaraParameterDefinitionsFactory

    @JsName("C")
    public fun copy(other: Any): NiagaraParameterDefinitionsFactory
  }
}

public open external class NiagaraScratchPadViewModel(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraScratchPadViewModel

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraScratchPadViewModel

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraScratchPadViewModel

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraScratchPadViewModel

    @JsName("C")
    public fun copy(other: UObject): NiagaraScratchPadViewModel

    @JsName("C")
    public fun copy(other: Any): NiagaraScratchPadViewModel
  }
}

public open external class NiagaraScriptFactoryNew(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraScriptFactoryNew

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraScriptFactoryNew

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraScriptFactoryNew

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraScriptFactoryNew

    @JsName("C")
    public fun copy(other: UObject): NiagaraScriptFactoryNew

    @JsName("C")
    public fun copy(other: Any): NiagaraScriptFactoryNew
  }
}

public open external class NiagaraModuleScriptFactory(
  outer: UObject,
) : NiagaraScriptFactoryNew {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraModuleScriptFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraModuleScriptFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraModuleScriptFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraModuleScriptFactory

    @JsName("C")
    public fun copy(other: UObject): NiagaraModuleScriptFactory

    @JsName("C")
    public fun copy(other: Any): NiagaraModuleScriptFactory
  }
}

public open external class NiagaraFunctionScriptFactory(
  outer: UObject,
) : NiagaraScriptFactoryNew {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraFunctionScriptFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraFunctionScriptFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraFunctionScriptFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraFunctionScriptFactory

    @JsName("C")
    public fun copy(other: UObject): NiagaraFunctionScriptFactory

    @JsName("C")
    public fun copy(other: Any): NiagaraFunctionScriptFactory
  }
}

public open external class NiagaraDynamicInputScriptFactory(
  outer: UObject,
) : NiagaraScriptFactoryNew {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraDynamicInputScriptFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraDynamicInputScriptFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraDynamicInputScriptFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraDynamicInputScriptFactory

    @JsName("C")
    public fun copy(other: UObject): NiagaraDynamicInputScriptFactory

    @JsName("C")
    public fun copy(other: Any): NiagaraDynamicInputScriptFactory
  }
}

public open external class NiagaraScriptSource(
  outer: UObject,
) : NiagaraScriptSourceBase {
  @JsName("NodeGraph")
  public open var nodeGraph: NiagaraGraph

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraScriptSource

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraScriptSource

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraScriptSource

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraScriptSource

    @JsName("C")
    public fun copy(other: UObject): NiagaraScriptSource

    @JsName("C")
    public fun copy(other: Any): NiagaraScriptSource
  }
}

public open external class NiagaraScripStatsViewModelSettings(
  outer: UObject,
) : UObject {
  @JsName("EnabledPlatforms")
  public open var enabledPlatforms: Array<Number>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraScripStatsViewModelSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraScripStatsViewModelSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraScripStatsViewModelSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraScripStatsViewModelSettings

    @JsName("C")
    public fun copy(other: UObject): NiagaraScripStatsViewModelSettings

    @JsName("C")
    public fun copy(other: Any): NiagaraScripStatsViewModelSettings
  }
}

public open external class NiagaraSequence(
  outer: UObject,
) : MovieSceneSequence {
  @JsName("MovieScene")
  public open var movieScene: MovieScene

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSequence

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSequence

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSequence

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSequence

    @JsName("C")
    public fun copy(other: UObject): NiagaraSequence

    @JsName("C")
    public fun copy(other: Any): NiagaraSequence
  }
}

public open external class NiagaraSequencerTrackFilter(
  outer: UObject,
) : SequencerTrackFilterExtension {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraSequencerTrackFilter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraSequencerTrackFilter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraSequencerTrackFilter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraSequencerTrackFilter

    @JsName("C")
    public fun copy(other: UObject): NiagaraSequencerTrackFilter

    @JsName("C")
    public fun copy(other: Any): NiagaraSequencerTrackFilter
  }
}

public open external class NiagaraStackErrorItem(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackErrorItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackErrorItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackErrorItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackErrorItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackErrorItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackErrorItem
  }
}

public open external class NiagaraStackEntry(
  outer: UObject,
) : UObject {
  @JsName("StackEditorData")
  public open var stackEditorData: NiagaraStackEditorData

  @JsName("Children")
  public open var children: Array<NiagaraStackEntry>

  @JsName("ErrorChildren")
  public open var errorChildren: Array<NiagaraStackErrorItem>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEntry

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEntry

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEntry

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEntry

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEntry

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEntry
  }
}

public open external class NiagaraStackItemGroupFooter(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItemGroupFooter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItemGroupFooter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItemGroupFooter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItemGroupFooter

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItemGroupFooter

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItemGroupFooter
  }
}

public open external class NiagaraStackItemGroup(
  outer: UObject,
) : NiagaraStackEntry {
  @JsName("GroupFooter")
  public open var groupFooter: NiagaraStackItemGroupFooter

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItemGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItemGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItemGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItemGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItemGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItemGroup
  }
}

public open external class NiagaraStackItemFooter(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItemFooter

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItemFooter

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItemFooter

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItemFooter

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItemFooter

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItemFooter
  }
}

public open external class NiagaraStackItem(
  outer: UObject,
) : NiagaraStackEntry {
  @JsName("ItemFooter")
  public open var itemFooter: NiagaraStackItemFooter

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItem
  }
}

public open external class NiagaraStackItemContent(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItemContent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItemContent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItemContent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItemContent

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItemContent

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItemContent
  }
}

public open external class NiagaraStackObject(
  outer: UObject,
) : NiagaraStackItemContent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackObject

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackObject

    @JsName("C")
    public fun copy(other: Any): NiagaraStackObject
  }
}

public open external class NiagaraStackEmitterPropertiesItem(
  outer: UObject,
) : NiagaraStackItem {
  @JsName("EmitterObject")
  public open var emitterObject: NiagaraStackObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEmitterPropertiesItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEmitterPropertiesItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEmitterPropertiesItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEmitterPropertiesItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEmitterPropertiesItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEmitterPropertiesItem
  }
}

public open external class NiagaraStackEmitterPropertiesGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  @JsName("PropertiesItem")
  public open var propertiesItem: NiagaraStackEmitterPropertiesItem

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEmitterPropertiesGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEmitterPropertiesGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEmitterPropertiesGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEmitterPropertiesGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEmitterPropertiesGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEmitterPropertiesGroup
  }
}

public open external class NiagaraStackFunctionInputCollectionBase(
  outer: UObject,
) : NiagaraStackItemContent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackFunctionInputCollectionBase

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackFunctionInputCollectionBase

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackFunctionInputCollectionBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackFunctionInputCollectionBase

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackFunctionInputCollectionBase

    @JsName("C")
    public fun copy(other: Any): NiagaraStackFunctionInputCollectionBase
  }
}

public open external class NiagaraStackSummaryViewObject(
  outer: UObject,
) : NiagaraStackFunctionInputCollectionBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackSummaryViewObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackSummaryViewObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackSummaryViewObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackSummaryViewObject

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackSummaryViewObject

    @JsName("C")
    public fun copy(other: Any): NiagaraStackSummaryViewObject
  }
}

public open external class NiagaraStackEmitterSummaryItem(
  outer: UObject,
) : NiagaraStackItem {
  @JsName("FilteredObject")
  public open var filteredObject: NiagaraStackSummaryViewObject

  @JsName("SummaryEditorData")
  public open var summaryEditorData: NiagaraStackObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEmitterSummaryItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEmitterSummaryItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEmitterSummaryItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEmitterSummaryItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEmitterSummaryItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEmitterSummaryItem
  }
}

public open external class NiagaraStackEmitterSummaryGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  @JsName("SummaryItem")
  public open var summaryItem: NiagaraStackEmitterSummaryItem

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEmitterSummaryGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEmitterSummaryGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEmitterSummaryGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEmitterSummaryGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEmitterSummaryGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEmitterSummaryGroup
  }
}

public open external class NiagaraStackSummaryViewCollapseButton(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackSummaryViewCollapseButton

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackSummaryViewCollapseButton

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackSummaryViewCollapseButton

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackSummaryViewCollapseButton

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackSummaryViewCollapseButton

    @JsName("C")
    public fun copy(other: Any): NiagaraStackSummaryViewCollapseButton
  }
}

public open external class NiagaraStackSpacer(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackSpacer

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackSpacer

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackSpacer

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackSpacer

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackSpacer

    @JsName("C")
    public fun copy(other: Any): NiagaraStackSpacer
  }
}

public open external class NiagaraStackErrorItemLongDescription(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackErrorItemLongDescription

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackErrorItemLongDescription

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackErrorItemLongDescription

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackErrorItemLongDescription

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackErrorItemLongDescription

    @JsName("C")
    public fun copy(other: Any): NiagaraStackErrorItemLongDescription
  }
}

public open external class NiagaraStackErrorItemFix(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackErrorItemFix

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackErrorItemFix

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackErrorItemFix

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackErrorItemFix

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackErrorItemFix

    @JsName("C")
    public fun copy(other: Any): NiagaraStackErrorItemFix
  }
}

public open external class NiagaraStackErrorItemDismiss(
  outer: UObject,
) : NiagaraStackErrorItemFix {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackErrorItemDismiss

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackErrorItemDismiss

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackErrorItemDismiss

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackErrorItemDismiss

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackErrorItemDismiss

    @JsName("C")
    public fun copy(other: Any): NiagaraStackErrorItemDismiss
  }
}

public open external class NiagaraStackEventHandlerPropertiesItem(
  outer: UObject,
) : NiagaraStackItem {
  @JsName("EmitterObject")
  public open var emitterObject: NiagaraStackObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEventHandlerPropertiesItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEventHandlerPropertiesItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEventHandlerPropertiesItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEventHandlerPropertiesItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEventHandlerPropertiesItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEventHandlerPropertiesItem
  }
}

public open external class NiagaraStackScriptItemGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackScriptItemGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackScriptItemGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackScriptItemGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackScriptItemGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackScriptItemGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackScriptItemGroup
  }
}

public open external class NiagaraStackEventScriptItemGroup(
  outer: UObject,
) : NiagaraStackScriptItemGroup {
  @JsName("EventHandlerProperties")
  public open var eventHandlerProperties: NiagaraStackEventHandlerPropertiesItem

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackEventScriptItemGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackEventScriptItemGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackEventScriptItemGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackEventScriptItemGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackEventScriptItemGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackEventScriptItemGroup
  }
}

public open external class NiagaraStackFilteredObject(
  outer: UObject,
) : NiagaraStackFunctionInputCollectionBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackFilteredObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackFilteredObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackFilteredObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackFilteredObject

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackFilteredObject

    @JsName("C")
    public fun copy(other: Any): NiagaraStackFilteredObject
  }
}

public open external class NiagaraStackFunctionInput(
  outer: UObject,
) : NiagaraStackItemContent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackFunctionInput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackFunctionInput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackFunctionInput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackFunctionInput

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackFunctionInput

    @JsName("C")
    public fun copy(other: Any): NiagaraStackFunctionInput
  }
}

public open external class NiagaraStackFunctionInputCollection(
  outer: UObject,
) : NiagaraStackFunctionInputCollectionBase {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackFunctionInputCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackFunctionInputCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackFunctionInputCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackFunctionInputCollection

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackFunctionInputCollection

    @JsName("C")
    public fun copy(other: Any): NiagaraStackFunctionInputCollection
  }
}

public open external class NiagaraStackInputCategory(
  outer: UObject,
) : NiagaraStackItemContent {
  @JsName("CategorySpacer")
  public open var categorySpacer: NiagaraStackSpacer

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackInputCategory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackInputCategory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackInputCategory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackInputCategory

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackInputCategory

    @JsName("C")
    public fun copy(other: Any): NiagaraStackInputCategory
  }
}

public open external class NiagaraStackItemTextContent(
  outer: UObject,
) : NiagaraStackItemContent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackItemTextContent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackItemTextContent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackItemTextContent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackItemTextContent

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackItemTextContent

    @JsName("C")
    public fun copy(other: Any): NiagaraStackItemTextContent
  }
}

public open external class NiagaraStackModuleItemLinkedInputCollection(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackModuleItemLinkedInputCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        NiagaraStackModuleItemLinkedInputCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackModuleItemLinkedInputCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackModuleItemLinkedInputCollection

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackModuleItemLinkedInputCollection

    @JsName("C")
    public fun copy(other: Any): NiagaraStackModuleItemLinkedInputCollection
  }
}

public open external class NiagaraStackModuleItemOutputCollection(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackModuleItemOutputCollection

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackModuleItemOutputCollection

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackModuleItemOutputCollection

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackModuleItemOutputCollection

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackModuleItemOutputCollection

    @JsName("C")
    public fun copy(other: Any): NiagaraStackModuleItemOutputCollection
  }
}

public open external class NiagaraStackModuleItem(
  outer: UObject,
) : NiagaraStackItem {
  @JsName("LinkedInputCollection")
  public open var linkedInputCollection: NiagaraStackModuleItemLinkedInputCollection

  @JsName("InputCollection")
  public open var inputCollection: NiagaraStackFunctionInputCollection

  @JsName("OutputCollection")
  public open var outputCollection: NiagaraStackModuleItemOutputCollection

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackModuleItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackModuleItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackModuleItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackModuleItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackModuleItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackModuleItem
  }
}

public open external class NiagaraStackModuleItemOutput(
  outer: UObject,
) : NiagaraStackEntry {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackModuleItemOutput

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackModuleItemOutput

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackModuleItemOutput

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackModuleItemOutput

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackModuleItemOutput

    @JsName("C")
    public fun copy(other: Any): NiagaraStackModuleItemOutput
  }
}

public open external class NiagaraStackParameterStoreEntry(
  outer: UObject,
) : NiagaraStackItemContent {
  @JsName("ValueObjectEntry")
  public open var valueObjectEntry: NiagaraStackObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackParameterStoreEntry

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackParameterStoreEntry

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackParameterStoreEntry

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackParameterStoreEntry

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackParameterStoreEntry

    @JsName("C")
    public fun copy(other: Any): NiagaraStackParameterStoreEntry
  }
}

public open external class NiagaraStackPropertyRow(
  outer: UObject,
) : NiagaraStackItemContent {
  @JsName("CategorySpacer")
  public open var categorySpacer: NiagaraStackSpacer

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackPropertyRow

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackPropertyRow

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackPropertyRow

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackPropertyRow

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackPropertyRow

    @JsName("C")
    public fun copy(other: Any): NiagaraStackPropertyRow
  }
}

public open external class NiagaraStackRendererItem(
  outer: UObject,
) : NiagaraStackItem {
  @JsName("RendererObject")
  public open var rendererObject: NiagaraStackObject

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackRendererItem

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackRendererItem

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackRendererItem

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackRendererItem

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackRendererItem

    @JsName("C")
    public fun copy(other: Any): NiagaraStackRendererItem
  }
}

public open external class NiagaraStackRenderItemGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackRenderItemGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackRenderItemGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackRenderItemGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackRenderItemGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackRenderItemGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackRenderItemGroup
  }
}

public open external class NiagaraStackSystemPropertiesGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackSystemPropertiesGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackSystemPropertiesGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackSystemPropertiesGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackSystemPropertiesGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackSystemPropertiesGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackSystemPropertiesGroup
  }
}

public open external class NiagaraStackSystemUserParametersGroup(
  outer: UObject,
) : NiagaraStackItemGroup {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NiagaraStackSystemUserParametersGroup

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NiagaraStackSystemUserParametersGroup

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NiagaraStackSystemUserParametersGroup

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NiagaraStackSystemUserParametersGroup

    @JsName("C")
    public fun copy(other: UObject): NiagaraStackSystemUserParametersGroup

    @JsName("C")
    public fun copy(other: Any): NiagaraStackSystemUserParametersGroup
  }
}

public external interface EventListenerObject {
  public fun handleEvent(event: Event): Unit
}
