// Generated by Detonate Productions Declaration Generation, do not edit manually!
@file:Suppress(
  "INTERFACE_WITH_SUPERCLASS",
  "OVERRIDING_FINAL_MEMBER",
  "RETURN_TYPE_MISMATCH_ON_OVERRIDE",
  "CONFLICTING_OVERLOADS",
)

package ue


import org.w3c.dom.events.Event


@JsName("OnSelectionChanged__PythonCallable")
public open external class OnSelectionChangedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSelectionChangedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSelectionChangedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSelectionChangedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSelectionChangedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSelectionChangedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSelectionChangedPythonCallable
  }
}

@JsName("OnUsesToolkits__PythonCallable")
public open external class OnUsesToolkitsPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnUsesToolkitsPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnUsesToolkitsPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnUsesToolkitsPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnUsesToolkitsPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnUsesToolkitsPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnUsesToolkitsPythonCallable
  }
}

@JsName("QueryVector__PythonCallable")
public open external class QueryVectorPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): QueryVectorPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): QueryVectorPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): QueryVectorPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): QueryVectorPythonCallable

    @JsName("C")
    public fun copy(other: UObject): QueryVectorPythonCallable

    @JsName("C")
    public fun copy(other: Any): QueryVectorPythonCallable
  }
}

@JsName("Viewport0__PythonCallable")
public open external class Viewport0PythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): Viewport0PythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): Viewport0PythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): Viewport0PythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): Viewport0PythonCallable

    @JsName("C")
    public fun copy(other: UObject): Viewport0PythonCallable

    @JsName("C")
    public fun copy(other: Any): Viewport0PythonCallable
  }
}

@JsName("ViewportAxis__PythonCallable")
public open external class ViewportAxisPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportAxisPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportAxisPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportAxisPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportAxisPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ViewportAxisPythonCallable

    @JsName("C")
    public fun copy(other: Any): ViewportAxisPythonCallable
  }
}

@JsName("ViewportDelta__PythonCallable")
public open external class ViewportDeltaPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportDeltaPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportDeltaPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportDeltaPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportDeltaPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ViewportDeltaPythonCallable

    @JsName("C")
    public fun copy(other: Any): ViewportDeltaPythonCallable
  }
}

@JsName("ViewportKey__PythonCallable")
public open external class ViewportKeyPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportKeyPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportKeyPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportKeyPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportKeyPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ViewportKeyPythonCallable

    @JsName("C")
    public fun copy(other: Any): ViewportKeyPythonCallable
  }
}

@JsName("ViewportXY__PythonCallable")
public open external class ViewportXyPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ViewportXyPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ViewportXyPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ViewportXyPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ViewportXyPythonCallable

    @JsName("C")
    public fun copy(other: UObject): ViewportXyPythonCallable

    @JsName("C")
    public fun copy(other: Any): ViewportXyPythonCallable
  }
}

@JsName("OnGetWidgetLocation__PythonCallable")
public open external class OnGetWidgetLocationPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGetWidgetLocationPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnGetWidgetLocationPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGetWidgetLocationPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGetWidgetLocationPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGetWidgetLocationPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGetWidgetLocationPythonCallable
  }
}

@JsName("OnGetWidgetMode__PythonCallable")
public open external class OnGetWidgetModePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGetWidgetModePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnGetWidgetModePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGetWidgetModePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGetWidgetModePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGetWidgetModePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGetWidgetModePythonCallable
  }
}

@JsName("OnGetWidgetRotation__PythonCallable")
public open external class OnGetWidgetRotationPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnGetWidgetRotationPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnGetWidgetRotationPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnGetWidgetRotationPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnGetWidgetRotationPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnGetWidgetRotationPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnGetWidgetRotationPythonCallable
  }
}

@JsName("OnInputAxis__PythonCallable")
public open external class OnInputAxisPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInputAxisPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInputAxisPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInputAxisPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInputAxisPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInputAxisPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInputAxisPythonCallable
  }
}

@JsName("OnInputKey__PythonCallable")
public open external class OnInputKeyPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInputKeyPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInputKeyPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInputKeyPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInputKeyPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInputKeyPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInputKeyPythonCallable
  }
}

@JsName("OnInputWidgetDelta__PythonCallable")
public open external class OnInputWidgetDeltaPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnInputWidgetDeltaPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnInputWidgetDeltaPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnInputWidgetDeltaPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnInputWidgetDeltaPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnInputWidgetDeltaPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnInputWidgetDeltaPythonCallable
  }
}

@JsName("OnMouseEnter__PythonCallable")
public open external class OnMouseEnterPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMouseEnterPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMouseEnterPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMouseEnterPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMouseEnterPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMouseEnterPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMouseEnterPythonCallable
  }
}

@JsName("OnMouseLeave__PythonCallable")
public open external class OnMouseLeavePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMouseLeavePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMouseLeavePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMouseLeavePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMouseLeavePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMouseLeavePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMouseLeavePythonCallable
  }
}

@JsName("OnMouseMove__PythonCallable")
public open external class OnMouseMovePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnMouseMovePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnMouseMovePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnMouseMovePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnMouseMovePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnMouseMovePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnMouseMovePythonCallable
  }
}

@JsName("OnViewportClick__PythonCallable")
public open external class OnViewportClickPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnViewportClickPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnViewportClickPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnViewportClickPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnViewportClickPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnViewportClickPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnViewportClickPythonCallable
  }
}

@JsName("OnViewportDraw__PythonCallable")
public open external class OnViewportDrawPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnViewportDrawPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnViewportDrawPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnViewportDrawPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnViewportDrawPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnViewportDrawPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnViewportDrawPythonCallable
  }
}

@JsName("OnViewportDrawCanvas__PythonCallable")
public open external class OnViewportDrawCanvasPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnViewportDrawCanvasPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnViewportDrawCanvasPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnViewportDrawCanvasPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnViewportDrawCanvasPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnViewportDrawCanvasPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnViewportDrawCanvasPythonCallable
  }
}

@JsName("OnViewportTrackingStarted__PythonCallable")
public open external class OnViewportTrackingStartedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnViewportTrackingStartedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnViewportTrackingStartedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnViewportTrackingStartedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnViewportTrackingStartedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnViewportTrackingStartedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnViewportTrackingStartedPythonCallable
  }
}

@JsName("OnViewportTrackingStopped__PythonCallable")
public open external class OnViewportTrackingStoppedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnViewportTrackingStoppedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnViewportTrackingStoppedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnViewportTrackingStoppedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnViewportTrackingStoppedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnViewportTrackingStoppedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnViewportTrackingStoppedPythonCallable
  }
}

@JsName("JavascriptEditorTickSignature__PythonCallable")
public open external class JavascriptEditorTickSignaturePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): JavascriptEditorTickSignaturePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String):
        JavascriptEditorTickSignaturePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): JavascriptEditorTickSignaturePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): JavascriptEditorTickSignaturePythonCallable

    @JsName("C")
    public fun copy(other: UObject): JavascriptEditorTickSignaturePythonCallable

    @JsName("C")
    public fun copy(other: Any): JavascriptEditorTickSignaturePythonCallable
  }
}

@JsName("CloseTab__PythonCallable")
public open external class CloseTabPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CloseTabPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CloseTabPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CloseTabPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CloseTabPythonCallable

    @JsName("C")
    public fun copy(other: UObject): CloseTabPythonCallable

    @JsName("C")
    public fun copy(other: Any): CloseTabPythonCallable
  }
}

@JsName("OnTabActivated__PythonCallable")
public open external class OnTabActivatedPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnTabActivatedPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnTabActivatedPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnTabActivatedPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnTabActivatedPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnTabActivatedPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnTabActivatedPythonCallable
  }
}

@JsName("SpawnTab__PythonCallable")
public open external class SpawnTabPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): SpawnTabPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): SpawnTabPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): SpawnTabPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): SpawnTabPythonCallable

    @JsName("C")
    public fun copy(other: UObject): SpawnTabPythonCallable

    @JsName("C")
    public fun copy(other: Any): SpawnTabPythonCallable
  }
}

@JsName("JavascriptGetExtender__PythonCallable")
public open external class JavascriptGetExtenderPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): JavascriptGetExtenderPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): JavascriptGetExtenderPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): JavascriptGetExtenderPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): JavascriptGetExtenderPythonCallable

    @JsName("C")
    public fun copy(other: UObject): JavascriptGetExtenderPythonCallable

    @JsName("C")
    public fun copy(other: Any): JavascriptGetExtenderPythonCallable
  }
}

@JsName("OnColorChangedEvent__PythonCallable")
public open external class OnColorChangedEventPythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnColorChangedEventPythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnColorChangedEventPythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnColorChangedEventPythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnColorChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnColorChangedEventPythonCallable

    @JsName("C")
    public fun copy(other: Any): OnColorChangedEventPythonCallable
  }
}

@JsName("OnSetDefaultValue__PythonCallable")
public open external class OnSetDefaultValuePythonCallable(
  outer: UObject,
) : PythonCallableForDelegate {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): OnSetDefaultValuePythonCallable

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): OnSetDefaultValuePythonCallable

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): OnSetDefaultValuePythonCallable

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): OnSetDefaultValuePythonCallable

    @JsName("C")
    public fun copy(other: UObject): OnSetDefaultValuePythonCallable

    @JsName("C")
    public fun copy(other: Any): OnSetDefaultValuePythonCallable
  }
}

@JsName("AudioSynesthesiaNRTFactory")
public open external class AudioSynesthesiaNrtFactory(
  outer: UObject,
) : Factory {
  @JsName("AudioSynesthesiaNRTClass")
  public open var audioSynesthesiaNrtClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioSynesthesiaNrtFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioSynesthesiaNrtFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioSynesthesiaNrtFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioSynesthesiaNrtFactory

    @JsName("C")
    public fun copy(other: UObject): AudioSynesthesiaNrtFactory

    @JsName("C")
    public fun copy(other: Any): AudioSynesthesiaNrtFactory
  }
}

@JsName("AudioSynesthesiaNRTSettingsFactory")
public open external class AudioSynesthesiaNrtSettingsFactory(
  outer: UObject,
) : Factory {
  @JsName("AudioSynesthesiaNRTSettingsClass")
  public open var audioSynesthesiaNrtSettingsClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioSynesthesiaNrtSettingsFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioSynesthesiaNrtSettingsFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioSynesthesiaNrtSettingsFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioSynesthesiaNrtSettingsFactory

    @JsName("C")
    public fun copy(other: UObject): AudioSynesthesiaNrtSettingsFactory

    @JsName("C")
    public fun copy(other: Any): AudioSynesthesiaNrtSettingsFactory
  }
}

public open external class AudioSynesthesiaSettingsFactory(
  outer: UObject,
) : Factory {
  @JsName("AudioSynesthesiaSettingsClass")
  public open var audioSynesthesiaSettingsClass: UnrealEngineClass

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AudioSynesthesiaSettingsFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AudioSynesthesiaSettingsFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AudioSynesthesiaSettingsFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AudioSynesthesiaSettingsFactory

    @JsName("C")
    public fun copy(other: UObject): AudioSynesthesiaSettingsFactory

    @JsName("C")
    public fun copy(other: Any): AudioSynesthesiaSettingsFactory
  }
}

public open external class LevelInstanceEditorMode(
  outer: UObject,
) : EdMode {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelInstanceEditorMode

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelInstanceEditorMode

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelInstanceEditorMode

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelInstanceEditorMode

    @JsName("C")
    public fun copy(other: UObject): LevelInstanceEditorMode

    @JsName("C")
    public fun copy(other: Any): LevelInstanceEditorMode
  }
}

public open external class LevelInstanceEditorSettings(
  outer: UObject,
) : UObject {
  @JsName("TemplateMapInfos")
  public open var templateMapInfos: Array<TemplateMapInfo>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LevelInstanceEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LevelInstanceEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LevelInstanceEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LevelInstanceEditorSettings

    @JsName("C")
    public fun copy(other: UObject): LevelInstanceEditorSettings

    @JsName("C")
    public fun copy(other: Any): LevelInstanceEditorSettings
  }
}

@JsName("MockAI")
public open external class MockAi(
  outer: UObject,
) : UObject {
  @JsName("Actor")
  public open var actor: Actor

  @JsName("BBComp")
  public open var bbComp: BlackboardComponent

  @JsName("BrainComp")
  public open var brainComp: BrainComponent

  @JsName("PerceptionComp")
  public open var perceptionComp: AiPerceptionComponent

  @JsName("PawnActionComp")
  public open var pawnActionComp: PawnActionsComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MockAi

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MockAi

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MockAi

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MockAi

    @JsName("C")
    public fun copy(other: UObject): MockAi

    @JsName("C")
    public fun copy(other: Any): MockAi
  }
}

@JsName("MockAI_BT")
public open external class MockAibt(
  outer: UObject,
) : MockAi {
  @JsName("BTComp")
  public open var btComp: BehaviorTreeComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MockAibt

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MockAibt

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MockAibt

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MockAibt

    @JsName("C")
    public fun copy(other: UObject): MockAibt

    @JsName("C")
    public fun copy(other: Any): MockAibt
  }
}

@JsName("MockTask_Log")
public open external class MockTaskLog(
  outer: UObject,
) : GameplayTask {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MockTaskLog

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MockTaskLog

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MockTaskLog

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MockTaskLog

    @JsName("C")
    public fun copy(other: UObject): MockTaskLog

    @JsName("C")
    public fun copy(other: Any): MockTaskLog
  }
}

public open external class MockGameplayTasksComponent(
  outer: UObject,
) : GameplayTasksComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MockGameplayTasksComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MockGameplayTasksComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MockGameplayTasksComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MockGameplayTasksComponent

    @JsName("C")
    public fun copy(other: UObject): MockGameplayTasksComponent

    @JsName("C")
    public fun copy(other: Any): MockGameplayTasksComponent
  }
}

public open external class MockGameplayTaskOwner(
  outer: UObject,
) : UObject {
  @JsName("GTComponent")
  public open var gtComponent: GameplayTasksComponent

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MockGameplayTaskOwner

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MockGameplayTaskOwner

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MockGameplayTaskOwner

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MockGameplayTaskOwner

    @JsName("C")
    public fun copy(other: UObject): MockGameplayTaskOwner

    @JsName("C")
    public fun copy(other: Any): MockGameplayTaskOwner
  }
}

@JsName("TestBTDecorator_Blackboard")
public open external class TestBtDecoratorBlackboard(
  outer: UObject,
) : BtDecoratorBlackboard {
  @JsName("LogIndexBecomeRelevant")
  public open var logIndexBecomeRelevant: Number

  @JsName("LogIndexCeaseRelevant")
  public open var logIndexCeaseRelevant: Number

  @JsName("LogIndexCalculate")
  public open var logIndexCalculate: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtDecoratorBlackboard

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtDecoratorBlackboard

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtDecoratorBlackboard

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtDecoratorBlackboard

    @JsName("C")
    public fun copy(other: UObject): TestBtDecoratorBlackboard

    @JsName("C")
    public fun copy(other: Any): TestBtDecoratorBlackboard
  }
}

@JsName("TestBTDecorator_CantExecute")
public open external class TestBtDecoratorCantExecute(
  outer: UObject,
) : BtDecorator {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtDecoratorCantExecute

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtDecoratorCantExecute

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtDecoratorCantExecute

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtDecoratorCantExecute

    @JsName("C")
    public fun copy(other: UObject): TestBtDecoratorCantExecute

    @JsName("C")
    public fun copy(other: Any): TestBtDecoratorCantExecute
  }
}

@JsName("TestBTDecorator_DelayedAbort")
public open external class TestBtDecoratorDelayedAbort(
  outer: UObject,
) : BtDecorator {
  @JsName("DelayTicks")
  public open var delayTicks: Number

  @JsName("bOnlyOnce")
  public open var onlyOnce: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtDecoratorDelayedAbort

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtDecoratorDelayedAbort

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtDecoratorDelayedAbort

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtDecoratorDelayedAbort

    @JsName("C")
    public fun copy(other: UObject): TestBtDecoratorDelayedAbort

    @JsName("C")
    public fun copy(other: Any): TestBtDecoratorDelayedAbort
  }
}

@JsName("TestBTService_Log")
public open external class TestBtServiceLog(
  outer: UObject,
) : BtService {
  @JsName("LogActivation")
  public open var logActivation: Number

  @JsName("LogDeactivation")
  public open var logDeactivation: Number

  @JsName("KeyNameTick")
  public open var keyNameTick: String

  @JsName("KeyNameBecomeRelevant")
  public open var keyNameBecomeRelevant: String

  @JsName("KeyNameCeaseRelevant")
  public open var keyNameCeaseRelevant: String

  @JsName("LogTick")
  public open var logTick: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtServiceLog

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtServiceLog

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtServiceLog

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtServiceLog

    @JsName("C")
    public fun copy(other: UObject): TestBtServiceLog

    @JsName("C")
    public fun copy(other: Any): TestBtServiceLog
  }
}

@JsName("TestBTTask_LatentWithFlags")
public open external class TestBtTaskLatentWithFlags(
  outer: UObject,
) : BtTaskNode {
  @JsName("LogIndexExecuteStart")
  public open var logIndexExecuteStart: Number

  @JsName("LogIndexExecuting")
  public open var logIndexExecuting: Number

  @JsName("LogIndexExecuteFinish")
  public open var logIndexExecuteFinish: Number

  @JsName("LogIndexAbortStart")
  public open var logIndexAbortStart: Number

  @JsName("LogIndexAborting")
  public open var logIndexAborting: Number

  @JsName("LogIndexAbortFinish")
  public open var logIndexAbortFinish: Number

  @JsName("ExecuteHalfTicks")
  public open var executeHalfTicks: Number

  @JsName("AbortHalfTicks")
  public open var abortHalfTicks: Number

  @JsName("KeyNameExecute")
  public open var keyNameExecute: String

  @JsName("KeyNameAbort")
  public open var keyNameAbort: String

  @JsName("LogResult")
  public open var logResult: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtTaskLatentWithFlags

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtTaskLatentWithFlags

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtTaskLatentWithFlags

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtTaskLatentWithFlags

    @JsName("C")
    public fun copy(other: UObject): TestBtTaskLatentWithFlags

    @JsName("C")
    public fun copy(other: Any): TestBtTaskLatentWithFlags
  }
}

@JsName("TestBTTask_Log")
public open external class TestBtTaskLog(
  outer: UObject,
) : BtTaskNode {
  @JsName("LogIndex")
  public open var logIndex: Number

  @JsName("LogFinished")
  public open var logFinished: Number

  @JsName("ExecutionTicks")
  public open var executionTicks: Number

  @JsName("LogTickIndex")
  public open var logTickIndex: Number

  @JsName("LogResult")
  public open var logResult: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtTaskLog

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtTaskLog

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtTaskLog

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtTaskLog

    @JsName("C")
    public fun copy(other: UObject): TestBtTaskLog

    @JsName("C")
    public fun copy(other: Any): TestBtTaskLog
  }
}

@JsName("TestBTTask_SetFlag")
public open external class TestBtTaskSetFlag(
  outer: UObject,
) : BtTaskNode {
  @JsName("KeyName")
  public open var keyName: String

  @JsName("bValue")
  public open var value: Boolean

  @JsName("OnAbortKeyName")
  public open var onAbortKeyName: String

  @JsName("bOnAbortValue")
  public open var onAbortValue: Boolean

  @JsName("TaskResult")
  public open var taskResult: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtTaskSetFlag

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtTaskSetFlag

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtTaskSetFlag

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtTaskSetFlag

    @JsName("C")
    public fun copy(other: UObject): TestBtTaskSetFlag

    @JsName("C")
    public fun copy(other: Any): TestBtTaskSetFlag
  }
}

@JsName("TestBTTask_SetValue")
public open external class TestBtTaskSetValue(
  outer: UObject,
) : BtTaskNode {
  @JsName("KeyName")
  public open var keyName: String

  @JsName("Value")
  public open var value: Number

  @JsName("OnAbortKeyName")
  public open var onAbortKeyName: String

  @JsName("OnAbortValue")
  public open var onAbortValue: Number

  @JsName("TaskResult")
  public open var taskResult: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestBtTaskSetValue

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestBtTaskSetValue

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestBtTaskSetValue

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestBtTaskSetValue

    @JsName("C")
    public fun copy(other: UObject): TestBtTaskSetValue

    @JsName("C")
    public fun copy(other: Any): TestBtTaskSetValue
  }
}

@JsName("TestPawnAction_Log")
public open external class TestPawnActionLog(
  outer: UObject,
) : PawnAction {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestPawnActionLog

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestPawnActionLog

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestPawnActionLog

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestPawnActionLog

    @JsName("C")
    public fun copy(other: UObject): TestPawnActionLog

    @JsName("C")
    public fun copy(other: Any): TestPawnActionLog
  }
}

@JsName("TestPawnAction_CallFunction")
public open external class TestPawnActionCallFunction(
  outer: UObject,
) : TestPawnActionLog {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): TestPawnActionCallFunction

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): TestPawnActionCallFunction

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): TestPawnActionCallFunction

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): TestPawnActionCallFunction

    @JsName("C")
    public fun copy(other: UObject): TestPawnActionCallFunction

    @JsName("C")
    public fun copy(other: Any): TestPawnActionCallFunction
  }
}

@JsName("ELiveCodingStartupMode")
public external object LiveCodingStartupMode {
  public var Automatic: String

  public var AutomaticButHidden: String

  public var Manual: String

  @JsName("ELiveCodingStartupMode_MAX")
  public var Max: String
}

public open external class LiveCodingSettings(
  outer: UObject,
) : UObject {
  @JsName("bEnabled")
  public open var enabled: Boolean

  @JsName("Startup")
  public open var startup: String

  @JsName("bEnableReinstancing")
  public open var enableReinstancing: Boolean

  @JsName("bAutomaticallyCompileNewClasses")
  public open var automaticallyCompileNewClasses: Boolean

  @JsName("bPreloadEngineModules")
  public open var preloadEngineModules: Boolean

  @JsName("bPreloadEnginePluginModules")
  public open var preloadEnginePluginModules: Boolean

  @JsName("bPreloadProjectModules")
  public open var preloadProjectModules: Boolean

  @JsName("bPreloadProjectPluginModules")
  public open var preloadProjectPluginModules: Boolean

  @JsName("PreloadNamedModules")
  public open var preloadNamedModules: Array<String>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LiveCodingSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LiveCodingSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LiveCodingSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LiveCodingSettings

    @JsName("C")
    public fun copy(other: UObject): LiveCodingSettings

    @JsName("C")
    public fun copy(other: Any): LiveCodingSettings
  }
}

public open external class NaniteAuditErrorArguments(
  outer: UObject,
) : EditorConfigBase {
  @JsName("ProhibitUnsupportedBlendMode")
  public open var prohibitUnsupportedBlendMode: Boolean

  @JsName("ProhibitVertexInterpolator")
  public open var prohibitVertexInterpolator: Boolean

  @JsName("ProhibitPixelDepthOffset")
  public open var prohibitPixelDepthOffset: Boolean

  @JsName("ProhibitWorldPositionOffset")
  public open var prohibitWorldPositionOffset: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NaniteAuditErrorArguments

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NaniteAuditErrorArguments

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NaniteAuditErrorArguments

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NaniteAuditErrorArguments

    @JsName("C")
    public fun copy(other: UObject): NaniteAuditErrorArguments

    @JsName("C")
    public fun copy(other: Any): NaniteAuditErrorArguments
  }
}

public open external class NaniteAuditOptimizeArguments(
  outer: UObject,
) : EditorConfigBase {
  @JsName("TriangleThreshold")
  public open var triangleThreshold: Any

  @JsName("DisallowUnsupportedBlendMode")
  public open var disallowUnsupportedBlendMode: Boolean

  @JsName("DisallowVertexInterpolator")
  public open var disallowVertexInterpolator: Boolean

  @JsName("DisallowPixelDepthOffset")
  public open var disallowPixelDepthOffset: Boolean

  @JsName("DisallowWorldPositionOffset")
  public open var disallowWorldPositionOffset: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): NaniteAuditOptimizeArguments

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): NaniteAuditOptimizeArguments

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): NaniteAuditOptimizeArguments

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): NaniteAuditOptimizeArguments

    @JsName("C")
    public fun copy(other: UObject): NaniteAuditOptimizeArguments

    @JsName("C")
    public fun copy(other: Any): NaniteAuditOptimizeArguments
  }
}

public open external class StructViewerProjectSettings(
  outer: UObject,
) : UObject {
  @JsName("InternalOnlyPaths")
  public open var internalOnlyPaths: Array<DirectoryPath>

  @JsName("InternalOnlyStructs")
  public open var internalOnlyStructs: Array<ScriptStruct>

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): StructViewerProjectSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): StructViewerProjectSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): StructViewerProjectSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): StructViewerProjectSettings

    @JsName("C")
    public fun copy(other: UObject): StructViewerProjectSettings

    @JsName("C")
    public fun copy(other: Any): StructViewerProjectSettings
  }
}

public open external class AnimationBlueprintEditorSettings(
  outer: UObject,
) : UObject {
  @JsName("bPoseWatchSelectedNodes")
  public open var poseWatchSelectedNodes: Boolean

  @JsName("bShowGraphCornerText")
  public open var showGraphCornerText: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AnimationBlueprintEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AnimationBlueprintEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AnimationBlueprintEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AnimationBlueprintEditorSettings

    @JsName("C")
    public fun copy(other: UObject): AnimationBlueprintEditorSettings

    @JsName("C")
    public fun copy(other: Any): AnimationBlueprintEditorSettings
  }
}

public open external class LocalizationDashboardSettings(
  outer: UObject,
) : UObject {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LocalizationDashboardSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LocalizationDashboardSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LocalizationDashboardSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LocalizationDashboardSettings

    @JsName("C")
    public fun copy(other: UObject): LocalizationDashboardSettings

    @JsName("C")
    public fun copy(other: Any): LocalizationDashboardSettings
  }
}

public open external class MeshApproximationSettingsObject(
  outer: UObject,
) : UObject {
  @JsName("Settings")
  public open var settings: MeshApproximationSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshApproximationSettingsObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshApproximationSettingsObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshApproximationSettingsObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshApproximationSettingsObject

    @JsName("C")
    public fun copy(other: UObject): MeshApproximationSettingsObject

    @JsName("C")
    public fun copy(other: Any): MeshApproximationSettingsObject
  }
}

public open external class MeshInstancingSettings {
  @JsName("ActorClassToUse")
  public open var actorClassToUse: UnrealEngineClass

  @JsName("InstanceReplacementThreshold")
  public open var instanceReplacementThreshold: Number

  @JsName("bSkipMeshesWithVertexColors")
  public open var skipMeshesWithVertexColors: Boolean

  @JsName("bUseHLODVolumes")
  public open var useHlodVolumes: Boolean

  @JsName("ISMComponentToUse")
  public open var ismComponentToUse: UnrealEngineClass

  public open fun clone(): MeshInstancingSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): MeshInstancingSettings

    @JsName("C")
    public fun copy(other: Any): MeshInstancingSettings
  }
}

public open external class MeshInstancingSettingsObject(
  outer: UObject,
) : UObject {
  @JsName("Settings")
  public open var settings: MeshInstancingSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshInstancingSettingsObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshInstancingSettingsObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshInstancingSettingsObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshInstancingSettingsObject

    @JsName("C")
    public fun copy(other: UObject): MeshInstancingSettingsObject

    @JsName("C")
    public fun copy(other: Any): MeshInstancingSettingsObject
  }
}

public open external class MeshMergingSettingsObject(
  outer: UObject,
) : UObject {
  @JsName("Settings")
  public open var settings: MeshMergingSettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshMergingSettingsObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshMergingSettingsObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshMergingSettingsObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshMergingSettingsObject

    @JsName("C")
    public fun copy(other: UObject): MeshMergingSettingsObject

    @JsName("C")
    public fun copy(other: Any): MeshMergingSettingsObject
  }
}

public open external class MeshProxySettingsObject(
  outer: UObject,
) : UObject {
  @JsName("Settings")
  public open var settings: MeshProxySettings

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): MeshProxySettingsObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): MeshProxySettingsObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): MeshProxySettingsObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): MeshProxySettingsObject

    @JsName("C")
    public fun copy(other: UObject): MeshProxySettingsObject

    @JsName("C")
    public fun copy(other: Any): MeshProxySettingsObject
  }
}

public open external class EditorKeyboardShortcutSettings(
  outer: UObject,
) : DeveloperSettings {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): EditorKeyboardShortcutSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): EditorKeyboardShortcutSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): EditorKeyboardShortcutSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): EditorKeyboardShortcutSettings

    @JsName("C")
    public fun copy(other: UObject): EditorKeyboardShortcutSettings

    @JsName("C")
    public fun copy(other: Any): EditorKeyboardShortcutSettings
  }
}

@JsName("HLODLayerFactory")
public open external class HlodLayerFactory(
  outer: UObject,
) : Factory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): HlodLayerFactory

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): HlodLayerFactory

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): HlodLayerFactory

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): HlodLayerFactory

    @JsName("C")
    public fun copy(other: UObject): HlodLayerFactory

    @JsName("C")
    public fun copy(other: Any): HlodLayerFactory
  }
}

public open external class WorldPartitionConvertOptions(
  outer: UObject,
) : UObject {
  @JsName("CommandletClass")
  public open var commandletClass: UnrealEngineClass

  @JsName("bInPlace")
  public open var inPlace: Boolean

  @JsName("bDeleteSourceLevels")
  public open var deleteSourceLevels: Boolean

  @JsName("bGenerateIni")
  public open var generateIni: Boolean

  @JsName("bReportOnly")
  public open var reportOnly: Boolean

  @JsName("bVerbose")
  public open var verbose: Boolean

  @JsName("bSkipStableGUIDValidation")
  public open var skipStableGuidValidation: Boolean

  @JsName("bOnlyMergeSubLevels")
  public open var onlyMergeSubLevels: Boolean

  @JsName("bSaveFoliageTypeToContentFolder")
  public open var saveFoliageTypeToContentFolder: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionConvertOptions

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionConvertOptions

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionConvertOptions

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionConvertOptions

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionConvertOptions

    @JsName("C")
    public fun copy(other: Any): WorldPartitionConvertOptions
  }
}

public open external class WorldPartitionEditorSettings(
  outer: UObject,
) : DeveloperSettings {
  @JsName("CommandletClass")
  public open var commandletClass: UnrealEngineClass

  @JsName("InstancedFoliageGridSize")
  public open var instancedFoliageGridSize: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): WorldPartitionEditorSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): WorldPartitionEditorSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): WorldPartitionEditorSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): WorldPartitionEditorSettings

    @JsName("C")
    public fun copy(other: UObject): WorldPartitionEditorSettings

    @JsName("C")
    public fun copy(other: Any): WorldPartitionEditorSettings
  }
}

@JsName("ESVGTheme")
public external object EsvgTheme {
  @JsName("Dark")
  public var dark: String

  @JsName("Light")
  public var light: String

  @JsName("ESVGTheme_MAX")
  public var esvgThemeMax: String
}

@JsName("CSVtoSVGArugments")
public open external class CsVtoSvgArugments(
  outer: UObject,
) : EditorConfigBase {
  public open var CSV: FilePath

  @JsName("OutputDirectory")
  public open var outputDirectory: DirectoryPath

  @JsName("OutputFilename")
  public open var outputFilename: String

  public open var skipRows: Number

  @JsName("MinX")
  public open var minX: Number

  @JsName("MaxX")
  public open var maxX: Number

  @JsName("MinY")
  public open var minY: Number

  @JsName("MaxY")
  public open var maxY: Number

  public open var smooth: Boolean

  public open var smoothKernelSize: Number

  public open var smoothKernelPercent: Number

  @JsName("Width")
  public open var width: Number

  @JsName("Height")
  public open var height: Number

  @JsName("Title")
  public open var title: String

  public open var noMetadata: Boolean

  public open var graphOnly: Boolean

  public open var budget: Number

  @JsName("Thickness")
  public open var thickness: Number

  public open var theme: String

  @JsName("Threshold")
  public open var threshold: Number

  public open var stacked: Boolean

  public open var stacktotalstack: String

  @JsName("Interactive")
  public open var interactive: Boolean

  public open var showaverages: Boolean

  public open var colourOffset: Number

  public open var averageThreshold: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): CsVtoSvgArugments

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): CsVtoSvgArugments

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): CsVtoSvgArugments

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): CsVtoSvgArugments

    @JsName("C")
    public fun copy(other: UObject): CsVtoSvgArugments

    @JsName("C")
    public fun copy(other: Any): CsVtoSvgArugments
  }
}

@JsName("EAndroidInstallLocation")
public external object AndroidInstallLocation {
  public var InternalOnly: String

  public var PreferExternal: String

  public var Auto: String

  @JsName("EAndroidInstallLocation_MAX")
  public var Max: String
}

@JsName("EAndroidScreenOrientation")
public external object AndroidScreenOrientation {
  public var Portrait: String

  public var ReversePortrait: String

  public var SensorPortrait: String

  public var Landscape: String

  public var ReverseLandscape: String

  public var SensorLandscape: String

  public var Sensor: String

  public var FullSensor: String

  @JsName("EAndroidScreenOrientation_MAX")
  public var Max: String
}

@JsName("EAndroidDepthBufferPreference")
public external object AndroidDepthBufferPreference {
  public var Default: String

  public var Bits16: String

  public var Bits24: String

  public var Bits32: String

  @JsName("EAndroidDepthBufferPreference_MAX")
  public var Max: String
}

@JsName("EOculusMobileDevice")
public external object OculusMobileDevice {
  public var Quest: String

  @JsName("Quest2")
  public var Two: String

  @JsName("EOculusMobileDevice_MAX")
  public var Max: String
}

public open external class GooglePlayAchievementMapping {
  @JsName("Name")
  public open var name: String

  @JsName("AchievementID")
  public open var achievementId: String

  public open fun clone(): GooglePlayAchievementMapping

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GooglePlayAchievementMapping

    @JsName("C")
    public fun copy(other: Any): GooglePlayAchievementMapping
  }
}

public open external class GooglePlayLeaderboardMapping {
  @JsName("Name")
  public open var name: String

  @JsName("LeaderboardID")
  public open var leaderboardId: String

  public open fun clone(): GooglePlayLeaderboardMapping

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GooglePlayLeaderboardMapping

    @JsName("C")
    public fun copy(other: Any): GooglePlayLeaderboardMapping
  }
}

@JsName("EAndroidAudio")
public external object AndroidAudio {
  public var Default: String

  public var OGG: String

  public var ADPCM: String

  @JsName("EAndroidAudio_MAX")
  public var Max: String
}

@JsName("EAndroidGraphicsDebugger")
public external object AndroidGraphicsDebugger {
  public var None: String

  public var Mali: String

  public var Adreno: String

  @JsName("EAndroidGraphicsDebugger_MAX")
  public var Max: String
}

public open external class AndroidRuntimeSettings(
  outer: UObject,
) : UObject {
  @JsName("PackageName")
  public open var packageName: String

  @JsName("StoreVersion")
  public open var storeVersion: Number

  @JsName("StoreVersionOffsetArmV7")
  public open var storeVersionOffsetArmV7: Number

  @JsName("StoreVersionOffsetArm64")
  public open var storeVersionOffsetArm64: Number

  @JsName("StoreVersionOffsetX8664")
  public open var storeVersionOffsetX8664: Number

  @JsName("ApplicationDisplayName")
  public open var applicationDisplayName: String

  @JsName("VersionDisplayName")
  public open var versionDisplayName: String

  @JsName("MinSDKVersion")
  public open var minSdkVersion: Number

  @JsName("TargetSDKVersion")
  public open var targetSdkVersion: Number

  @JsName("InstallLocation")
  public open var installLocation: String

  @JsName("bEnableGradle")
  public open var enableGradle: Boolean

  @JsName("bEnableLint")
  public open var enableLint: Boolean

  @JsName("bPackageDataInsideApk")
  public open var packageDataInsideApk: Boolean

  @JsName("bCreateAllPlatformsInstall")
  public open var createAllPlatformsInstall: Boolean

  @JsName("bDisableVerifyOBBOnStartUp")
  public open var disableVerifyObbOnStartUp: Boolean

  @JsName("bForceSmallOBBFiles")
  public open var forceSmallObbFiles: Boolean

  @JsName("bAllowLargeOBBFiles")
  public open var allowLargeObbFiles: Boolean

  @JsName("bAllowPatchOBBFile")
  public open var allowPatchObbFile: Boolean

  @JsName("bAllowOverflowOBBFiles")
  public open var allowOverflowObbFiles: Boolean

  @JsName("bUseExternalFilesDir")
  public open var useExternalFilesDir: Boolean

  @JsName("bPublicLogFiles")
  public open var publicLogFiles: Boolean

  @JsName("Orientation")
  public open var orientation: String

  @JsName("MaxAspectRatio")
  public open var maxAspectRatio: Number

  @JsName("bUseDisplayCutout")
  public open var useDisplayCutout: Boolean

  @JsName("bRestoreNotificationsOnReboot")
  public open var restoreNotificationsOnReboot: Boolean

  @JsName("bFullScreen")
  public open var fullScreen: Boolean

  @JsName("bEnableNewKeyboard")
  public open var enableNewKeyboard: Boolean

  @JsName("DepthBufferPreference")
  public open var depthBufferPreference: String

  @JsName("bValidateTextureFormats")
  public open var validateTextureFormats: Boolean

  @JsName("bForceCompressNativeLibs")
  public open var forceCompressNativeLibs: Boolean

  @JsName("bEnableAdvancedBinaryCompression")
  public open var enableAdvancedBinaryCompression: Boolean

  @JsName("bEnableBundle")
  public open var enableBundle: Boolean

  @JsName("bEnableUniversalAPK")
  public open var enableUniversalApk: Boolean

  @JsName("bBundleABISplit")
  public open var bundleAbiSplit: Boolean

  @JsName("bBundleLanguageSplit")
  public open var bundleLanguageSplit: Boolean

  @JsName("bBundleDensitySplit")
  public open var bundleDensitySplit: Boolean

  @JsName("ExtraManifestNodeTags")
  public open var extraManifestNodeTags: Array<String>

  @JsName("ExtraApplicationNodeTags")
  public open var extraApplicationNodeTags: Array<String>

  @JsName("ExtraApplicationSettings")
  public open var extraApplicationSettings: String

  @JsName("ExtraActivityNodeTags")
  public open var extraActivityNodeTags: Array<String>

  @JsName("ExtraActivitySettings")
  public open var extraActivitySettings: String

  @JsName("ExtraPermissions")
  public open var extraPermissions: Array<String>

  @JsName("bAndroidVoiceEnabled")
  public open var androidVoiceEnabled: Boolean

  @JsName("PackageForOculusMobile")
  public open var packageForOculusMobile: Array<String>

  @JsName("bRemoveOSIG")
  public open var removeOsig: Boolean

  @JsName("KeyStore")
  public open var keyStore: String

  @JsName("KeyAlias")
  public open var keyAlias: String

  @JsName("KeyStorePassword")
  public open var keyStorePassword: String

  @JsName("KeyPassword")
  public open var keyPassword: String

  @JsName("bBuildForArm64")
  public open var buildForArm64: Boolean

  @JsName("bBuildForX8664")
  public open var buildForX8664: Boolean

  @JsName("bBuildForES31")
  public open var buildForEs31: Boolean

  @JsName("bSupportsVulkan")
  public open var supportsVulkan: Boolean

  @JsName("bSupportsVulkanSM5")
  public open var supportsVulkanSm5: Boolean

  @JsName("DebugVulkanLayerDirectory")
  public open var debugVulkanLayerDirectory: DirectoryPath

  @JsName("DebugVulkanDeviceLayers")
  public open var debugVulkanDeviceLayers: Array<String>

  @JsName("DebugVulkanInstanceLayers")
  public open var debugVulkanInstanceLayers: Array<String>

  @JsName("bAndroidOpenGLSupportsBackbufferSampling")
  public open var androidOpenGlSupportsBackbufferSampling: Boolean

  @JsName("bDetectVulkanByDefault")
  public open var detectVulkanByDefault: Boolean

  @JsName("bBuildWithHiddenSymbolVisibility")
  public open var buildWithHiddenSymbolVisibility: Boolean

  @JsName("bSaveSymbols")
  public open var saveSymbols: Boolean

  @JsName("bForceLDLinker")
  public open var forceLdLinker: Boolean

  @JsName("bEnableGooglePlaySupport")
  public open var enableGooglePlaySupport: Boolean

  @JsName("bUseGetAccounts")
  public open var useGetAccounts: Boolean

  @JsName("GamesAppID")
  public open var gamesAppId: String

  @JsName("AchievementMap")
  public open var achievementMap: Array<GooglePlayAchievementMapping>

  @JsName("LeaderboardMap")
  public open var leaderboardMap: Array<GooglePlayLeaderboardMapping>

  @JsName("bEnableSnapshots")
  public open var enableSnapshots: Boolean

  @JsName("bSupportAdMob")
  public open var supportAdMob: Boolean

  @JsName("AdMobAdUnitID")
  public open var adMobAdUnitId: String

  @JsName("AdMobAdUnitIDs")
  public open var adMobAdUnitIDs: Array<String>

  @JsName("GooglePlayLicenseKey")
  public open var googlePlayLicenseKey: String

  @JsName("GCMClientSenderID")
  public open var gcmClientSenderId: String

  @JsName("bShowLaunchImage")
  public open var showLaunchImage: Boolean

  @JsName("bAllowIMU")
  public open var allowImu: Boolean

  @JsName("bAllowControllers")
  public open var allowControllers: Boolean

  @JsName("bBlockAndroidKeysOnControllers")
  public open var blockAndroidKeysOnControllers: Boolean

  @JsName("bControllersBlockDeviceFeedback")
  public open var controllersBlockDeviceFeedback: Boolean

  @JsName("AndroidAudio")
  public open var androidAudio: String

  @JsName("AudioSampleRate")
  public open var audioSampleRate: Number

  @JsName("AudioCallbackBufferFrameSize")
  public open var audioCallbackBufferFrameSize: Number

  @JsName("AudioNumBuffersToEnqueue")
  public open var audioNumBuffersToEnqueue: Number

  @JsName("AudioMaxChannels")
  public open var audioMaxChannels: Number

  @JsName("AudioNumSourceWorkers")
  public open var audioNumSourceWorkers: Number

  @JsName("SpatializationPlugin")
  public open var spatializationPlugin: String

  @JsName("ReverbPlugin")
  public open var reverbPlugin: String

  @JsName("OcclusionPlugin")
  public open var occlusionPlugin: String

  @JsName("CompressionOverrides")
  public open var compressionOverrides: PlatformRuntimeAudioCompressionOverrides

  @JsName("CacheSizeKB")
  public open var cacheSizeKb: Number

  @JsName("MaxChunkSizeOverrideKB")
  public open var maxChunkSizeOverrideKb: Number

  @JsName("bResampleForDevice")
  public open var resampleForDevice: Boolean

  @JsName("SoundCueCookQualityIndex")
  public open var soundCueCookQualityIndex: Number

  @JsName("MaxSampleRate")
  public open var maxSampleRate: Number

  @JsName("HighSampleRate")
  public open var highSampleRate: Number

  @JsName("MedSampleRate")
  public open var medSampleRate: Number

  @JsName("LowSampleRate")
  public open var lowSampleRate: Number

  @JsName("MinSampleRate")
  public open var minSampleRate: Number

  @JsName("CompressionQualityModifier")
  public open var compressionQualityModifier: Number

  @JsName("AutoStreamingThreshold")
  public open var autoStreamingThreshold: Number

  @JsName("AndroidGraphicsDebugger")
  public open var androidGraphicsDebugger: String

  @JsName("MaliGraphicsDebuggerPath")
  public open var maliGraphicsDebuggerPath: DirectoryPath

  @JsName("bEnableMaliPerfCounters")
  public open var enableMaliPerfCounters: Boolean

  @JsName("bMultiTargetFormat_ETC2")
  public open var multiTargetFormatEtc2: Boolean

  @JsName("bMultiTargetFormat_DXT")
  public open var multiTargetFormatDxt: Boolean

  @JsName("bMultiTargetFormat_ASTC")
  public open var multiTargetFormatAstc: Boolean

  @JsName("TextureFormatPriority_ETC2")
  public open var textureFormatPriorityEtc2: Number

  @JsName("TextureFormatPriority_DXT")
  public open var textureFormatPriorityDxt: Number

  @JsName("TextureFormatPriority_ASTC")
  public open var textureFormatPriorityAstc: Number

  @JsName("SDKAPILevelOverride")
  public open var sdkapiLevelOverride: String

  @JsName("NDKAPILevelOverride")
  public open var ndkapiLevelOverride: String

  @JsName("BuildToolsOverride")
  public open var buildToolsOverride: String

  @JsName("bStreamLandscapeMeshLODs")
  public open var streamLandscapeMeshLoDs: Boolean

  @JsName("bEnableDomStorage")
  public open var enableDomStorage: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AndroidRuntimeSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AndroidRuntimeSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AndroidRuntimeSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AndroidRuntimeSettings

    @JsName("C")
    public fun copy(other: UObject): AndroidRuntimeSettings

    @JsName("C")
    public fun copy(other: Any): AndroidRuntimeSettings
  }
}

@JsName("EIOSCloudKitSyncStrategy")
public external object EiosCloudKitSyncStrategy {
  @JsName("None")
  public var none: String

  @JsName("OnlyAtGameStart")
  public var onlyAtGameStart: String

  @JsName("Always")
  public var always: String

  @JsName("EIOSCloudKitSyncStrategy_MAX")
  public var eiosCloudKitSyncStrategyMax: String
}

@JsName("IOSBuildResourceDirectory")
public open external class IosBuildResourceDirectory {
  @JsName("Path")
  public open var path: String

  public open fun clone(): IosBuildResourceDirectory

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): IosBuildResourceDirectory

    @JsName("C")
    public fun copy(other: Any): IosBuildResourceDirectory
  }
}

@JsName("IOSBuildResourceFilePath")
public open external class IosBuildResourceFilePath {
  @JsName("FilePath")
  public open var filePath: String

  public open fun clone(): IosBuildResourceFilePath

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): IosBuildResourceFilePath

    @JsName("C")
    public fun copy(other: Any): IosBuildResourceFilePath
  }
}

@JsName("EIOSLandscapeOrientation")
public external object EiosLandscapeOrientation {
  @JsName("LandscapeLeft")
  public var landscapeLeft: String

  @JsName("LandscapeRight")
  public var landscapeRight: String

  @JsName("EIOSLandscapeOrientation_MAX")
  public var eiosLandscapeOrientationMax: String
}

@JsName("EPowerUsageFrameRateLock")
public external object PowerUsageFrameRateLock {
  @JsName("PUFRL_None")
  public var None: String

  @JsName("PUFRL_20")
  public var Twenty: String

  @JsName("PUFRL_30")
  public var Thirty: String

  @JsName("PUFRL_60")
  public var Sixty: String

  @JsName("PUFRL_MAX")
  public var Max: String
}

@JsName("EIOSVersion")
public external object EiosVersion {
  @JsName("IOS_14")
  public var ios14: String

  @JsName("IOS_15")
  public var ios15: String

  @JsName("IOS_MAX")
  public var iosmax: String
}

@JsName("IOSRuntimeSettings")
public open external class IosRuntimeSettings(
  outer: UObject,
) : UObject {
  @JsName("bEnableGameCenterSupport")
  public open var enableGameCenterSupport: Boolean

  @JsName("bEnableCloudKitSupport")
  public open var enableCloudKitSupport: Boolean

  @JsName("IOSCloudKitSyncStrategy")
  public open var iosCloudKitSyncStrategy: String

  @JsName("bEnableRemoteNotificationsSupport")
  public open var enableRemoteNotificationsSupport: Boolean

  @JsName("bEnableBackgroundFetch")
  public open var enableBackgroundFetch: Boolean

  @JsName("bSupportsMetal")
  public open var supportsMetal: Boolean

  @JsName("bSupportsMetalMRT")
  public open var supportsMetalMrt: Boolean

  @JsName("bBuildAsFramework")
  public open var buildAsFramework: Boolean

  @JsName("WindowsMetalToolchainOverride")
  public open var windowsMetalToolchainOverride: IosBuildResourceDirectory

  @JsName("bGeneratedSYMFile")
  public open var generatedSymFile: Boolean

  @JsName("bGeneratedSYMBundle")
  public open var generatedSymBundle: Boolean

  @JsName("bGenerateCrashReportSymbols")
  public open var generateCrashReportSymbols: Boolean

  @JsName("bGenerateXCArchive")
  public open var generateXcArchive: Boolean

  @JsName("bShipForBitcode")
  public open var shipForBitcode: Boolean

  @JsName("bEnableAdvertisingIdentifier")
  public open var enableAdvertisingIdentifier: Boolean

  @JsName("AdditionalLinkerFlags")
  public open var additionalLinkerFlags: String

  @JsName("AdditionalShippingLinkerFlags")
  public open var additionalShippingLinkerFlags: String

  @JsName("RemoteServerName")
  public open var remoteServerName: String

  @JsName("bUseRSync")
  public open var useRSync: Boolean

  @JsName("RSyncUsername")
  public open var rSyncUsername: String

  @JsName("RemoteServerOverrideBuildPath")
  public open var remoteServerOverrideBuildPath: String

  @JsName("CwRsyncInstallPath")
  public open var cwRsyncInstallPath: IosBuildResourceDirectory

  @JsName("SSHPrivateKeyLocation")
  public open var sshPrivateKeyLocation: String

  @JsName("SSHPrivateKeyOverridePath")
  public open var sshPrivateKeyOverridePath: IosBuildResourceFilePath

  @JsName("bRunAsCurrentUser")
  public open var runAsCurrentUser: Boolean

  @JsName("bGameSupportsMultipleActiveControllers")
  public open var gameSupportsMultipleActiveControllers: Boolean

  @JsName("bAllowRemoteRotation")
  public open var allowRemoteRotation: Boolean

  @JsName("bUseRemoteAsVirtualJoystick")
  public open var useRemoteAsVirtualJoystick: Boolean

  @JsName("bUseRemoteAbsoluteDpadValues")
  public open var useRemoteAbsoluteDpadValues: Boolean

  @JsName("bAllowControllers")
  public open var allowControllers: Boolean

  @JsName("bControllersBlockDeviceFeedback")
  public open var controllersBlockDeviceFeedback: Boolean

  @JsName("bDisableMotionData")
  public open var disableMotionData: Boolean

  @JsName("bSupportsPortraitOrientation")
  public open var supportsPortraitOrientation: Boolean

  @JsName("bSupportsUpsideDownOrientation")
  public open var supportsUpsideDownOrientation: Boolean

  @JsName("bSupportsLandscapeLeftOrientation")
  public open var supportsLandscapeLeftOrientation: Boolean

  @JsName("bSupportsLandscapeRightOrientation")
  public open var supportsLandscapeRightOrientation: Boolean

  @JsName("bSupportsITunesFileSharing")
  public open var supportsITunesFileSharing: Boolean

  @JsName("bSupportsFilesApp")
  public open var supportsFilesApp: Boolean

  @JsName("PreferredLandscapeOrientation")
  public open var preferredLandscapeOrientation: String

  @JsName("BundleDisplayName")
  public open var bundleDisplayName: String

  @JsName("BundleName")
  public open var bundleName: String

  @JsName("BundleIdentifier")
  public open var bundleIdentifier: String

  @JsName("VersionInfo")
  public open var versionInfo: String

  @JsName("FrameRateLock")
  public open var frameRateLock: String

  @JsName("bEnableDynamicMaxFPS")
  public open var enableDynamicMaxFps: Boolean

  @JsName("MinimumiOSVersion")
  public open var minimumiOsVersion: String

  @JsName("bSupportsIPad")
  public open var supportsIPad: Boolean

  @JsName("bSupportsIPhone")
  public open var supportsIPhone: Boolean

  @JsName("AdditionalPlistData")
  public open var additionalPlistData: String

  @JsName("bCustomLaunchscreenStoryboard")
  public open var customLaunchscreenStoryboard: Boolean

  @JsName("bEnableFacebookSupport")
  public open var enableFacebookSupport: Boolean

  @JsName("FacebookAppID")
  public open var facebookAppId: String

  @JsName("MobileProvision")
  public open var mobileProvision: String

  @JsName("SigningCertificate")
  public open var signingCertificate: String

  @JsName("bAutomaticSigning")
  public open var automaticSigning: Boolean

  @JsName("IOSTeamID")
  public open var iosTeamId: String

  @JsName("DevCenterUsername")
  public open var devCenterUsername: String

  @JsName("DevCenterPassword")
  public open var devCenterPassword: String

  @JsName("bDisableHTTPS")
  public open var disableHttps: Boolean

  @JsName("MetalLanguageVersion")
  public open var metalLanguageVersion: Number

  @JsName("UseFastIntrinsics")
  public open var useFastIntrinsics: Boolean

  @JsName("ForceFloats")
  public open var forceFloats: Boolean

  @JsName("EnableMathOptimisations")
  public open var enableMathOptimisations: Boolean

  @JsName("IndirectArgumentTier")
  public open var indirectArgumentTier: Number

  @JsName("bSupportAppleA8")
  public open var supportAppleA8: Boolean

  @JsName("bUseIntegratedKeyboard")
  public open var useIntegratedKeyboard: Boolean

  @JsName("AudioSampleRate")
  public open var audioSampleRate: Number

  @JsName("AudioCallbackBufferFrameSize")
  public open var audioCallbackBufferFrameSize: Number

  @JsName("AudioNumBuffersToEnqueue")
  public open var audioNumBuffersToEnqueue: Number

  @JsName("AudioMaxChannels")
  public open var audioMaxChannels: Number

  @JsName("AudioNumSourceWorkers")
  public open var audioNumSourceWorkers: Number

  @JsName("SpatializationPlugin")
  public open var spatializationPlugin: String

  @JsName("ReverbPlugin")
  public open var reverbPlugin: String

  @JsName("OcclusionPlugin")
  public open var occlusionPlugin: String

  @JsName("CompressionOverrides")
  public open var compressionOverrides: PlatformRuntimeAudioCompressionOverrides

  @JsName("CacheSizeKB")
  public open var cacheSizeKb: Number

  @JsName("MaxChunkSizeOverrideKB")
  public open var maxChunkSizeOverrideKb: Number

  @JsName("bResampleForDevice")
  public open var resampleForDevice: Boolean

  @JsName("SoundCueCookQualityIndex")
  public open var soundCueCookQualityIndex: Number

  @JsName("MaxSampleRate")
  public open var maxSampleRate: Number

  @JsName("HighSampleRate")
  public open var highSampleRate: Number

  @JsName("MedSampleRate")
  public open var medSampleRate: Number

  @JsName("LowSampleRate")
  public open var lowSampleRate: Number

  @JsName("MinSampleRate")
  public open var minSampleRate: Number

  @JsName("CompressionQualityModifier")
  public open var compressionQualityModifier: Number

  @JsName("AutoStreamingThreshold")
  public open var autoStreamingThreshold: Number

  @JsName("bStreamLandscapeMeshLODs")
  public open var streamLandscapeMeshLoDs: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): IosRuntimeSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): IosRuntimeSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): IosRuntimeSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): IosRuntimeSettings

    @JsName("C")
    public fun copy(other: UObject): IosRuntimeSettings

    @JsName("C")
    public fun copy(other: Any): IosRuntimeSettings
  }
}

public open external class HoloLensCorePackageStringResources {
  @JsName("PackageDisplayName")
  public open var packageDisplayName: String

  @JsName("PublisherDisplayName")
  public open var publisherDisplayName: String

  @JsName("PackageDescription")
  public open var packageDescription: String

  @JsName("ApplicationDisplayName")
  public open var applicationDisplayName: String

  @JsName("ApplicationDescription")
  public open var applicationDescription: String

  public open fun clone(): HoloLensCorePackageStringResources

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HoloLensCorePackageStringResources

    @JsName("C")
    public fun copy(other: Any): HoloLensCorePackageStringResources
  }
}

public open external class HoloLensCorePackageImageResources {
  public open fun clone(): HoloLensCorePackageImageResources

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HoloLensCorePackageImageResources

    @JsName("C")
    public fun copy(other: Any): HoloLensCorePackageImageResources
  }
}

public open external class HoloLensCorePackageLocalizedResources {
  @JsName("CultureId")
  public open var cultureId: String

  @JsName("Strings")
  public open var strings: HoloLensCorePackageStringResources

  @JsName("Images")
  public open var images: HoloLensCorePackageImageResources

  public open fun clone(): HoloLensCorePackageLocalizedResources

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): HoloLensCorePackageLocalizedResources

    @JsName("C")
    public fun copy(other: Any): HoloLensCorePackageLocalizedResources
  }
}

public open external class HoloLensTargetSettings(
  outer: UObject,
) : UObject {
  @JsName("bBuildForEmulation")
  public open var buildForEmulation: Boolean

  @JsName("bBuildForDevice")
  public open var buildForDevice: Boolean

  @JsName("bUseNameForLogo")
  public open var useNameForLogo: Boolean

  @JsName("bBuildForRetailWindowsStore")
  public open var buildForRetailWindowsStore: Boolean

  @JsName("bAutoIncrementVersion")
  public open var autoIncrementVersion: Boolean

  @JsName("bShouldCreateAppInstaller")
  public open var shouldCreateAppInstaller: Boolean

  @JsName("AppInstallerInstallationURL")
  public open var appInstallerInstallationUrl: String

  @JsName("HoursBetweenUpdateChecks")
  public open var hoursBetweenUpdateChecks: Number

  @JsName("bEnablePIXProfiling")
  public open var enablePixProfiling: Boolean

  @JsName("TileBackgroundColor")
  public open var tileBackgroundColor: Color

  @JsName("SplashScreenBackgroundColor")
  public open var splashScreenBackgroundColor: Color

  @JsName("PerCultureResources")
  public open var perCultureResources: Array<HoloLensCorePackageLocalizedResources>

  @JsName("TargetDeviceFamily")
  public open var targetDeviceFamily: String

  @JsName("MinimumPlatformVersion")
  public open var minimumPlatformVersion: String

  @JsName("MaximumPlatformVersionTested")
  public open var maximumPlatformVersionTested: String

  @JsName("MaxTrianglesPerCubicMeter")
  public open var maxTrianglesPerCubicMeter: Number

  @JsName("SpatialMeshingVolumeSize")
  public open var spatialMeshingVolumeSize: Number

  @JsName("CompilerVersion")
  public open var compilerVersion: String

  @JsName("Windows10SDKVersion")
  public open var windows10sdkVersion: String

  @JsName("CapabilityList")
  public open var capabilityList: Array<String>

  @JsName("DeviceCapabilityList")
  public open var deviceCapabilityList: Array<String>

  @JsName("UapCapabilityList")
  public open var uapCapabilityList: Array<String>

  @JsName("Uap2CapabilityList")
  public open var uap2CapabilityList: Array<String>

  @JsName("bSetDefaultCapabilities")
  public open var setDefaultCapabilities: Boolean

  @JsName("SpatializationPlugin")
  public open var spatializationPlugin: String

  @JsName("ReverbPlugin")
  public open var reverbPlugin: String

  @JsName("OcclusionPlugin")
  public open var occlusionPlugin: String

  @JsName("SoundCueCookQualityIndex")
  public open var soundCueCookQualityIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): HoloLensTargetSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): HoloLensTargetSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): HoloLensTargetSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): HoloLensTargetSettings

    @JsName("C")
    public fun copy(other: UObject): HoloLensTargetSettings

    @JsName("C")
    public fun copy(other: Any): HoloLensTargetSettings
  }
}

@JsName("AndroidSDKSettings")
public open external class AndroidSdkSettings(
  outer: UObject,
) : UObject {
  @JsName("SDKPath")
  public open var sdkPath: DirectoryPath

  @JsName("NDKPath")
  public open var ndkPath: DirectoryPath

  @JsName("JavaPath")
  public open var javaPath: DirectoryPath

  @JsName("SDKAPILevel")
  public open var sdkapiLevel: String

  @JsName("NDKAPILevel")
  public open var ndkapiLevel: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): AndroidSdkSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): AndroidSdkSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): AndroidSdkSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): AndroidSdkSettings

    @JsName("C")
    public fun copy(other: UObject): AndroidSdkSettings

    @JsName("C")
    public fun copy(other: Any): AndroidSdkSettings
  }
}

public open external class LogVisualizerSessionSettings(
  outer: UObject,
) : UObject {
  @JsName("bEnableGraphsVisualization")
  public open var enableGraphsVisualization: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LogVisualizerSessionSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LogVisualizerSessionSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LogVisualizerSessionSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LogVisualizerSessionSettings

    @JsName("C")
    public fun copy(other: UObject): LogVisualizerSessionSettings

    @JsName("C")
    public fun copy(other: Any): LogVisualizerSessionSettings
  }
}

public open external class CategoryFilter {
  @JsName("CategoryName")
  public open var categoryName: String

  @JsName("LogVerbosity")
  public open var logVerbosity: Number

  @JsName("Enabled")
  public open var enabled: Boolean

  public open fun clone(): CategoryFilter

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): CategoryFilter

    @JsName("C")
    public fun copy(other: Any): CategoryFilter
  }
}

public open external class VisualLoggerFiltersData {
  @JsName("SearchBoxFilter")
  public open var searchBoxFilter: String

  @JsName("ObjectNameFilter")
  public open var objectNameFilter: String

  @JsName("Categories")
  public open var categories: Array<CategoryFilter>

  @JsName("SelectedClasses")
  public open var selectedClasses: Array<String>

  public open fun clone(): VisualLoggerFiltersData

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): VisualLoggerFiltersData

    @JsName("C")
    public fun copy(other: Any): VisualLoggerFiltersData
  }
}

public open external class LogVisualizerSettings(
  outer: UObject,
) : UObject {
  @JsName("bIgnoreTrivialLogs")
  public open var ignoreTrivialLogs: Boolean

  @JsName("TrivialLogsThreshold")
  public open var trivialLogsThreshold: Number

  @JsName("bStickToRecentData")
  public open var stickToRecentData: Boolean

  @JsName("bResetDataWithNewSession")
  public open var resetDataWithNewSession: Boolean

  @JsName("bShowHistogramLabelsOutside")
  public open var showHistogramLabelsOutside: Boolean

  @JsName("DefaultCameraDistance")
  public open var defaultCameraDistance: Number

  @JsName("bSearchInsideLogs")
  public open var searchInsideLogs: Boolean

  @JsName("bUseFilterVolumes")
  public open var useFilterVolumes: Boolean

  @JsName("GraphsBackgroundColor")
  public open var graphsBackgroundColor: Color

  @JsName("bPersistentFilters")
  public open var usePersistentFilters: Boolean

  @JsName("bDrawExtremesOnGraphs")
  public open var drawExtremesOnGraphs: Boolean

  @JsName("bConstrainGraphToLocalMinMax")
  public open var constrainGraphToLocalMinMax: Boolean

  @JsName("bUsePlayersOnlyForPause")
  public open var usePlayersOnlyForPause: Boolean

  @JsName("bLogNavOctreeOnStop")
  public open var logNavOctreeOnStop: Boolean

  @JsName("bForceUniqueLogNames")
  public open var forceUniqueLogNames: Boolean

  @JsName("PersistentFilters")
  public open var persistentFilters: VisualLoggerFiltersData

  @JsName("DebugMeshMaterialFakeLight")
  public open var debugMeshMaterialFakeLight: Material

  @JsName("DebugMeshMaterialFakeLightName")
  public open var debugMeshMaterialFakeLightName: String

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LogVisualizerSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LogVisualizerSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LogVisualizerSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LogVisualizerSettings

    @JsName("C")
    public fun copy(other: UObject): LogVisualizerSettings

    @JsName("C")
    public fun copy(other: Any): LogVisualizerSettings
  }
}

public open external class VisualLoggerCameraController(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : DebugCameraController {
  @JsName("PickedActor")
  public open var pickedActor: Actor

  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerCameraController

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerCameraController

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerCameraController

    @JsName("C")
    public fun copy(other: Any): VisualLoggerCameraController
  }
}

@JsName("VisualLoggerHUD")
public open external class VisualLoggerHud(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : DebugCameraHud {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerHud

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerHud

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerHud

    @JsName("C")
    public fun copy(other: Any): VisualLoggerHud
  }
}

public open external class VisualLoggerRenderingActorBase(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerRenderingActorBase

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerRenderingActorBase

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerRenderingActorBase

    @JsName("C")
    public fun copy(other: Any): VisualLoggerRenderingActorBase
  }
}

public open external class VisualLoggerRenderingActor(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : VisualLoggerRenderingActorBase {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerRenderingActor

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerRenderingActor

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerRenderingActor

    @JsName("C")
    public fun copy(other: Any): VisualLoggerRenderingActor
  }
}

public open external class VisualLoggerRenderingComponent(
  outer: UObject,
) : DebugDrawComponent {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): VisualLoggerRenderingComponent

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): VisualLoggerRenderingComponent

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): VisualLoggerRenderingComponent

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): VisualLoggerRenderingComponent

    @JsName("C")
    public fun copy(other: UObject): VisualLoggerRenderingComponent

    @JsName("C")
    public fun copy(other: Any): VisualLoggerRenderingComponent
  }
}

public open external class ClothPainterSettings(
  outer: UObject,
) : MeshPaintSettings {
  @JsName("ViewMin")
  public open var viewMin: Number

  @JsName("ViewMax")
  public open var viewMax: Number

  @JsName("bAutoViewRange")
  public open var autoViewRange: Boolean

  @JsName("AutoCalculatedViewMin")
  public open var autoCalculatedViewMin: Number

  @JsName("AutoCalculatedViewMax")
  public open var autoCalculatedViewMax: Number

  @JsName("ClothingAssets")
  public open var clothingAssets: Array<ClothingAssetCommon>

  @JsName("bFlipNormal")
  public open var flipNormal: Boolean

  @JsName("bCullBackface")
  public open var cullBackface: Boolean

  @JsName("Opacity")
  public open var opacity: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPainterSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPainterSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPainterSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPainterSettings

    @JsName("C")
    public fun copy(other: UObject): ClothPainterSettings

    @JsName("C")
    public fun copy(other: Any): ClothPainterSettings
  }
}

@JsName("ClothPaintTool_BrushSettings")
public open external class ClothPaintToolBrushSettings(
  outer: UObject,
) : UObject {
  @JsName("PaintValue")
  public open var paintValue: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPaintToolBrushSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPaintToolBrushSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPaintToolBrushSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPaintToolBrushSettings

    @JsName("C")
    public fun copy(other: UObject): ClothPaintToolBrushSettings

    @JsName("C")
    public fun copy(other: Any): ClothPaintToolBrushSettings
  }
}

@JsName("ClothPaintTool_GradientSettings")
public open external class ClothPaintToolGradientSettings(
  outer: UObject,
) : UObject {
  @JsName("GradientStartValue")
  public open var gradientStartValue: Number

  @JsName("GradientEndValue")
  public open var gradientEndValue: Number

  @JsName("bUseRegularBrush")
  public open var useRegularBrush: Boolean

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPaintToolGradientSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPaintToolGradientSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPaintToolGradientSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPaintToolGradientSettings

    @JsName("C")
    public fun copy(other: UObject): ClothPaintToolGradientSettings

    @JsName("C")
    public fun copy(other: Any): ClothPaintToolGradientSettings
  }
}

@JsName("ClothPaintTool_SmoothSettings")
public open external class ClothPaintToolSmoothSettings(
  outer: UObject,
) : UObject {
  @JsName("Strength")
  public open var strength: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPaintToolSmoothSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPaintToolSmoothSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPaintToolSmoothSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPaintToolSmoothSettings

    @JsName("C")
    public fun copy(other: UObject): ClothPaintToolSmoothSettings

    @JsName("C")
    public fun copy(other: Any): ClothPaintToolSmoothSettings
  }
}

@JsName("ClothPaintTool_FillSettings")
public open external class ClothPaintToolFillSettings(
  outer: UObject,
) : UObject {
  @JsName("Threshold")
  public open var threshold: Number

  @JsName("FillValue")
  public open var fillValue: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ClothPaintToolFillSettings

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ClothPaintToolFillSettings

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ClothPaintToolFillSettings

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ClothPaintToolFillSettings

    @JsName("C")
    public fun copy(other: UObject): ClothPaintToolFillSettings

    @JsName("C")
    public fun copy(other: Any): ClothPaintToolFillSettings
  }
}

public open external class ActorFactoryLandscape(
  outer: UObject,
) : ActorFactory {
  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): ActorFactoryLandscape

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): ActorFactoryLandscape

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): ActorFactoryLandscape

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): ActorFactoryLandscape

    @JsName("C")
    public fun copy(other: UObject): ActorFactoryLandscape

    @JsName("C")
    public fun copy(other: Any): ActorFactoryLandscape
  }
}

@JsName("ELandscapeToolFlattenMode")
public external object LandscapeToolFlattenMode {
  public var Invalid: String

  public var Both: String

  public var Raise: String

  public var Lower: String

  public var Interval: String

  public var Terrace: String

  @JsName("ELandscapeToolFlattenMode_MAX")
  public var Max: String
}

@JsName("ELandscapeToolErosionMode")
public external object LandscapeToolErosionMode {
  public var Invalid: String

  public var Both: String

  public var Raise: String

  public var Lower: String

  @JsName("ELandscapeToolErosionMode_MAX")
  public var Max: String
}

@JsName("ELandscapeToolHydroErosionMode")
public external object LandscapeToolHydroErosionMode {
  public var Invalid: String

  public var Both: String

  public var Positive: String

  @JsName("ELandscapeToolHydroErosionMode_MAX")
  public var Max: String
}

@JsName("ELandscapeToolNoiseMode")
public external object LandscapeToolNoiseMode {
  public var Invalid: String

  public var Both: String

  public var Add: String

  public var Sub: String

  @JsName("ELandscapeToolNoiseMode_MAX")
  public var Max: String
}

@JsName("ELandscapeToolPasteMode")
public external object LandscapeToolPasteMode {
  public var Invalid: String

  public var Both: String

  public var Raise: String

  public var Lower: String

  @JsName("ELandscapeToolPasteMode_MAX")
  public var Max: String
}

public open external class GizmoImportLayer {
  @JsName("LayerFilename")
  public open var layerFilename: String

  @JsName("LayerName")
  public open var layerName: String

  @JsName("bNoImport")
  public open var noImport: Boolean

  public open fun clone(): GizmoImportLayer

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): GizmoImportLayer

    @JsName("C")
    public fun copy(other: Any): GizmoImportLayer
  }
}

@JsName("ELandscapeMirrorOperation")
public external object LandscapeMirrorOperation {
  public var MinusXToPlusX: String

  public var PlusXToMinusX: String

  public var MinusYToPlusY: String

  public var PlusYToMinusY: String

  public var RotateMinusXToPlusX: String

  public var RotatePlusXToMinusX: String

  public var RotateMinusYToPlusY: String

  public var RotatePlusYToMinusY: String

  @JsName("ELandscapeMirrorOperation_MAX")
  public var Max: String
}

@JsName("ELandscapeConvertMode")
public external object LandscapeConvertMode {
  public var Invalid: String

  public var Expand: String

  public var Clip: String

  public var Resample: String

  @JsName("ELandscapeConvertMode_MAX")
  public var Max: String
}

@JsName("ELandscapeImportResult")
public external object LandscapeImportResult {
  public var Success: String

  public var Warning: String

  public var Error: String

  @JsName("ELandscapeImportResult_MAX")
  public var Max: String
}

@JsName("ELandscapeImportTransformType")
public external object LandscapeImportTransformType {
  public var None: String

  public var ExpandOffset: String

  public var ExpandCentered: String

  public var Resample: String

  @JsName("ELandscapeImportTransformType_MAX")
  public var Max: String
}

public open external class LandscapeImportResolution {
  @JsName("Width")
  public open var width: Any

  @JsName("Height")
  public open var height: Any

  public open fun clone(): LandscapeImportResolution

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeImportResolution

    @JsName("C")
    public fun copy(other: Any): LandscapeImportResolution
  }
}

public open external class LandscapeFileResolution {
  @JsName("Width")
  public open var width: Any

  @JsName("Height")
  public open var height: Any

  public open fun clone(): LandscapeFileResolution

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeFileResolution

    @JsName("C")
    public fun copy(other: Any): LandscapeFileResolution
  }
}

public open external class LandscapeImportFileDescriptor {
  @JsName("Coord")
  public open var coord: IntPoint

  @JsName("FilePath")
  public open var filePath: String

  public open fun clone(): LandscapeImportFileDescriptor

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeImportFileDescriptor

    @JsName("C")
    public fun copy(other: Any): LandscapeImportFileDescriptor
  }
}

public open external class LandscapeImportDescriptor {
  @JsName("ImportResolutions")
  public open var importResolutions: Array<LandscapeImportResolution>

  @JsName("FileResolutions")
  public open var fileResolutions: Array<LandscapeFileResolution>

  @JsName("FileDescriptors")
  public open var fileDescriptors: Array<LandscapeImportFileDescriptor>

  @JsName("Scale")
  public open var scale: Vector

  public open fun clone(): LandscapeImportDescriptor

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeImportDescriptor

    @JsName("C")
    public fun copy(other: Any): LandscapeImportDescriptor
  }
}

@JsName("ELandscapeImportAlphamapType")
public external object LandscapeImportAlphamapType {
  public var Additive: String

  public var Layered: String

  @JsName("ELandscapeImportAlphamapType_MAX")
  public var Max: String
}

public open external class LandscapeImportLayerInfo {
  @JsName("LayerName")
  public open var layerName: String

  @JsName("LayerInfo")
  public open var layerInfo: LandscapeLayerInfoObject

  @JsName("SourceFilePath")
  public open var sourceFilePath: String

  public open fun clone(): LandscapeImportLayerInfo

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeImportLayerInfo

    @JsName("C")
    public fun copy(other: Any): LandscapeImportLayerInfo
  }
}

public open external class LandscapeImportLayer : LandscapeImportLayerInfo {
  @JsName("ThumbnailMIC")
  public open var thumbnailMic: LandscapeMaterialInstanceConstant

  @JsName("ImportResult")
  public open var importResult: String

  @JsName("ErrorMessage")
  public open var errorMessage: String

  @JsName("ExportFilePath")
  public open var exportFilePath: String

  @JsName("bSelected")
  public open var selected: Boolean

  public override fun clone(): LandscapeImportLayer

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapeImportLayer

    @JsName("C")
    public fun copy(other: Any): LandscapeImportLayer
  }
}

public open external class LandscapePatternBrushWorldSpaceSettings {
  @JsName("Origin")
  public open var origin: Vector2d

  @JsName("Rotation")
  public open var rotation: Number

  @JsName("bCenterTextureOnOrigin")
  public open var centerTextureOnOrigin: Boolean

  @JsName("RepeatSize")
  public open var repeatSize: Number

  public open fun clone(): LandscapePatternBrushWorldSpaceSettings

  public companion object {
    @JsName("C")
    public fun copy(other: UObject): LandscapePatternBrushWorldSpaceSettings

    @JsName("C")
    public fun copy(other: Any): LandscapePatternBrushWorldSpaceSettings
  }
}

@JsName("EColorChannel")
public external object ColorChannel {
  public var Red: String

  public var Green: String

  public var Blue: String

  public var Alpha: String

  @JsName("EColorChannel_MAX")
  public var Max: String
}

public open external class LandscapeEditorObject(
  outer: UObject,
) : UObject {
  @JsName("ToolStrength")
  public open var toolStrength: Number

  @JsName("bUseWeightTargetValue")
  public open var useWeightTargetValue: Boolean

  @JsName("WeightTargetValue")
  public open var weightTargetValue: Number

  @JsName("MaximumValueRadius")
  public open var maximumValueRadius: Number

  @JsName("bCombinedLayersOperation")
  public open var combinedLayersOperation: Boolean

  @JsName("FlattenMode")
  public open var flattenMode: String

  @JsName("bUseSlopeFlatten")
  public open var useSlopeFlatten: Boolean

  @JsName("bPickValuePerApply")
  public open var pickValuePerApply: Boolean

  @JsName("bUseFlattenTarget")
  public open var useFlattenTarget: Boolean

  @JsName("FlattenTarget")
  public open var flattenTarget: Number

  @JsName("bShowFlattenTargetPreview")
  public open var showFlattenTargetPreview: Boolean

  @JsName("TerraceInterval")
  public open var terraceInterval: Number

  @JsName("TerraceSmooth")
  public open var terraceSmooth: Number

  @JsName("bFlattenEyeDropperModeActivated")
  public open var flattenEyeDropperModeActivated: Boolean

  @JsName("FlattenEyeDropperModeDesiredTarget")
  public open var flattenEyeDropperModeDesiredTarget: Number

  @JsName("RampWidth")
  public open var rampWidth: Number

  @JsName("RampSideFalloff")
  public open var rampSideFalloff: Number

  @JsName("SmoothFilterKernelSize")
  public open var smoothFilterKernelSize: Number

  @JsName("bDetailSmooth")
  public open var detailSmooth: Boolean

  @JsName("DetailScale")
  public open var detailScale: Number

  @JsName("ErodeThresh")
  public open var erodeThresh: Number

  @JsName("ErodeSurfaceThickness")
  public open var erodeSurfaceThickness: Number

  @JsName("ErodeIterationNum")
  public open var erodeIterationNum: Number

  @JsName("ErosionNoiseMode")
  public open var erosionNoiseMode: String

  @JsName("ErosionNoiseScale")
  public open var erosionNoiseScale: Number

  @JsName("RainAmount")
  public open var rainAmount: Number

  @JsName("SedimentCapacity")
  public open var sedimentCapacity: Number

  @JsName("HErodeIterationNum")
  public open var hErodeIterationNum: Number

  @JsName("RainDistMode")
  public open var rainDistMode: String

  @JsName("RainDistScale")
  public open var rainDistScale: Number

  @JsName("bHErosionDetailSmooth")
  public open var hErosionDetailSmooth: Boolean

  @JsName("HErosionDetailScale")
  public open var hErosionDetailScale: Number

  @JsName("NoiseMode")
  public open var noiseMode: String

  @JsName("NoiseScale")
  public open var noiseScale: Number

  @JsName("bUseSelectedRegion")
  public open var useSelectedRegion: Boolean

  @JsName("bUseNegativeMask")
  public open var useNegativeMask: Boolean

  @JsName("PasteMode")
  public open var pasteMode: String

  @JsName("bApplyToAllTargets")
  public open var applyToAllTargets: Boolean

  @JsName("bSnapGizmo")
  public open var snapGizmo: Boolean

  @JsName("bSmoothGizmoBrush")
  public open var smoothGizmoBrush: Boolean

  @JsName("GizmoHeightmapFilenameString")
  public open var gizmoHeightmapFilenameString: String

  @JsName("GizmoImportSize")
  public open var gizmoImportSize: IntPoint

  @JsName("GizmoImportLayers")
  public open var gizmoImportLayers: Array<GizmoImportLayer>

  @JsName("MirrorPoint")
  public open var mirrorPoint: Vector2d

  @JsName("MirrorOp")
  public open var mirrorOp: String

  @JsName("MirrorSmoothingWidth")
  public open var mirrorSmoothingWidth: Number

  @JsName("BlueprintBrush")
  public open var blueprintBrush: UnrealEngineClass

  @JsName("ResizeLandscape_QuadsPerSection")
  public open var resizeLandscapeQuadsPerSection: Number

  @JsName("ResizeLandscape_SectionsPerComponent")
  public open var resizeLandscapeSectionsPerComponent: Number

  @JsName("ResizeLandscape_ComponentCount")
  public open var resizeLandscapeComponentCount: IntPoint

  @JsName("ResizeLandscape_ConvertMode")
  public open var resizeLandscapeConvertMode: String

  @JsName("NewLandscape_Material")
  public open var newLandscapeMaterial: Any

  @JsName("NewLandscape_QuadsPerSection")
  public open var newLandscapeQuadsPerSection: Number

  @JsName("NewLandscape_SectionsPerComponent")
  public open var newLandscapeSectionsPerComponent: Number

  @JsName("NewLandscape_ComponentCount")
  public open var newLandscapeComponentCount: IntPoint

  @JsName("NewLandscape_Location")
  public open var newLandscapeLocation: Vector

  @JsName("NewLandscape_Rotation")
  public open var newLandscapeRotation: Rotator

  @JsName("NewLandscape_Scale")
  public open var newLandscapeScale: Vector

  @JsName("ImportLandscape_HeightmapImportResult")
  public open var importLandscapeHeightmapImportResult: String

  @JsName("ImportLandscape_HeightmapErrorMessage")
  public open var importLandscapeHeightmapErrorMessage: String

  @JsName("ImportLandscape_HeightmapFilename")
  public open var importLandscapeHeightmapFilename: String

  @JsName("ImportLandscape_Width")
  public open var importLandscapeWidth: Any

  @JsName("ImportLandscape_Height")
  public open var importLandscapeHeight: Any

  @JsName("HeightmapExportFilename")
  public open var heightmapExportFilename: String

  @JsName("ImportLandscape_GizmoLocalPosition")
  public open var importLandscapeGizmoLocalPosition: IntPoint

  @JsName("ImportType")
  public open var importType: String

  @JsName("bHeightmapSelected")
  public open var heightmapSelected: Boolean

  @JsName("bExportEditLayer")
  public open var exportEditLayer: Boolean

  @JsName("HeightmapImportDescriptor")
  public open var heightmapImportDescriptor: LandscapeImportDescriptor

  @JsName("HeightmapImportDescriptorIndex")
  public open var heightmapImportDescriptorIndex: Number

  @JsName("ImportLandscape_Data")
  public open var importLandscapeData: Array<Any>

  @JsName("bCanHaveLayersContent")
  public open var canHaveLayersContent: Boolean

  @JsName("bFlipYAxis")
  public open var flipYAxis: Boolean

  @JsName("WorldPartitionGridSize")
  public open var worldPartitionGridSize: Any

  @JsName("ImportLandscape_AlphamapType")
  public open var importLandscapeAlphamapType: String

  @JsName("ImportLandscape_Layers")
  public open var importLandscapeLayers: Array<LandscapeImportLayer>

  @JsName("BrushRadius")
  public open var brushRadius: Number

  @JsName("BrushFalloff")
  public open var brushFalloff: Number

  @JsName("bUseClayBrush")
  public open var useClayBrush: Boolean

  @JsName("AlphaBrushScale")
  public open var alphaBrushScale: Number

  @JsName("bAlphaBrushAutoRotate")
  public open var alphaBrushAutoRotate: Boolean

  @JsName("AlphaBrushRotation")
  public open var alphaBrushRotation: Number

  @JsName("AlphaBrushPanU")
  public open var alphaBrushPanU: Number

  @JsName("AlphaBrushPanV")
  public open var alphaBrushPanV: Number

  @JsName("bUseWorldSpacePatternBrush")
  public open var useWorldSpacePatternBrush: Boolean

  @JsName("WorldSpacePatternBrushSettings")
  public open var worldSpacePatternBrushSettings: LandscapePatternBrushWorldSpaceSettings

  @JsName("AlphaTexture")
  public open var alphaTexture: Texture2d

  @JsName("AlphaTextureChannel")
  public open var alphaTextureChannel: String

  @JsName("AlphaTextureSizeX")
  public open var alphaTextureSizeX: Number

  @JsName("AlphaTextureSizeY")
  public open var alphaTextureSizeY: Number

  @JsName("AlphaTextureData")
  public open var alphaTextureData: Array<Number>

  @JsName("BrushComponentSize")
  public open var brushComponentSize: Number

  @JsName("PaintingRestriction")
  public open var paintingRestriction: String

  @JsName("TargetDisplayOrder")
  public open var targetDisplayOrder: String

  @JsName("ShowUnusedLayers")
  public open var showUnusedLayers: Boolean

  @JsName("CurrentLayerIndex")
  public open var currentLayerIndex: Number

  public companion object {
    @JsName("Load")
    public fun load(resourceName: String): LandscapeEditorObject

    @JsName("Find")
    public fun find(outer: UObject, resourceName: String): LandscapeEditorObject

    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LandscapeEditorObject

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LandscapeEditorObject

    @JsName("C")
    public fun copy(other: UObject): LandscapeEditorObject

    @JsName("C")
    public fun copy(other: Any): LandscapeEditorObject
  }
}

public open external class LandscapePlaceholder(
  inWorld: World,
  location: Vector,
  rotation: Rotator,
) : Actor {
  public companion object {
    @JsName("GetDefaultObject")
    public fun getDefaultObject(): LandscapePlaceholder

    @JsName("CreateDefaultSubobject")
    public fun createDefaultSubobject(
      name: String,
      transient: Boolean,
      required: Boolean,
      abstract: Boolean,
    ): LandscapePlaceholder

    @JsName("C")
    public fun copy(other: UObject): LandscapePlaceholder

    @JsName("C")
    public fun copy(other: Any): LandscapePlaceholder
  }
}

public external var Context: JavascriptContext

public external var Root: JavascriptEditorTick
